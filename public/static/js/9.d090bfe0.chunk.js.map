{"version":3,"sources":["views/product/Languages.js","../node_modules/@mui/icons-material/esm/Check.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/ButtonGroup/buttonGroupClasses.js","../node_modules/@mui/material/ButtonGroup/ButtonGroup.js","../node_modules/@mui/icons-material/esm/Folder.js","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/ModeEdit.js","../node_modules/@mui/icons-material/esm/DeleteOutline.js","../node_modules/@mui/icons-material/esm/FileUpload.js","../node_modules/@mui/icons-material/esm/Refresh.js","views/product/component/ProductFolder.js","../node_modules/@mui/icons-material/esm/NetworkCheckOutlined.js","../node_modules/@mui/icons-material/esm/Speed.js","../node_modules/@mui/icons-material/esm/ArrowUpward.js","../node_modules/@mui/icons-material/esm/ArrowDownward.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","views/product/component/ProductTable.js","views/product/index.js"],"names":["Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","folderRequired","table","tableHeader","categoryName","productId","subject","status","display","id","is_rts","is_specific","owner_member_display_name","product_type","smart_edit","attributes","keywords","price","payment_methods","min_order_quantity","day","unit_type","gmt_create","gmt_modified","score","tag","customInfo","tableToolbar","menuHide","menuShow","productScore","productDisplayOn","productDisplayOff","productUpdate","productEdit","productCopy","form","KeyInformation","ProductAttributes","productService","rtsProduct","category","attributeMissing","attributeDuplicated","pleaseSelect","selectOrInput","measure","pieces","steps","first","second","finally","previous","next","complete","redirecting","addProduct","productCategoryNeeded","productSubjectNeeded","productDetailsNeeded","productPriceUnitNeeded","productLogisticsModeNeeded","productPortNeeded","productPackagingDescriptionNeeded","productCustomizationNeeded","productTypeNeeded","productWeightNeeded","productPaymentMethodsNeeded","productMeasureNeeded","uneditable","productIdError","categoryError","editPrice","editPeriod","editAll","editDone","nullNotAllowed","MOQError","PriceError","add","remove","cloud","selectFromCloud","choosePhotos","uploadPhotos","removePhotos","toggleSmartEdit","productDescriptionTip","mainPhotoRequired","descriptionOverflow","panel1","panel2","panel3","panel4","addAttributes","clearAttributes","modificationNull","addCustomInfo","clearCustomInfo","modificationDone","numberOnly","addSuccess","updateSuccess","duplicateSuccess","uploadSuccess","productScoreError","basic","potential","super","top","common","yes","no","success","netFail","zhCN","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","Breadcrumbs","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getButtonGroupUtilityClass","buttonGroupClasses","ButtonGroupRoot","grouped","capitalize","orientation","variant","disableElevation","fullWidth","vertical","shape","flexDirection","minWidth","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","marginTop","borderBottomRightRadius","borderRight","borderBottom","borderColor","alpha","main","borderRightColor","borderBottomColor","disabled","action","dark","ButtonGroup","disableFocusRipple","disableRipple","size","slots","context","as","role","ButtonGroupContext","Provider","value","ProductFolder","folderArr","addFolder","setCurrentFolder","folderRefresh","langPack","useState","newFolder","setNewFolder","folderCommand","setFolderCommand","a","queryResult","group_name","refreshFolders","style","marginBottom","Input","sx","type","placeholder","onChange","e","target","trim","Button","startIcon","Check","Cancel","justifyContent","Folder","Select","autoWidth","MenuItem","obj","group_id","Add","Refresh","selectedArr","updatedArr","ProductTable","tableRows","tableColumns","page_size","page","total","localization","columnVisibilityModel","setColumnVisibilityModel","scoreAutoQuery","setScoreAutoQuery","updateProduct","changeProductDisplay","handleChangePage","handleChangeRowsPerPage","duplicateProduct","addDraft","onRowClick","navigate","useNavigate","tableHeight","window","innerHeight","DataGrid","experimentalFeatures","newEditingApi","checkboxSelection","localeText","locale","components","MuiDataGrid","defaultProps","Toolbar","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","csvOptions","utf8WithBom","fileName","Date","valueOf","getTimezoneOffset","toISOString","replace","fontSize","NetworkCheckOutlined","Speed","prev","hidden","ArrowUpward","list","product_id","join","new_display","product_id_list","ArrowDownward","ContentCopy","real_product_id","cat_id","category_id","onCellEditCommit","params","row","field","oldIndex","findIndex","newData","undefined","onStateChange","selection","find","console","log","pageSize","rowCount","columns","onColumnVisibilityModelChange","getRowHeight","rows","rowsPerPageOptions","paginationMode","onPageChange","onPageSizeChange","scoreArr","App","dispatch","useDispatch","globalization","useSelector","state","setLangPack","baseData","loginData","appData","setAppData","parentFolderArr","setFolderArr","setPage","setPage_size","setTotal","setTableColumns","setTableRows","paramObj","ma","productGroupAddQuery","fetchAPI","msg","response","result","res","productGroupAddCheck","getFolders","max","productGroupQuery","productGroupCheck","childIdArr","forEach","useEffect","SET_APPDATA","appProduct","getProductList","tableFormatter","checkScore","cache","getProduct","xml","submitProductSchema","setTimeout","encryptId","productSchemaRenderQuery","param_product_top_publish_request","JSON","stringify","language","productSchemaRenderCheck","catId","editMode","description","queryMethod","productSchemaAddQuery","checkMethod","productSchemaAddCheck","productSchemaUpdateQuery","productSchemaUpdateCheck","xmldom","DOMParser","parseFromString","divDescription","Array","from","node","append","querySelectorAll","outerHTML","encodeNonASCII","Number","group_id1","productListQuery","productListCheck","products","arr","alibaba_product_brief_response","rowData","string","toString","images","main_image","total_item","productDisplayQuery","productDisplayCheck","realLength","checkProductScore","productScoreQuery","productScoreCheck","request","data","tagCn","tagEn","newArr","i","productArr","newObj","updateProductInfo","current_page","productFieldUpdateQuery","productFieldUpdateCheck","headerName","valueGetter","valueFormatter","pc_detail_url","renderCell","href","srcset","split","alt","editable","flex","preProcessEditCellProps","error","Format","splice","sortable","MainCard","title","newPage","newSize"],"mappings":"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","file":"static/js/9.d090bfe0.chunk.js","sourcesContent":["let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found',\r\n            folderRequired: 'please select a folder to continue'\r\n        },\r\n        table: {\r\n            tableHeader: 'Products',\r\n            categoryName: 'category name',\r\n            productId: 'product id',\r\n            subject: 'subject',\r\n            status: 'status',\r\n            display: 'display',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: 'specific',\r\n            owner_member_display_name: 'owner',\r\n            product_type: 'type',\r\n            smart_edit: 'smart edit',\r\n            attributes: 'attributes',\r\n            keywords: 'keywords',\r\n            price: 'price',\r\n            payment_methods: 'payment methods',\r\n            min_order_quantity: 'MOQ(min. order quantity)',\r\n            day: 'day',\r\n            unit_type: 'unit type',\r\n            gmt_create: 'date create',\r\n            gmt_modified: 'date modified',\r\n            score: 'score',\r\n            tag: 'tag',\r\n            customInfo: 'custom info'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            productScore: 'scores',\r\n            productDisplayOn: 'list',\r\n            productDisplayOff: 'delist',\r\n            productUpdate: 'update',\r\n            productEdit: 'edit',\r\n            productCopy: 'copy'\r\n        },\r\n        form: {\r\n            KeyInformation: 'key information',\r\n            ProductAttributes: 'product attributes',\r\n            productService: 'product service',\r\n            rtsProduct: 'ready-to-ship product',\r\n            subject: '128 letters max.',\r\n            category: 'click to change category',\r\n            keywords: '3 keywords max. Comma(,) separated',\r\n            price: 'set price (range)',\r\n            payment_methods: 'payment methods such as T/T, L/C, etc.',\r\n            min_order_quantity: 'optional',\r\n            attributes: 'add or delete',\r\n            attributeMissing: 'attribute missing',\r\n            attributeDuplicated: 'attribute duplicated',\r\n            pleaseSelect: 'please select',\r\n            selectOrInput: 'select or input',\r\n            measure: 'length * width * height (cm)',\r\n            pieces: 'pieces'\r\n        },\r\n        steps: {\r\n            first: 'Edit Attributes',\r\n            second: 'Edit Contents',\r\n            finally: 'Preview & Publish',\r\n            previous: 'Previous',\r\n            next: 'Next',\r\n            complete: 'Complete',\r\n            redirecting: 'Redirecting...',\r\n            addProduct: 'New',\r\n            productCategoryNeeded: 'Please select a specific category',\r\n            productSubjectNeeded: 'Please input product subject',\r\n            productDetailsNeeded: 'Product Details Needed',\r\n            productPriceUnitNeeded: 'Please input price unit',\r\n            productLogisticsModeNeeded: 'Please input logistics mode',\r\n            productPortNeeded: 'Please input shipping port',\r\n            productPackagingDescriptionNeeded: 'Please input packaging description',\r\n            productCustomizationNeeded: 'Please input Product Customization MOQ',\r\n            productTypeNeeded: 'Please select product type',\r\n            productWeightNeeded: 'Please input product weight',\r\n            productPaymentMethodsNeeded: 'Please select payment methods',\r\n            productMeasureNeeded: 'Please input product length * width * height',\r\n            uneditable: 'product is currently uneditable',\r\n            productIdError: 'product id error, pls go back & try again',\r\n            categoryError: 'category error, pls try again',\r\n            editPrice: 'Edit Price',\r\n            editPeriod: 'Edit Production Period',\r\n            editAll: 'Edit All',\r\n            editDone: 'Edit Done',\r\n            nullNotAllowed: 'empty value is not allowed',\r\n            MOQError: 'MOQ should be greater than the previous one',\r\n            PriceError: 'price should be smaller than the previous one',\r\n            add: 'Add',\r\n            remove: 'Remove',\r\n            cloud: 'Cloud',\r\n            selectFromCloud: 'Select from Cloud',\r\n            choosePhotos: 'Choose Photos',\r\n            uploadPhotos: 'Upload Photos',\r\n            removePhotos: 'double click to remove the photo',\r\n            toggleSmartEdit: 'toggle smart edit',\r\n            productDescriptionTip: 'Pictures from Smart Editing are not supported. Remove pictures if you want to modify',\r\n            mainPhotoRequired: 'Need at least one photo',\r\n            descriptionOverflow: 'description length shall be smaller than 60k letters',\r\n            panel1: 'subject, keywords, price, shipping...',\r\n            panel2: 'all kinds of attributes...(attributes cannot be updated when posting new products for the first time. Try to fill the blanks the second time',\r\n            panel3: 'customized service if the MOQ is met...',\r\n            panel4: 'for trade assurance users exclusively...',\r\n            addAttributes: 'Add Attributes',\r\n            clearAttributes: 'Clear Attributes',\r\n            modificationNull: 'No modification made',\r\n            addCustomInfo: 'Add Custom Info',\r\n            clearCustomInfo: 'Clear Custom Info',\r\n            modificationDone: 'Will submit the following modifications:',\r\n            numberOnly: 'Please input number only',\r\n            addSuccess: 'Product added successfully',\r\n            updateSuccess: 'Product updated successfully',\r\n            duplicateSuccess: 'product duplicated successfully',\r\n            uploadSuccess: 'Upload Success',\r\n            productScoreError: 'no score found'\r\n        },\r\n        productScore: {\r\n            basic: 'Basic',\r\n            potential: 'Potential',\r\n            super: 'Super',\r\n            top: 'Top'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            success: 'Success',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在',\r\n            folderRequired: '请选择文件夹'\r\n        },\r\n        table: {\r\n            tableHeader: '产品',\r\n            categoryName: '类目',\r\n            productId: '产品 id',\r\n            subject: '标题',\r\n            status: '审核状态',\r\n            display: '上架状态',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: '规格品',\r\n            owner_member_display_name: '负责人',\r\n            product_type: '商品类型',\r\n            smart_edit: '智能编辑',\r\n            attributes: '属性',\r\n            keywords: '关键词',\r\n            price: '价格',\r\n            payment_methods: '支付方式',\r\n            min_order_quantity: '最小起订量(MOQ)',\r\n            day: '天',\r\n            unit_type: '单位',\r\n            gmt_create: '创建日期',\r\n            gmt_modified: '修改日期',\r\n            score: '产品分',\r\n            tag: '标签',\r\n            customInfo: '定制信息'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            productScore: '产品分',\r\n            productDisplayOn: '上架',\r\n            productDisplayOff: '下架',\r\n            productUpdate: '更新',\r\n            productEdit: '编辑',\r\n            productCopy: '复制'\r\n        },\r\n        form: {\r\n            KeyInformation: '基本信息',\r\n            ProductAttributes: '产品属性',\r\n            productService: '产品服务',\r\n            rtsProduct: 'RTS 产品',\r\n            subject: '128 字符以内',\r\n            category: '点击更换类目',\r\n            keywords: '最多三个关键词，用英文逗号(,)分隔',\r\n            price: '设置价格(区间)',\r\n            payment_methods: '支付方式，例如：T/T，L/C，等',\r\n            min_order_quantity: '选填',\r\n            attributes: '可增可减',\r\n            attributeMissing: '属性缺失',\r\n            attributeDuplicated: '属性重复',\r\n            pleaseSelect: '请选择',\r\n            selectOrInput: '选择或输入',\r\n            measure: '长*宽*高 (cm)',\r\n            pieces: '件'\r\n        },\r\n        steps: {\r\n            first: '属性编辑',\r\n            second: '详情编辑',\r\n            finally: '预览&发布',\r\n            previous: '上一步',\r\n            next: '下一步',\r\n            complete: '完成',\r\n            redirecting: '正在跳转...',\r\n            addProduct: '发品',\r\n            productCategoryNeeded: '请选择详细的产品类目',\r\n            productSubjectNeeded: '请输入产品名称',\r\n            productDetailsNeeded: '请输入产品详情',\r\n            productPriceUnitNeeded: '请选择计量单位',\r\n            productLogisticsModeNeeded: '请选择物流方式',\r\n            productPortNeeded: '请输入海运港口',\r\n            productPackagingDescriptionNeeded: '请输入包装描述',\r\n            productCustomizationNeeded: '请输入产品定制信息',\r\n            productTypeNeeded: '请选择产品类型',\r\n            productWeightNeeded: '请输入产品重量',\r\n            productPaymentMethodsNeeded: '请输入支付方式',\r\n            productMeasureNeeded: '请输入长宽高',\r\n            uneditable: '当前产品不可编辑',\r\n            productIdError: '产品 id 错误，请返回重试',\r\n            categoryError: '类目有误，请重新选择',\r\n            editPrice: '编辑价格',\r\n            editPeriod: '编辑发货期',\r\n            editAll: '编辑全部',\r\n            editDone: '编辑完成',\r\n            nullNotAllowed: '不能为空',\r\n            MOQError: 'MOQ值须大于前一个值',\r\n            PriceError: '价格值须小于前一个值',\r\n            add: '添加',\r\n            remove: '删除',\r\n            cloud: '图库',\r\n            selectFromCloud: '从云端选择',\r\n            choosePhotos: '选择图片',\r\n            uploadPhotos: '上传图片',\r\n            removePhotos: '双击移除图片',\r\n            toggleSmartEdit: '智能编辑切换',\r\n            productDescriptionTip: '提示: 来自【智能编辑】的图片无法编辑，如需修改，请移除所有旧图先',\r\n            mainPhotoRequired: '需要保留至少一张主图',\r\n            descriptionOverflow: '描述长度不能超过6万字符',\r\n            panel1: '标题，关键词，价格，发货...',\r\n            panel2: '各类属性...（发新品初次编辑没法传属性，建议第二次再填）',\r\n            panel3: '定制服务...',\r\n            panel4: '信保用户专属...',\r\n            addAttributes: '添加属性',\r\n            clearAttributes: '移除空白属性',\r\n            addCustomInfo: '添加自定义信息',\r\n            clearCustomInfo: '清理自定义信息',\r\n            modificationNull: '没有任何修改',\r\n            modificationDone: '将提交如下内容:',\r\n            numberOnly: '请输入数字',\r\n            uploadSuccess: '上传成功',\r\n            addSuccess: '产品添加成功',\r\n            updateSuccess: '产品更新成功',\r\n            duplicateSuccess: '产品复制成功',\r\n            productScoreError: '产品分未查到'\r\n        },\r\n        productScore: {\r\n            basic: '低质品',\r\n            potential: '普通品',\r\n            super: '实力优品',\r\n            top: '精品'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            success: '操作成功',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonGroup', slot);\n}\nconst buttonGroupClasses = generateUtilityClasses('MuiButtonGroup', ['root', 'contained', 'outlined', 'text', 'disableElevation', 'disabled', 'fullWidth', 'vertical', 'grouped', 'groupedHorizontal', 'groupedVertical', 'groupedText', 'groupedTextHorizontal', 'groupedTextVertical', 'groupedTextPrimary', 'groupedTextSecondary', 'groupedOutlined', 'groupedOutlinedHorizontal', 'groupedOutlinedVertical', 'groupedOutlinedPrimary', 'groupedOutlinedSecondary', 'groupedContained', 'groupedContainedHorizontal', 'groupedContainedVertical', 'groupedContainedPrimary', 'groupedContainedSecondary']);\nexport default buttonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport buttonGroupClasses, { getButtonGroupUtilityClass } from './buttonGroupClasses';\nimport ButtonGroupContext from './ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [{\n    [`& .${buttonGroupClasses.grouped}`]: styles.grouped\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.color)}`]\n  }, styles.root, styles[ownerState.variant], ownerState.disableElevation === true && styles.disableElevation, ownerState.fullWidth && styles.fullWidth, ownerState.orientation === 'vertical' && styles.vertical];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disabled,\n    disableElevation,\n    fullWidth,\n    orientation,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth', disableElevation && 'disableElevation'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, `grouped${capitalize(variant)}`, `grouped${capitalize(variant)}${capitalize(orientation)}`, `grouped${capitalize(variant)}${capitalize(color)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getButtonGroupUtilityClass, classes);\n};\n\nconst ButtonGroupRoot = styled('div', {\n  name: 'MuiButtonGroup',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'contained' && {\n  boxShadow: theme.shadows[2]\n}, ownerState.disableElevation && {\n  boxShadow: 'none'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, {\n  [`& .${buttonGroupClasses.grouped}`]: _extends({\n    minWidth: 40,\n    '&:not(:first-of-type)': _extends({}, ownerState.orientation === 'horizontal' && {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    }, ownerState.orientation === 'vertical' && {\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      marginLeft: -1\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      marginTop: -1\n    }),\n    '&:not(:last-of-type)': _extends({}, ownerState.orientation === 'horizontal' && {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    }, ownerState.orientation === 'vertical' && {\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    }, ownerState.variant === 'text' && ownerState.orientation === 'horizontal' && {\n      borderRight: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n    }, ownerState.variant === 'text' && ownerState.orientation === 'vertical' && {\n      borderBottom: `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      borderColor: alpha(theme.palette[ownerState.color].main, 0.5)\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      borderRightColor: 'transparent'\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      borderBottomColor: 'transparent'\n    }, ownerState.variant === 'contained' && ownerState.orientation === 'horizontal' && {\n      borderRight: `1px solid ${theme.palette.grey[400]}`,\n      [`&.${buttonGroupClasses.disabled}`]: {\n        borderRight: `1px solid ${theme.palette.action.disabled}`\n      }\n    }, ownerState.variant === 'contained' && ownerState.orientation === 'vertical' && {\n      borderBottom: `1px solid ${theme.palette.grey[400]}`,\n      [`&.${buttonGroupClasses.disabled}`]: {\n        borderBottom: `1px solid ${theme.palette.action.disabled}`\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      borderColor: theme.palette[ownerState.color].dark\n    }, {\n      '&:hover': _extends({}, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n        borderRightColor: 'currentColor'\n      }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n        borderBottomColor: 'currentColor'\n      })\n    }),\n    '&:hover': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: 'none'\n    })\n  }, ownerState.variant === 'contained' && {\n    boxShadow: 'none'\n  })\n}));\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    disableElevation = false,\n    disableFocusRipple = false,\n    disableRipple = false,\n    fullWidth = false,\n    orientation = 'horizontal',\n    size = 'medium',\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    orientation,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const context = React.useMemo(() => ({\n    className: classes.grouped,\n    color,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    size,\n    variant\n  }), [color, disabled, disableElevation, disableFocusRipple, disableRipple, fullWidth, size, variant, classes.grouped]);\n  return /*#__PURE__*/_jsx(ButtonGroupRoot, _extends({\n    as: component,\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(ButtonGroupContext.Provider, {\n      value: context,\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default ButtonGroup;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'ModeEdit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"\n}), 'FileUpload');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, Button, ButtonGroup, Input, Select, MenuItem, Breadcrumbs } from '@mui/material';\r\nimport {\r\n    Folder as FolderIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    Add as AddIcon,\r\n    ModeEdit as EditIcon,\r\n    DeleteOutline as DeleteIcon,\r\n    FileUpload as UploadIcon,\r\n    Refresh as RefreshIcon\r\n} from '@mui/icons-material';\r\n\r\nfunction ProductFolder({ folderArr, currentFolder, addFolder, setCurrentFolder, folderRefresh, langPack }) {\r\n    let [newFolder, setNewFolder] = useState(false);\r\n    let [folderCommand, setFolderCommand] = useState(false);\r\n    async function onFolderAdd() {\r\n        if (!newFolder) return queryResult(false, langPack.folder.needFolderName);\r\n        let result = await addFolder({ group_name: newFolder });\r\n        if (result) {\r\n            setCurrentFolder('');\r\n            refreshFolders();\r\n        }\r\n        return;\r\n    }\r\n    function refreshFolders() {\r\n        setNewFolder('');\r\n        setFolderCommand(false);\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            {!folderCommand ? (\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                    <span>\r\n                        {!folderArr || !folderArr.length ? (\r\n                            <Typography variant=\"body2\" sx={{ display: 'inline' }}>\r\n                                {langPack.folder.folderNull}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Breadcrumbs aria-label=\"breadcrumb\" sx={{ display: 'inline-block', marginRight: '5px' }}>\r\n                                <FolderIcon />\r\n                                <Select\r\n                                    sx={{ height: '30px', minWidth: '100px' }}\r\n                                    autoWidth={true}\r\n                                    value={currentFolder}\r\n                                    onChange={(e) => setCurrentFolder(e.target.value)}\r\n                                >\r\n                                    <MenuItem value={langPack.folder.currentFolder} disabled>\r\n                                        {langPack.folder.currentFolder}\r\n                                    </MenuItem>\r\n                                    {folderArr.map((obj, index) => (\r\n                                        <MenuItem key={index} value={obj.group_id}>\r\n                                            {obj.group_name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </Breadcrumbs>\r\n                        )}\r\n                        <ButtonGroup variant=\"\">\r\n                            <Button onClick={() => setFolderCommand('add')}>\r\n                                <AddIcon />\r\n                            </Button>\r\n                            <Button onClick={() => setFolderCommand('edit')} disabled>\r\n                                <EditIcon />\r\n                            </Button>\r\n                            <Button onClick={() => setFolderCommand('delete')} disabled>\r\n                                <DeleteIcon />\r\n                            </Button>\r\n                            <Button onClick={() => setFolderCommand('upload')} disabled>\r\n                                <UploadIcon />\r\n                            </Button>\r\n                            <Button onClick={folderRefresh}>\r\n                                <RefreshIcon />\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </span>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {folderCommand === 'add' ? (\r\n                        <>\r\n                            <Input\r\n                                sx={{ height: '30px', marginRight: '10px' }}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                type=\"text\"\r\n                                placeholder={langPack.folder.addNewFolder}\r\n                                onChange={(e) => setNewFolder(e.target.value.trim())}\r\n                            />\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderAdd}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nProductFolder.propTypes = {\r\n    localization: PropTypes.object,\r\n    finalDescription: PropTypes.string,\r\n    setFinalDescription: PropTypes.func,\r\n    folderArr: PropTypes.array,\r\n    currentFolder: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    addFolder: PropTypes.func,\r\n    setCurrentFolder: PropTypes.func,\r\n    folderRefresh: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default ProductFolder;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.9 5c-.17 0-.32.09-.41.23l-.07.15-5.18 11.65c-.16.29-.26.61-.26.96 0 1.11.9 2.01 2.01 2.01.96 0 1.77-.68 1.96-1.59l.01-.03L16.4 5.5c0-.28-.22-.5-.5-.5zM1 9l2 2c2.88-2.88 6.79-4.08 10.53-3.62l1.19-2.68C9.89 3.84 4.74 5.27 1 9zm20 2 2-2c-1.64-1.64-3.55-2.82-5.59-3.57l-.53 2.82c1.5.62 2.9 1.53 4.12 2.75zm-4 4 2-2c-.8-.8-1.7-1.42-2.66-1.89l-.55 2.92c.42.27.83.59 1.21.97zM5 13l2 2c1.13-1.13 2.56-1.79 4.03-2l1.28-2.88c-2.63-.08-5.3.87-7.31 2.88z\"\n}), 'NetworkCheckOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.38 8.57-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83z\"\n}), 'Speed');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button } from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    ContentCopy as ContentCopyIcon,\r\n    ContentCopyTwoTone as ContentCopyTwoToneIcon,\r\n    Speed as SpeedIcon,\r\n    Check as CheckIcon,\r\n    NetworkCheckOutlined as NetworkCheckOutlinedIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ModeEdit as EditIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarFilterButton,\r\n    GridToolbarExport,\r\n    GridToolbarDensitySelector,\r\n    zhCN\r\n} from '@mui/x-data-grid';\r\n\r\nlet selectedArr = []; //当前选中的产品id，需要转换成加密id才可以调用API\r\nlet updatedArr = []; //更新了的行\r\nfunction ProductTable({\r\n    tableRows,\r\n    tableColumns,\r\n    page_size,\r\n    page,\r\n    total,\r\n    localization,\r\n    langPack,\r\n    columnVisibilityModel,\r\n    setColumnVisibilityModel,\r\n    scoreAutoQuery,\r\n    setScoreAutoQuery,\r\n    updateProduct,\r\n    changeProductDisplay,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    duplicateProduct,\r\n    addDraft,\r\n    onRowClick\r\n}) {\r\n    const navigate = useNavigate(); //react-router-dom\r\n    //DataGrid toolbar;\r\n    const tableHeight = window.innerHeight < 700 ? 350 : window.innerHeight - 350;\r\n    const onStateChange = (obj) => {\r\n        let { selection } = obj;\r\n        if (selection.length === selectedArr.length) return;\r\n        selectedArr = selection.map((id) => tableRows.find((obj) => obj.id === id));\r\n        console.log(selectedArr.length + ' selected');\r\n    }; //勾选\r\n    const onCellEditCommit = (params) => {\r\n        let { id, row, field, value } = params;\r\n        let oldIndex = tableRows.findIndex((obj) => obj.id === id);\r\n        if (oldIndex === -1) return; //没找到?\r\n        let oldValue = tableRows[oldIndex][field];\r\n        if (oldValue === value) {\r\n            updatedArr[oldIndex] = undefined;\r\n            return;\r\n        } //先对比原始数据，如果没有改变，则不更新\r\n        let newData = { ...row, [field]: value };\r\n        updatedArr[oldIndex] = newData; //不管改不改，先存着再说\r\n        return;\r\n    };\r\n    return (\r\n        <div style={{ height: tableHeight, width: '100%' }}>\r\n            <DataGrid\r\n                experimentalFeatures={{ newEditingApi: true }}\r\n                checkboxSelection={true}\r\n                localeText={localization.locale === 'zhCN' ? zhCN.components.MuiDataGrid.defaultProps.localeText : {}}\r\n                components={{\r\n                    Toolbar: () => (\r\n                        <GridToolbarContainer>\r\n                            <GridToolbarColumnsButton />\r\n                            <GridToolbarFilterButton />\r\n                            <GridToolbarDensitySelector />\r\n                            <GridToolbarExport\r\n                                csvOptions={{\r\n                                    utf8WithBom: true,\r\n                                    fileName:\r\n                                        langPack.table.tableHeader +\r\n                                        '_' +\r\n                                        new Date(new Date().valueOf() - new Date().getTimezoneOffset() * 60 * 1000)\r\n                                            .toISOString()\r\n                                            .replace(/T.*/, '')\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                startIcon={scoreAutoQuery ? <NetworkCheckOutlinedIcon /> : <SpeedIcon />}\r\n                                onClick={() => {\r\n                                    setScoreAutoQuery((prev) => !prev);\r\n                                }}\r\n                            >\r\n                                {langPack.tableToolbar.productScore}\r\n                            </Button>\r\n                            <Button sx={{ padding: '4px 5px', fontSize: '13px' }} startIcon={<AddIcon />} onClick={addDraft}>\r\n                                {langPack.steps.addProduct}\r\n                            </Button>\r\n                            <span hidden={!selectedArr.length}>\r\n                                <Button\r\n                                    sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                    startIcon={<ArrowUpwardIcon />}\r\n                                    onClick={() => {\r\n                                        let list = selectedArr.map((obj) => obj.product_id).join(',');\r\n                                        changeProductDisplay({\r\n                                            new_display: 'on',\r\n                                            product_id_list: list\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {langPack.tableToolbar.productDisplayOn}\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                    startIcon={<ArrowDownwardIcon />}\r\n                                    onClick={() => {\r\n                                        let list = selectedArr.map((obj) => obj.product_id).join(',');\r\n                                        changeProductDisplay({\r\n                                            new_display: 'off',\r\n                                            product_id_list: list\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {langPack.tableToolbar.productDisplayOff}\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                    startIcon={<ContentCopyIcon />}\r\n                                    disabled={selectedArr.length !== 1}\r\n                                    onClick={async () => {\r\n                                        if (!selectedArr.length) return;\r\n                                        let real_product_id = selectedArr.map((obj) => obj.id).join(',');\r\n                                        let cat_id = selectedArr.map((obj) => obj.category_id).join(',');\r\n                                        await duplicateProduct({ real_product_id, cat_id });\r\n                                        return;\r\n                                    }}\r\n                                >\r\n                                    {langPack.tableToolbar.productCopy}\r\n                                </Button>\r\n                                <Button\r\n                                    sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                    startIcon={<EditIcon />}\r\n                                    disabled={selectedArr.length !== 1}\r\n                                    onClick={() => {\r\n                                        if (!selectedArr.length) return;\r\n                                        let product_id = selectedArr.map((obj) => obj.product_id).join(',');\r\n                                        navigate(`/product/product_id=${product_id}`);\r\n                                        return;\r\n                                    }}\r\n                                >\r\n                                    {langPack.tableToolbar.productEdit}\r\n                                </Button>\r\n                            </span>\r\n                            <span hidden={!updatedArr.length}>\r\n                                <Button\r\n                                    color=\"error\"\r\n                                    sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                    startIcon={<CheckIcon />}\r\n                                    onClick={async () => {\r\n                                        await updateProduct(updatedArr);\r\n                                        updatedArr = [];\r\n                                    }}\r\n                                >\r\n                                    {langPack.tableToolbar.productUpdate}\r\n                                </Button>\r\n                            </span>\r\n                        </GridToolbarContainer>\r\n                    )\r\n                }}\r\n                onRowClick={onRowClick}\r\n                onCellEditCommit={onCellEditCommit}\r\n                onStateChange={onStateChange}\r\n                page={page}\r\n                pageSize={page_size}\r\n                rowCount={total}\r\n                columns={tableColumns}\r\n                columnVisibilityModel={columnVisibilityModel}\r\n                onColumnVisibilityModelChange={setColumnVisibilityModel}\r\n                getRowHeight={() => 88}\r\n                rows={tableRows}\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                paginationMode=\"server\"\r\n                onPageChange={handleChangePage}\r\n                onPageSizeChange={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nProductTable.propTypes = {\r\n    tableRows: PropTypes.array,\r\n    tableColumns: PropTypes.array,\r\n    page_size: PropTypes.number,\r\n    page: PropTypes.number,\r\n    total: PropTypes.number,\r\n    localization: PropTypes.object,\r\n    langPack: PropTypes.object,\r\n    columnVisibilityModel: PropTypes.object,\r\n    setColumnVisibilityModel: PropTypes.func,\r\n    scoreAutoQuery: PropTypes.bool,\r\n    setScoreAutoQuery: PropTypes.func,\r\n    updateProduct: PropTypes.func,\r\n    addDraft: PropTypes.func,\r\n    changeProductDisplay: PropTypes.func,\r\n    handleChangePage: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func,\r\n    duplicateProduct: PropTypes.func,\r\n    onRowClick: PropTypes.func\r\n};\r\n\r\nexport default ProductTable;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SET_APPDATA } from 'store/actions';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { Languages } from './Languages';\nimport ProductFolder from './component/ProductFolder';\nimport ProductTable from './component/ProductTable';\n\n// ==============================|| SINGLE PAGE APPLICATION ||============================== //\nlet scoreArr = []; //产品分数据，暂存\nconst App = () => {\n    console.log('product app running');\n    const dispatch = useDispatch();\n    const navigate = useNavigate(); //react-router-dom\n    const globalization = useSelector((state) => state.globalization);\n    const localization = useSelector((state) => state.localization); //read only (language related)\n    let [langPack, setLangPack] = useState(Languages[localization.locale]); //currentLanguage\n    const [loginData] = useState(globalization.baseData.loginData);\n    let [appData, setAppData] = useState(globalization.appData); //全局数据暂存\n\n    //states [所有文件夹 ， 当前文件夹 ， 当前页 ， 页面大小，总数]\n    let parentFolderArr = []; //临时存放下文件夹id，因为数据不返回名字，还需要遍历下\n    let [folderArr, setFolderArr] = useState([]);\n    let [currentFolder, setCurrentFolder] = useState(langPack.folder.currentFolder);\n    let [page, setPage] = useState(0);\n    let [page_size, setPage_size] = useState(10);\n    let [total, setTotal] = useState(0);\n\n    //data grid 相关\n    let [tableColumns, setTableColumns] = useState([]);\n    let [tableRows, setTableRows] = useState([]);\n    let [columnVisibilityModel, setColumnVisibilityModel] = useState({});\n    let [scoreAutoQuery, setScoreAutoQuery] = useState(false);\n\n    useEffect(() => {\n        dispatch({ type: SET_APPDATA, appData });\n    }, [dispatch, appData]); //全局数据修改，因为登录\n\n    useEffect(() => {\n        if (folderArr.length && tableRows.length) {\n            setAppData({ ...globalization.appData, appProduct: { folderArr, tableRows, total, currentFolder } });\n        }\n        return () => {};\n    }, [folderArr, tableRows]); //订阅全局数据变化\n\n    useEffect(() => {\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) {\n            getProductList();\n            setPage(0);\n            tableFormatter();\n        }\n        return; //更换文件夹时\n    }, [currentFolder]);\n\n    useEffect(() => {\n        setLangPack(Languages[localization.locale]);\n        return; //语言切换\n    }, [localization.locale]);\n\n    useEffect(() => {\n        if (tableRows.length && scoreAutoQuery) {\n            checkScore();\n        } else {\n            tableFormatter();\n        }\n        return () => {};\n    }, [tableRows, scoreAutoQuery]); //订阅表格变化\n\n    useEffect(() => {\n        return () => {};\n    }, [globalization.appData]); //订阅全局数据变化\n\n    useEffect(() => {\n        console.log('I want products');\n        if (!loginData) return navigate('/');\n        let cache = globalization.appData.appProduct;\n        if (cache) {\n            if (!cache.folderArr || !cache.folderArr.length) getFolders();\n            else setFolderArr(cache.folderArr);\n            if (!cache.tableRows || !cache.tableRows.length) getProductList();\n            else setTableRows(cache.tableRows);\n            if (cache.total) setTotal(cache.total);\n            setCurrentFolder(cache.currentFolder);\n        } //读取缓存\n        else {\n            getFolders();\n            getProductList();\n        }\n        //初始化\n        tableFormatter();\n        return () => {\n            console.log('I leave products');\n        }; //载入 & 清理\n    }, []);\n\n    //____________一些函数_______________________________________________\n\n    async function addFolder(obj) {\n        let paramObj = ma.productGroupAddQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productGroupAddCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(status, result);\n        let { group_id, group_name } = result;\n        setFolderArr([...folderArr, { group_id, group_name }]);\n    } //新增文件夹\n    async function getFolders(obj, max) {\n        let paramObj = ma.productGroupQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productGroupCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        if (!obj) {\n            parentFolderArr = []; //清空下\n            //获取主目录，然后开始遍历\n            let childIdArr = result['children_id_list']['number'];\n            if (!childIdArr || !childIdArr.length) return;\n            childIdArr.forEach((id) => getFolders({ group_id: id }, childIdArr.length));\n        } else {\n            let { group_id, group_name } = result;\n            parentFolderArr.push({ group_id, group_name });\n            if (parentFolderArr.length === max) setFolderArr(parentFolderArr);\n        }\n    } //获取文件夹列表\n\n    async function addDraft() {\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) {\n            return navigate('/product/draft/' + currentFolder);\n        } else return queryResult(false, langPack.folder.folderRequired);\n    } //发产品至草稿箱\n\n    let duplicateProduct = async (obj) => {\n        console.log('duplicating...');\n        let { real_product_id, cat_id } = obj;\n        let xml = await getProduct({ product_id: real_product_id });\n        if (!xml) return console.log('product schema error');\n        let draftResult = await submitProductSchema(xml, cat_id, 'duplicate');\n        return setTimeout(getProductList, 2000);\n        if (draftResult && draftResult.product_id) {\n            let draft_id = draftResult.product_id;\n            let encryptId = await getProductEncryptId({ product_id: draft_id });\n            if (encryptId) {\n                queryResult(true, langPack.steps.redirecting);\n                return setTimeout(() => navigate(`/product/product_id=${encryptId}`), 1234);\n            }\n        } //发布到草稿箱的\n    }; //创建副本 (①获取模板 ②获取范本 ③提交)\n\n    async function getProduct(obj) {\n        let paramObj = ma.productSchemaRenderQuery({\n            param_product_top_publish_request: JSON.stringify({\n                ...obj,\n                language: localization.locale === 'enUS' ? 'en_US' : 'zh'\n            })\n        });\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productSchemaRenderCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(status, result);\n        return result;\n    } //获取 现有产品信息  &  编辑模板\n\n    async function getProductEncryptId(obj) {\n        let paramObj = ma.productEncryptIdQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productEncryptIdCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(status, result);\n        return result;\n    } //获取 加密后的ID，方便进行产品编辑\n\n    function onDescriptionChange(value) {\n        if (!value || !value.trim()) return; //校验\n        let valueSaver = value.trim().encodeNonASCII();\n        if (valueSaver.length > 50000) return queryResult(false, langPack.form.descriptionOverflow);\n        let xml_productDescription = `<field id=\"superText\" name=\"Custom Description \" type=\"input\"><value>${valueSaver}</value></field>`;\n        let xml_productType = `<field id=\"productDescType\" type=\"singleCheck\"><value>2</value></field>`;\n        let xml = '<div>' + xml_productDescription + xml_productType + '</div>';\n        return xml; //通知父组件\n    } //产品详情打包\n\n    async function submitProductSchema(xml, catId, editMode, real_product_id, description) {\n        let queryMethod;\n        let checkMethod;\n        let productId;\n        if (editMode === 'add') {\n            queryMethod = ma.productSchemaAddQuery;\n            checkMethod = ma.productSchemaAddCheck;\n        } /* else if (editMode === 'duplicate') {\n            queryMethod = ma.productSchemaAddDraftQuery;\n            checkMethod = ma.productSchemaAddDraftCheck;\n        } */ else {\n            queryMethod = ma.productSchemaUpdateQuery;\n            checkMethod = ma.productSchemaUpdateCheck;\n            productId = real_product_id;\n        }\n        let xmldom = new DOMParser().parseFromString(xml, 'text/xml');\n        if (description) {\n            xmldom.children[0].querySelector('field#productDescType').remove();\n            xmldom.children[0].querySelector('field#superText').remove();\n            let divDescription = new DOMParser().parseFromString(description, 'text/xml');\n            Array.from(divDescription.children).forEach((node) => xmldom.children[0].append(node));\n        } //产品详情替换（如果有必要的话）\n        Array.from(xmldom.querySelectorAll('itemSchema > field > rules, options, label-group, fields')).forEach((node) => node.remove());\n        Array.from(xmldom.children[0].children).forEach((node) => (!node.children.length ? node.remove() : ''));\n        xml = xmldom.children[0].outerHTML;\n        xml = xml.encodeNonASCII();\n        let params = {\n            xml,\n            cat_id: Number(catId),\n            language: localization.locale === 'enUS' ? 'en_US' : 'zh'\n        };\n        if (productId) params.product_id = productId;\n        let paramObj = queryMethod({\n            param_product_top_publish_request: JSON.stringify(params)\n        });\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = checkMethod(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(status, result);\n        queryResult(\n            true,\n            editMode === 'add'\n                ? langPack.steps.addSuccess\n                : editMode === 'duplicate'\n                ? langPack.steps.duplicateSuccess\n                : langPack.steps.updateSuccess\n        );\n        return result;\n    } //发品（添加/修改）\n\n    async function getProductList(obj) {\n        if (!obj) obj = {};\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) {\n            obj.group_id1 = currentFolder;\n        } //子分组\n        let paramObj = ma.productListQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productListCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        if (tableColumns.find((obj) => obj.field === 'final_score')) tableFormatter();\n        if (result.products) {\n            let arr = result.products.alibaba_product_brief_response;\n            if (!arr || !arr.length) return;\n            let rowData = arr.map((obj) => {\n                return {\n                    ...obj,\n                    keywords: obj.keywords ? obj.keywords.string.toString() : '',\n                    images: obj.main_image ? obj.main_image.images.string.toString() : ''\n                };\n            }); //Flatten the data structure to make a easy post\n            setTableRows(rowData);\n            setTotal(result.total_item);\n            return;\n        }\n        setTableRows([]);\n        setTotal(0);\n        return;\n    } //获取产品列表\n\n    async function changeProductDisplay(obj) {\n        if (!obj) return false;\n        let paramObj = ma.productDisplayQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productDisplayCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        setTimeout(getProductList, 2000);\n        return;\n    } //产品上下架\n\n    async function checkScore() {\n        if (!tableRows.length) return;\n        scoreArr = [];\n        scoreArr.realLength = 0;\n        tableRows.forEach((obj) => {\n            console.log('checking scores');\n            let { product_id } = obj;\n            checkProductScore({ product_id });\n        });\n        return;\n    } //订单资金`批量查询\n\n    async function checkProductScore(obj) {\n        let paramObj = ma.productScoreQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        let res = ma.productScoreCheck(msg);\n        let { product_id } = res.request.data;\n        let index = tableRows.findIndex((obj) => obj.product_id === product_id);\n        if (index === -1) {\n            scoreArr = [];\n            return;\n        } //没有找到对应的产品，可能刷新了\n        let { status, result } = res.response;\n        if (!status) {\n            //网络异常 or 没查到\n            scoreArr[index] = {};\n            queryResult(false, langPack.steps.productScoreError);\n        } else {\n            localization.locale === 'zhCN' ? (result.tag = result.tagCn) : (result.tag = result.tagEn);\n            scoreArr[index] = result;\n        }\n        scoreArr.realLength++;\n        if (scoreArr.realLength !== tableRows.length) return; //还未集齐\n        setTableRows((prev) => {\n            let newArr = [];\n            for (let i = 0; i < prev.length; i++) {\n                newArr.push({ ...prev[i], ...scoreArr[i] });\n            }\n            console.log(newArr);\n            return newArr;\n        });\n        scoreArr = [];\n        tableFormatter({ score: true });\n        return;\n    } //产品分`批量查询\n    async function updateProduct(productArr) {\n        if (!productArr || !productArr.length) return;\n        for (let obj of productArr) {\n            if (!obj) continue;\n            let { category_id, keywords, /* main_image, */ product_type, subject, product_id } = obj;\n            let newObj = { category_id, keywords, product_type, subject, product_id };\n            await updateProductInfo(newObj);\n        }\n        setTimeout(() => {\n            getProductList({ current_page: page + 1, page_size });\n        }, 2000); //数据更新可能有延迟，缓冲下\n        return;\n    } //产品信息更新\n    async function updateProductInfo(obj) {\n        let paramObj = ma.productFieldUpdateQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\n        let res = ma.productFieldUpdateCheck(msg);\n        let { status, result } = res.response;\n        queryResult(status, result);\n        console.log(result);\n        return true;\n    } //更新产品信息\n\n    const folderRefresh = async () => {\n        getProductList({ current_page: page + 1, page_size });\n    };\n\n    //____________ ProductTable functions ___________________________________________________\n    function tableFormatter(obj) {\n        const columns = [\n            {\n                field: 'imgWithURL',\n                headerName: langPack.table.tableHeader,\n                minWidth: 50,\n                valueGetter: ({ row }) => row,\n                valueFormatter: ({ value }) => value.pc_detail_url,\n                renderCell: ({ value }) => (\n                    <a href={value.pc_detail_url} target=\"_blank\">\n                        <img {...srcset(value.images.split(',')[0], 100, 100, 1, 1)} alt=\"mainPic\" />\n                    </a>\n                )\n            },\n            {\n                field: 'id',\n                headerName: langPack.table.id\n            },\n            {\n                field: 'subject',\n                editable: true,\n                minWidth: 300,\n                headerName: langPack.table.subject\n            },\n            {\n                field: 'keywords',\n                editable: true,\n                flex: 1,\n                headerName: langPack.table.keywords,\n                preProcessEditCellProps: (params) => {\n                    let { value } = params.props;\n                    if (value) {\n                        let newArr = value.split(',');\n                        if (newArr.length > 3) {\n                            newArr.length = 3;\n                            queryResult(false, langPack.form.keywords);\n                            let keywords = newArr.join(',');\n                            return { ...params.props, keywords, error: true };\n                        }\n                    }\n                    return params.props;\n                } //修改校验\n            },\n            {\n                field: 'status',\n                flex: 0.5,\n                headerName: langPack.table.status\n            },\n            {\n                field: 'display',\n                flex: 0.5,\n                headerName: langPack.table.display\n            },\n            {\n                field: 'is_rts',\n                flex: 0.5,\n                headerName: langPack.table.is_rts\n            },\n            {\n                field: 'is_specific',\n                flex: 0.5,\n                headerName: langPack.table.is_specific\n            },\n            {\n                field: 'owner_member_display_name',\n                flex: 0.5,\n                headerName: langPack.table.owner_member_display_name\n            },\n            {\n                field: 'product_type',\n                flex: 0.5,\n                headerName: langPack.table.product_type\n            },\n            {\n                field: 'smart_edit',\n                flex: 0.5,\n                headerName: langPack.table.smart_edit\n            },\n            {\n                field: 'gmt_create',\n                flex: 0.5,\n                valueGetter: ({ row }) => row,\n                valueFormatter: ({ value }) => new Date(value.gmt_create).Format('yyyy-MM-dd hh:mm'),\n                headerName: langPack.table.gmt_create\n            },\n            {\n                field: 'gmt_modified',\n                flex: 0.5,\n                valueGetter: ({ row }) => row,\n                valueFormatter: ({ value }) => new Date(value.gmt_modified).Format('yyyy-MM-dd hh:mm'),\n                headerName: langPack.table.gmt_modified\n            }\n        ];\n        if (obj) {\n            let { score } = obj;\n            if (score) {\n                columns.splice(\n                    5,\n                    0,\n                    {\n                        field: 'final_score',\n                        headerName: langPack.table.score,\n                        flex: 0.5,\n                        sortable: true\n                    },\n                    {\n                        field: 'tag',\n                        headerName: langPack.table.tag,\n                        flex: 0.5,\n                        sortable: true\n                    }\n                ); // inserts\n            }\n        }\n        setTableColumns(columns);\n        setColumnVisibilityModel({\n            id: false, //产品id, 不太用得到\n            is_rts: false, //RTS品，仅CGS\n            is_specific: false, //规格品？不解\n            owner_member_display_name: false, //产品负责人？一般为主账号\n            product_type: false, //商品类型\n            smart_edit: false //智能编辑\n        });\n    }\n\n    const handleChangePage = (newPage) => {\n        setPage(newPage);\n        getProductList({ current_page: newPage + 1, page_size });\n    }; //翻页\n    const handleChangeRowsPerPage = (newSize) => {\n        setPage_size(newSize);\n        getProductList({ current_page: page + 1, page_size: newSize });\n    }; //页面大小调整\n    const onRowClick = (obj, e) => {\n        // let { id, row } = obj;\n    }; //单元格点击\n\n    //____________JSX函数_______________________________________________\n\n    return (\n        <MainCard title=\"Products --产品\">\n            <ProductFolder\n                folderArr={folderArr}\n                currentFolder={currentFolder}\n                addFolder={addFolder}\n                setCurrentFolder={setCurrentFolder}\n                folderRefresh={folderRefresh}\n                langPack={langPack}\n            />\n            <ProductTable\n                tableRows={tableRows}\n                tableColumns={tableColumns}\n                page_size={page_size}\n                page={page}\n                total={total}\n                localization={localization}\n                langPack={langPack}\n                columnVisibilityModel={columnVisibilityModel}\n                setColumnVisibilityModel={setColumnVisibilityModel}\n                scoreAutoQuery={scoreAutoQuery}\n                setScoreAutoQuery={setScoreAutoQuery}\n                addDraft={addDraft}\n                updateProduct={updateProduct}\n                changeProductDisplay={changeProductDisplay}\n                handleChangePage={handleChangePage}\n                handleChangeRowsPerPage={handleChangeRowsPerPage}\n                duplicateProduct={duplicateProduct}\n                onRowClick={onRowClick}\n            />\n        </MainCard>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}