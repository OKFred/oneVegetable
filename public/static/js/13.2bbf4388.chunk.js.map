{"version":3,"sources":["views/product/Languages.js","views/product/component/Confirmation.js","views/product/component/EditStep.js","views/product/component/PhotoGallery.js","views/product/component/ProductSummary.js","views/product/component/ProductAttribute.js","views/product/component/ProductService.js","views/product/component/ProductRTS.js","views/product/component/ProductDescription.js","views/product/ProductEdit.js"],"names":["Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","folderRequired","table","tableHeader","categoryName","productId","subject","status","display","id","is_rts","is_specific","owner_member_display_name","product_type","smart_edit","attributes","keywords","price","payment_methods","min_order_quantity","day","unit_type","gmt_create","gmt_modified","score","tag","customInfo","tableToolbar","menuHide","menuShow","productScore","productDisplayOn","productDisplayOff","productUpdate","productEdit","productCopy","form","KeyInformation","ProductAttributes","productService","rtsProduct","category","attributeMissing","attributeDuplicated","pleaseSelect","selectOrInput","measure","pieces","steps","first","second","finally","previous","next","complete","redirecting","addProduct","productCategoryNeeded","productSubjectNeeded","productDetailsNeeded","productPriceUnitNeeded","productLogisticsModeNeeded","productPortNeeded","productPackagingDescriptionNeeded","productCustomizationNeeded","productTypeNeeded","productWeightNeeded","productPaymentMethodsNeeded","productMeasureNeeded","uneditable","productIdError","categoryError","editPrice","editPeriod","editAll","editDone","nullNotAllowed","MOQError","PriceError","add","remove","cloud","selectFromCloud","choosePhotos","uploadPhotos","removePhotos","toggleSmartEdit","productDescriptionTip","mainPhotoRequired","descriptionOverflow","panel1","panel2","panel3","panel4","addAttributes","clearAttributes","modificationNull","addCustomInfo","clearCustomInfo","modificationDone","numberOnly","addSuccess","updateSuccess","duplicateSuccess","uploadSuccess","productScoreError","basic","potential","super","top","common","yes","no","success","netFail","zhCN","Confirmation","langPack","productModified","modificationSubmission","navigate","useNavigate","modifiedKeys","Object","keys","length","variant","map","key","align","startIcon","onClick","EditStep","activeStep","setActiveStep","useState","Stepper","label","Step","StepLabel","ButtonGroup","color","disableElevation","sx","flexDirection","pt","paddingBottom","Button","disabled","prevActiveStep","mr","Box","flex","Photo","Loadable","lazy","PhotoGallery","productGroupSaver","paymentMethodSaver","logisticsSaver","priceSaver","periodSaver","productTypeSaver","xmlSchema","onModified","photoCols","rowHeight","xmlGetField","imageObj","setImageObj","cloudImageArr","setCloudImageArr","dialogOpen","setDialogOpen","onImageChange","method","valueArr","newObj","imageArr","_values","newArr","queryResult","forEach","valueObj","filter","obj","value","index","replace","valueTagName","setter","valueTemplates","DOMParser","parseFromString","xml","outerHTML","firstChild","querySelectorAll","valueSaver","innerHTML","querySelector","newXml","append","useEffect","scImages","fieldObj","values","sort","a","b","Number","exec","getImageObj","onDialogClose","submit","url","ImageList","cols","marginTop","marginBottom","gap","ImageListItem","rows","src","alt","loading","ImageListItemBar","background","title","position","actionIcon","Tooltip","IconButton","onDoubleClick","StarBorder","actionPosition","right","size","deletedImage","splice","onPhotoReorder","SwitchLeft","style","justifyContent","height","CloudQueue","Dialog","onClose","open","DialogTitle","onPhotoSelected","App","attributeSaver","group_id","console","log","productGroupObj","setProductGroupObj","productTypeObj","setProductTypeObj","subjectObj","setSubjectObj","keywordObj","setKeywordObj","paymentMethodObj","setPaymentMethodObj","priceUnitObj","setPriceUnitObj","MOQObj","setMOQObj","priceObj","setPriceObj","priceEdit","setPriceEdit","ladderPeriodObj","setLadderPeriodObj","periodEdit","setPeriodEdit","portObj","setPortObj","logisticsModeObj","setLogisticsObj","packagingDescriptionObj","setPackagingDescriptionObj","supplyAbilityObj","setSupplyAbilityObj","onMOQChanged","productGroup","market","productTitle","productKeywords","minOrderQuantity","paymentMethod","priceUnit","ladderPrice","ladderPeriod","port","logisticsMode","wholeSalePkgDesc","supply","trim","valueTemplate","onProductGroupChange","getProductGroupObj","_options","options","displayName","_productTypeObj","onProductTypeChange","find","getProductTypeObj","getSubjectObj","join","getKeywordObj","getMOQObj","getPaymentMethodObj","getPriceUnitObj","type","quantity","getPriceObj","getLadderPeriodObj","getPortObj","getLogisticsObj","getPackaingDescriptionObj","getSupplyAbilityObj","onPriceSave","onPriceChange","mode","priceArr","pop","prev","onPeriodSave","onPeriodChange","newField","supply_number","time_unit","quantity_unit","Array","from","node","onSupplyAbilityChange","TextField","margin","fullWidth","Typography","name","defaultValue","onBlur","e","onSubjectChange","target","JSON","stringify","split","keyword","onKeywordChange","Autocomplete","multiple","limitTags","disableCloseOnSelect","predefinedMethodTemplate","valueStr","onChange","getOptionLabel","option","isOptionEqualToValue","renderTags","getTagProps","Chip","renderOption","props","selected","Checkbox","marginRight","checked","renderInput","params","minWidth","placeholder","onPriceUnitChange","maxWidth","InputProps","endAdornment","InputAdornment","onPortChange","onPackagingDescriptionChange","Table","TableHead","TableRow","TableCell","Check","lastPrice","TableBody","border","hover","alignItems","encodeHTMLEntity","component","scope","Add","Remove","lastObj","attributeObj","setAttributeObj","addAttribute","setAddAttribute","optionSelected","setOptionSelected","icbuCatProp","checkValues","checkOptions","getAttributeObj","arr","inputValue","undefined","str","newValues","push","optionObj","test","newOptions","saveAttribute","cleaner","invalidList","subObj","elementValues","document","createElement","elementValue","setAttribute","innerText","String","i","onAttributeConfirm","mainAttributeObj","myOptions","subOptionObj","subOption","onAttributeChange","paddingTop","optionArr","newValueArr","newValue","Cancel","Divider","customSaver","customObj","setCustomObj","addCustom","setAddCustom","customSelected","setCustomSelected","customStatusObj","setCustomStatusObj","customizedServices","productLightCustom","getCustomObj","getCustomStatusObj","onCustomOptionChange","onCustomConfirm","isNaN","onCustomStatusChange","freeSolo","onInputChange","optionFound","onCustomOptionConfirm","finalValue","onCustomChange","shippingTemplateObj","setShippingTemplateObj","weightObj","setWeightObj","measureObj","setMeasureObj","saleTypeObj","setSaleTypeObj","batchObj","setBatchObj","shippingTemplateId","pkgWeight","pkgMeasure","saleType","batchNum","getShippingTemplateObj","getWeightObj","ranking","indexOf","getMeasureObj","getSaleTypeObj","getBatchObj","onShippingTemplateChange","onWeightChange","hasError","num","keyArr","allValueTemplates","onMeasureChange","onSaleTypeChange","onBatchChange","ProductDetail","editMode","productSchema","real_product_id","localization","editor","useRef","iconToggleMagic","iconCloudImage","descriptionObj","setDescriptionObj","descriptionTypeObj","setDescriptionTypeObj","onDescriptionChange","encodeNonASCII","children","onDescriptionTypeChange","superText","productDescType","getDescriptionObj","getDescriptionTypeObj","current","setTimeout","body","photoFile","paramObj","ma","photoUploadQuery","file_name","image_bytes","fetchAPI","msg","response","result","res","photoUploadCheck","imageReplacer","imgs","workplace","img","photobank_url","Build","ref","Cloud","config","language","locale","enter","defaultActionOnPaste","toolbarAdaptive","toolbarButtonSize","imageProcessor","replaceDataURIToBlobIdInView","buttons","icon","tooltip","textNearby","html","htmlCodes","line","events","paste","items","clipboardData","item","match","file","getAsFile","beforePasteInsert","text","tabIndex","newContent","useSelector","state","globalization","setLangPack","baseData","loginData","expanded","setExpanded","useMediaQuery","useTheme","breakpoints","down","urlParams","URLSearchParams","location","pathname","product_id","get","category_Id_ext","setXmlSchema","finalCatId","setFinalCatId","setRtsProduct","productDetailQuery","productDetailCheck","category_id","rts","getProductId","productIdQuery","productIdCheck","makeProductExample","productSchemaQuery","param_product_top_publish_request","productSchemaCheck","makeSchema","productSchemaRenderQuery","productSchemaRenderCheck","window","queryMethod","productSchemaAddQuery","checkMethod","productSchemaAddCheck","catId","productSchemaUpdateQuery","productSchemaUpdateCheck","xmldom","cat_id","insideCheck","nodeArr","newSubArr","subArr","fieldCheck","optionNodes","valueNodes","resultObj","generalCheck","getProductInfo","makeProductInfo","handleAccordionChange","panel","event","isExpanded","MainCard","Accordion","AccordionSummary","expandIcon","ExpandMore","width","flexShrink","AccordionDetails","ProductSummary","ProductAttribute","ProductService","ProductRTS","ProductDescription","xmlArr","finalXmlStr","submitProductSchema"],"mappings":"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","file":"static/js/13.2bbf4388.chunk.js","sourcesContent":["let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found',\r\n            folderRequired: 'please select a folder to continue'\r\n        },\r\n        table: {\r\n            tableHeader: 'Products',\r\n            categoryName: 'category name',\r\n            productId: 'product id',\r\n            subject: 'subject',\r\n            status: 'status',\r\n            display: 'display',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: 'specific',\r\n            owner_member_display_name: 'owner',\r\n            product_type: 'type',\r\n            smart_edit: 'smart edit',\r\n            attributes: 'attributes',\r\n            keywords: 'keywords',\r\n            price: 'price',\r\n            payment_methods: 'payment methods',\r\n            min_order_quantity: 'MOQ(min. order quantity)',\r\n            day: 'day',\r\n            unit_type: 'unit type',\r\n            gmt_create: 'date create',\r\n            gmt_modified: 'date modified',\r\n            score: 'score',\r\n            tag: 'tag',\r\n            customInfo: 'custom info'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            productScore: 'scores',\r\n            productDisplayOn: 'list',\r\n            productDisplayOff: 'delist',\r\n            productUpdate: 'update',\r\n            productEdit: 'edit',\r\n            productCopy: 'copy'\r\n        },\r\n        form: {\r\n            KeyInformation: 'key information',\r\n            ProductAttributes: 'product attributes',\r\n            productService: 'product service',\r\n            rtsProduct: 'ready-to-ship product',\r\n            subject: '128 letters max.',\r\n            category: 'click to change category',\r\n            keywords: '3 keywords max. Comma(,) separated',\r\n            price: 'set price (range)',\r\n            payment_methods: 'payment methods such as T/T, L/C, etc.',\r\n            min_order_quantity: 'optional',\r\n            attributes: 'add or delete',\r\n            attributeMissing: 'attribute missing',\r\n            attributeDuplicated: 'attribute duplicated',\r\n            pleaseSelect: 'please select',\r\n            selectOrInput: 'select or input',\r\n            measure: 'length * width * height (cm)',\r\n            pieces: 'pieces'\r\n        },\r\n        steps: {\r\n            first: 'Edit Attributes',\r\n            second: 'Edit Contents',\r\n            finally: 'Preview & Publish',\r\n            previous: 'Previous',\r\n            next: 'Next',\r\n            complete: 'Complete',\r\n            redirecting: 'Redirecting...',\r\n            addProduct: 'New',\r\n            productCategoryNeeded: 'Please select a specific category',\r\n            productSubjectNeeded: 'Please input product subject',\r\n            productDetailsNeeded: 'Product Details Needed',\r\n            productPriceUnitNeeded: 'Please input price unit',\r\n            productLogisticsModeNeeded: 'Please input logistics mode',\r\n            productPortNeeded: 'Please input shipping port',\r\n            productPackagingDescriptionNeeded: 'Please input packaging description',\r\n            productCustomizationNeeded: 'Please input Product Customization MOQ',\r\n            productTypeNeeded: 'Please select product type',\r\n            productWeightNeeded: 'Please input product weight',\r\n            productPaymentMethodsNeeded: 'Please select payment methods',\r\n            productMeasureNeeded: 'Please input product length * width * height',\r\n            uneditable: 'product is currently uneditable',\r\n            productIdError: 'product id error, pls go back & try again',\r\n            categoryError: 'category error, pls try again',\r\n            editPrice: 'Edit Price',\r\n            editPeriod: 'Edit Production Period',\r\n            editAll: 'Edit All',\r\n            editDone: 'Edit Done',\r\n            nullNotAllowed: 'empty value is not allowed',\r\n            MOQError: 'MOQ should be greater than the previous one',\r\n            PriceError: 'price should be smaller than the previous one',\r\n            add: 'Add',\r\n            remove: 'Remove',\r\n            cloud: 'Cloud',\r\n            selectFromCloud: 'Select from Cloud',\r\n            choosePhotos: 'Choose Photos',\r\n            uploadPhotos: 'Upload Photos',\r\n            removePhotos: 'double click to remove the photo',\r\n            toggleSmartEdit: 'toggle smart edit',\r\n            productDescriptionTip: 'Pictures from Smart Editing are not supported. Remove pictures if you want to modify',\r\n            mainPhotoRequired: 'Need at least one photo',\r\n            descriptionOverflow: 'description length shall be smaller than 60k letters',\r\n            panel1: 'subject, keywords, price, shipping...',\r\n            panel2: 'all kinds of attributes...(attributes cannot be updated when posting new products for the first time. Try to fill the blanks the second time',\r\n            panel3: 'customized service if the MOQ is met...',\r\n            panel4: 'for trade assurance users exclusively...',\r\n            addAttributes: 'Add Attributes',\r\n            clearAttributes: 'Clear Attributes',\r\n            modificationNull: 'No modification made',\r\n            addCustomInfo: 'Add Custom Info',\r\n            clearCustomInfo: 'Clear Custom Info',\r\n            modificationDone: 'Will submit the following modifications:',\r\n            numberOnly: 'Please input number only',\r\n            addSuccess: 'Product added successfully',\r\n            updateSuccess: 'Product updated successfully',\r\n            duplicateSuccess: 'product duplicated successfully',\r\n            uploadSuccess: 'Upload Success',\r\n            productScoreError: 'no score found'\r\n        },\r\n        productScore: {\r\n            basic: 'Basic',\r\n            potential: 'Potential',\r\n            super: 'Super',\r\n            top: 'Top'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            success: 'Success',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在',\r\n            folderRequired: '请选择文件夹'\r\n        },\r\n        table: {\r\n            tableHeader: '产品',\r\n            categoryName: '类目',\r\n            productId: '产品 id',\r\n            subject: '标题',\r\n            status: '审核状态',\r\n            display: '上架状态',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: '规格品',\r\n            owner_member_display_name: '负责人',\r\n            product_type: '商品类型',\r\n            smart_edit: '智能编辑',\r\n            attributes: '属性',\r\n            keywords: '关键词',\r\n            price: '价格',\r\n            payment_methods: '支付方式',\r\n            min_order_quantity: '最小起订量(MOQ)',\r\n            day: '天',\r\n            unit_type: '单位',\r\n            gmt_create: '创建日期',\r\n            gmt_modified: '修改日期',\r\n            score: '产品分',\r\n            tag: '标签',\r\n            customInfo: '定制信息'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            productScore: '产品分',\r\n            productDisplayOn: '上架',\r\n            productDisplayOff: '下架',\r\n            productUpdate: '更新',\r\n            productEdit: '编辑',\r\n            productCopy: '复制'\r\n        },\r\n        form: {\r\n            KeyInformation: '基本信息',\r\n            ProductAttributes: '产品属性',\r\n            productService: '产品服务',\r\n            rtsProduct: 'RTS 产品',\r\n            subject: '128 字符以内',\r\n            category: '点击更换类目',\r\n            keywords: '最多三个关键词，用英文逗号(,)分隔',\r\n            price: '设置价格(区间)',\r\n            payment_methods: '支付方式，例如：T/T，L/C，等',\r\n            min_order_quantity: '选填',\r\n            attributes: '可增可减',\r\n            attributeMissing: '属性缺失',\r\n            attributeDuplicated: '属性重复',\r\n            pleaseSelect: '请选择',\r\n            selectOrInput: '选择或输入',\r\n            measure: '长*宽*高 (cm)',\r\n            pieces: '件'\r\n        },\r\n        steps: {\r\n            first: '属性编辑',\r\n            second: '详情编辑',\r\n            finally: '预览&发布',\r\n            previous: '上一步',\r\n            next: '下一步',\r\n            complete: '完成',\r\n            redirecting: '正在跳转...',\r\n            addProduct: '发品',\r\n            productCategoryNeeded: '请选择详细的产品类目',\r\n            productSubjectNeeded: '请输入产品名称',\r\n            productDetailsNeeded: '请输入产品详情',\r\n            productPriceUnitNeeded: '请选择计量单位',\r\n            productLogisticsModeNeeded: '请选择物流方式',\r\n            productPortNeeded: '请输入海运港口',\r\n            productPackagingDescriptionNeeded: '请输入包装描述',\r\n            productCustomizationNeeded: '请输入产品定制信息',\r\n            productTypeNeeded: '请选择产品类型',\r\n            productWeightNeeded: '请输入产品重量',\r\n            productPaymentMethodsNeeded: '请输入支付方式',\r\n            productMeasureNeeded: '请输入长宽高',\r\n            uneditable: '当前产品不可编辑',\r\n            productIdError: '产品 id 错误，请返回重试',\r\n            categoryError: '类目有误，请重新选择',\r\n            editPrice: '编辑价格',\r\n            editPeriod: '编辑发货期',\r\n            editAll: '编辑全部',\r\n            editDone: '编辑完成',\r\n            nullNotAllowed: '不能为空',\r\n            MOQError: 'MOQ值须大于前一个值',\r\n            PriceError: '价格值须小于前一个值',\r\n            add: '添加',\r\n            remove: '删除',\r\n            cloud: '图库',\r\n            selectFromCloud: '从云端选择',\r\n            choosePhotos: '选择图片',\r\n            uploadPhotos: '上传图片',\r\n            removePhotos: '双击移除图片',\r\n            toggleSmartEdit: '智能编辑切换',\r\n            productDescriptionTip: '提示: 来自【智能编辑】的图片无法编辑，如需修改，请移除所有旧图先',\r\n            mainPhotoRequired: '需要保留至少一张主图',\r\n            descriptionOverflow: '描述长度不能超过6万字符',\r\n            panel1: '标题，关键词，价格，发货...',\r\n            panel2: '各类属性...（发新品初次编辑没法传属性，建议第二次再填）',\r\n            panel3: '定制服务...',\r\n            panel4: '信保用户专属...',\r\n            addAttributes: '添加属性',\r\n            clearAttributes: '移除空白属性',\r\n            addCustomInfo: '添加自定义信息',\r\n            clearCustomInfo: '清理自定义信息',\r\n            modificationNull: '没有任何修改',\r\n            modificationDone: '将提交如下内容:',\r\n            numberOnly: '请输入数字',\r\n            uploadSuccess: '上传成功',\r\n            addSuccess: '产品添加成功',\r\n            updateSuccess: '产品更新成功',\r\n            duplicateSuccess: '产品复制成功',\r\n            productScoreError: '产品分未查到'\r\n        },\r\n        productScore: {\r\n            basic: '低质品',\r\n            potential: '普通品',\r\n            super: '实力优品',\r\n            top: '精品'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            success: '操作成功',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Divider, Typography, List, ListItem } from '@mui/material';\r\nimport { Check as CheckIcon, Cancel as CancelIcon } from '@mui/icons-material';\r\n\r\nfunction Confirmation({ langPack, productModified, modificationSubmission }) {\r\n    let navigate = useNavigate(); //react-router-dom\r\n    let modifiedKeys = Object.keys(productModified);\r\n    return (\r\n        <>\r\n            {modifiedKeys.length ? (\r\n                <>\r\n                    <Typography variant=\"h3\">{langPack.steps.modificationDone}</Typography>\r\n                    <List>\r\n                        {modifiedKeys.map((key) => (\r\n                            <ListItem key={key}>--{key}</ListItem>\r\n                        ))}\r\n                    </List>\r\n                </>\r\n            ) : (\r\n                <Typography variant=\"h3\">{langPack.steps.modificationNull}</Typography>\r\n            )}\r\n            <br />\r\n            <Divider />\r\n            <div align=\"right\">\r\n                <Button startIcon={<CheckIcon />} onClick={modificationSubmission}>\r\n                    {langPack.common.yes}\r\n                </Button>\r\n                <Button startIcon={<CancelIcon />} onClick={() => navigate(`/product`)}>\r\n                    {langPack.common.no}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    langPack: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    modificationSubmission: PropTypes.func\r\n};\r\n\r\nexport default Confirmation;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Box, Stepper, Step, StepLabel, ButtonGroup } from '@mui/material';\r\n\r\nfunction EditStep({ langPack, activeStep, setActiveStep }) {\r\n    const [steps] = useState([langPack.steps.first, langPack.steps.second, langPack.steps.finally]);\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label) => {\r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <ButtonGroup\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disableElevation\r\n                sx={{ display: 'flex', flexDirection: 'row', pt: 2, paddingBottom: '10px' }}\r\n            >\r\n                <Button disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}>\r\n                    {langPack.steps.previous}\r\n                </Button>\r\n                <Box sx={{ flex: '1 1 auto' }} />\r\n                <Button disabled={activeStep === 2} onClick={handleNext}>\r\n                    {activeStep === steps.length - 1 ? langPack.steps.complete : langPack.steps.next}\r\n                </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}\r\n\r\nEditStep.propTypes = {\r\n    langPack: PropTypes.object,\r\n    activeStep: PropTypes.number,\r\n    setActiveStep: PropTypes.func\r\n};\r\n\r\nexport default EditStep;\r\n","import { useState, useEffect, lazy } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loadable from 'ui-component/Loadable';\r\nconst Photo = Loadable(lazy(() => import('views/photo')));\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    FormControlLabel,\r\n    ImageList,\r\n    ImageListItem,\r\n    ImageListItemBar,\r\n    Input,\r\n    IconButton,\r\n    Tooltip\r\n} from '@mui/material';\r\nimport { StarBorder as StarBorderIcon, SwitchLeft as SwitchLeftIcon, CloudQueue as CloudQueueIcon } from '@mui/icons-material';\r\n\r\nfunction PhotoGallery({ xmlSchema, onModified, productModified, photoCols, rowHeight, xmlGetField, langPack }) {\r\n    let [imageObj, setImageObj] = useState({}); //所有图片\r\n    let [cloudImageArr, setCloudImageArr] = useState([]); //导入的云图片\r\n    let [dialogOpen, setDialogOpen] = useState(false); //选择图片的对话框状态\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { scImages } = productModified;\r\n        scImages ? setImageObj(scImages) : getImageObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getImageObj() {\r\n        let fieldObj = xmlGetField('scImages');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .map((obj) => {\r\n                    let key = obj.id;\r\n                    let value = obj.values[0].value.replace(/_.*/, ''); //换高清图\r\n                    return { key, value };\r\n                })\r\n                .sort((a, b) => Number(/\\d/.exec(a.key)[0]) - Number(/\\d/.exec(b.key)[0])); //数据内部处理\r\n        }\r\n        return setImageObj(fieldObj);\r\n    } //获取产品名称\r\n\r\n    function onImageChange(method, valueArr) {\r\n        if (!valueArr.length) return; //校验\r\n        let newObj = { ...imageObj };\r\n        let imageArr = newObj._values || [];\r\n        let newArr = [];\r\n        if (method === 'add') {\r\n            newArr = [...imageArr, ...valueArr];\r\n            if (newArr.length > 6) newArr.length = 6;\r\n        } else if (method === 'remove') {\r\n            if (imageArr.length <= 1) return queryResult(false, langPack.steps.mainPhotoRequired);\r\n            valueArr.forEach((valueObj) => {\r\n                newArr = imageArr.filter((obj) => obj.value !== valueObj.value);\r\n            });\r\n        } else if (method === 'reorder') {\r\n            newArr = valueArr;\r\n        }\r\n        newArr = newArr.map((obj, index) => {\r\n            return {\r\n                ...obj,\r\n                key: `scImages_${index}`,\r\n                value: obj.value.replace('https:', '')\r\n            };\r\n        }); //重新编号\r\n        newArr = newArr.filter((obj) => obj.id); // \"fileId必须填写;\" 否则报错\r\n        if (!newArr.length) setDialogOpen(true);\r\n        newObj._values = newArr;\r\n        let valueTagName = `complex-value`;\r\n        let setter = setImageObj;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        newArr.forEach((obj, index) => {\r\n            valueTemplates[index].innerHTML = `<value fileId=\"${obj.id}\">${obj.value}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('scImages', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    //Cloud-Photo组件 相关事件\r\n    let onDialogClose = (submit) => {\r\n        setDialogOpen(false);\r\n        if (submit) {\r\n            let valueArr = cloudImageArr.map((obj) => {\r\n                return { ...obj, key: obj.id, value: obj.url };\r\n            });\r\n            return onImageChange('add', valueArr);\r\n        }\r\n        return setCloudImageArr([]); //清除传入值\r\n    }; //对话框关闭\r\n    let onPhotoSelected = (value) => {\r\n        if (!value) return;\r\n        setCloudImageArr(value);\r\n    }; //选择了图片，则存到当前component里\r\n\r\n    let onPhotoReorder = (index) => {\r\n        let newObj = { ...imageObj };\r\n        let newArr = newObj._values;\r\n        let deletedImage = newArr.splice(index, 1);\r\n        newArr.splice(index - 1, 0, deletedImage[0]);\r\n        return onImageChange('reorder', newArr);\r\n    };\r\n\r\n    return (\r\n        <ImageList cols={photoCols} rowHeight={rowHeight} sx={{ marginTop: '10px', marginBottom: '10px' }} variant=\"quilted\" gap={2}>\r\n            {imageObj._values && imageObj._values.length ? (\r\n                imageObj._values.map((obj, index) => {\r\n                    return (\r\n                        <ImageListItem key={index} cols={1} rows={1}>\r\n                            <img src={`https:` + obj.value} alt={index + 1} loading=\"lazy\" />\r\n                            <ImageListItemBar\r\n                                sx={{\r\n                                    background:\r\n                                        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)'\r\n                                }}\r\n                                title={index + 1}\r\n                                position=\"top\"\r\n                                actionIcon={\r\n                                    <Tooltip title={langPack.steps.removePhotos}>\r\n                                        <IconButton\r\n                                            sx={{ color: index ? 'yellow' : 'white' }}\r\n                                            aria-label={`star ${index + 1}`}\r\n                                            onDoubleClick={() => onImageChange('remove', [obj])}\r\n                                        >\r\n                                            <StarBorderIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                }\r\n                                actionPosition=\"left\"\r\n                            />\r\n                            {index && obj.id ? (\r\n                                <Button\r\n                                    sx={{ position: 'absolute', right: '0px', top: '5px' }}\r\n                                    size=\"large\"\r\n                                    color=\"warning\"\r\n                                    onClick={() => onPhotoReorder(index)}\r\n                                    startIcon={<SwitchLeftIcon />}\r\n                                />\r\n                            ) : null}\r\n                        </ImageListItem>\r\n                    );\r\n                })\r\n            ) : (\r\n                <></>\r\n            )}\r\n            {!imageObj._values || imageObj._values.length < 6 ? (\r\n                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n                    <Tooltip title={langPack.steps.selectFromCloud}>\r\n                        <Button sx={{ height: '100%' }} startIcon={<CloudQueueIcon />} onClick={() => setDialogOpen(true)}>\r\n                            {langPack.steps.cloud}\r\n                        </Button>\r\n                    </Tooltip>\r\n                    <Dialog onClose={() => onDialogClose(true)} open={dialogOpen}>\r\n                        <DialogTitle>{langPack.steps.selectFromCloud}</DialogTitle>\r\n                        <Photo onPhotoSelected={onPhotoSelected} />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => onDialogClose(true)}>\r\n                            {langPack.common.yes}\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"error\" onClick={() => onDialogClose()}>\r\n                            {langPack.common.no}\r\n                        </Button>\r\n                    </Dialog>\r\n                </div>\r\n            ) : null}\r\n        </ImageList>\r\n    );\r\n}\r\n\r\nPhotoGallery.propTypes = {\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    photoCols: PropTypes.number,\r\n    rowHeight: PropTypes.number,\r\n    onModified: PropTypes.func,\r\n    xmlGetField: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoGallery;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport {\r\n    Typography,\r\n    Autocomplete,\r\n    Button,\r\n    Checkbox,\r\n    InputAdornment,\r\n    MenuItem,\r\n    TextField,\r\n    Divider,\r\n    Tooltip,\r\n    Chip,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Remove as RemoveIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    ModeEdit as EditIcon,\r\n    Clear as ClearIcon,\r\n    DeleteOutline as DeleteIcon\r\n} from '@mui/icons-material';\r\n\r\nlet productGroupSaver; //产品分组暂存\r\nlet paymentMethodSaver; //付款方式暂存\r\nlet logisticsSaver; //物流方式暂存\r\nlet priceSaver; //阶梯价暂存\r\nlet periodSaver; //发货期暂存\r\nlet productTypeSaver; //产品类型暂存\r\nfunction App({ xmlSchema, langPack, group_id, rtsProduct, productModified, xmlGetField, onModified }) {\r\n    console.log('summary running');\r\n    //产品分组\r\n    let [productGroupObj, setProductGroupObj] = useState({});\r\n    //产品类型\r\n    let [productTypeObj, setProductTypeObj] = useState({});\r\n    //产品名称\r\n    let [subjectObj, setSubjectObj] = useState({});\r\n    //产品关键词\r\n    let [keywordObj, setKeywordObj] = useState({});\r\n    //付款方式\r\n    let [paymentMethodObj, setPaymentMethodObj] = useState({});\r\n    //计量单位\r\n    let [priceUnitObj, setPriceUnitObj] = useState({});\r\n    //最小起订量\r\n    let [MOQObj, setMOQObj] = useState({});\r\n    //阶梯价\r\n    let [priceObj, setPriceObj] = useState({});\r\n    let [priceEdit, setPriceEdit] = useState(false);\r\n    //发货期\r\n    let [ladderPeriodObj, setLadderPeriodObj] = useState({});\r\n    let [periodEdit, setPeriodEdit] = useState(false);\r\n    //海运港口\r\n    let [portObj, setPortObj] = useState({});\r\n    //物流模式\r\n    let [logisticsModeObj, setLogisticsObj] = useState({});\r\n    //包装方式\r\n    let [packagingDescriptionObj, setPackagingDescriptionObj] = useState({});\r\n    //供货能力（询盘品专属）\r\n    let [supplyAbilityObj, setSupplyAbilityObj] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let {\r\n            productGroup,\r\n            market,\r\n            productTitle,\r\n            productKeywords,\r\n            minOrderQuantity,\r\n            paymentMethod,\r\n            priceUnit,\r\n            ladderPrice,\r\n            ladderPeriod,\r\n            port,\r\n            logisticsMode,\r\n            wholeSalePkgDesc,\r\n            supply\r\n        } = productModified;\r\n        productGroup ? setProductGroupObj(productGroup) : getProductGroupObj();\r\n        market ? setProductTypeObj(market) : getProductTypeObj();\r\n        productTitle ? setSubjectObj(productTitle) : getSubjectObj();\r\n        productKeywords ? setKeywordObj(productKeywords) : getKeywordObj();\r\n        minOrderQuantity ? setMOQObj(minOrderQuantity) : getMOQObj();\r\n        paymentMethod ? setPaymentMethodObj(paymentMethod) : getPaymentMethodObj();\r\n        priceUnit ? setPriceUnitObj(priceUnit) : getPriceUnitObj();\r\n        ladderPrice ? setPriceObj(ladderPrice) : getPriceObj();\r\n        ladderPeriod ? setLadderPeriodObj(ladderPeriod) : getLadderPeriodObj();\r\n        port ? setPortObj(port) : getPortObj();\r\n        logisticsMode ? setLogisticsObj(logisticsMode) : getLogisticsObj();\r\n        wholeSalePkgDesc ? setPackagingDescriptionObj(wholeSalePkgDesc) : getPackaingDescriptionObj();\r\n        supply ? setSupplyAbilityObj(supply) : getSupplyAbilityObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getProductGroupObj() {\r\n        let fieldObj = xmlGetField('productGroup');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].values[0].value }; //数据内部处理\r\n        }\r\n        if (group_id) {\r\n            productGroupSaver = fieldObj;\r\n            return onProductGroupChange(group_id);\r\n        }\r\n        return setProductGroupObj(fieldObj);\r\n    } //获取产品分组\r\n    function onProductGroupChange(value) {\r\n        console.log('settting product group');\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = productGroupObj._values ? { ...productGroupObj } : productGroupSaver;\r\n        newObj._values = { value };\r\n        let valueTagName = `complex-value`;\r\n        let setter = setProductGroupObj;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplate = newField.querySelector('fields > field#first_group_id'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueTemplate.innerHTML = `<value>${value}</value>`; //填值\r\n        valueSaver += valueTemplate.outerHTML;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productGroup', newObj); //通知父组件\r\n    } //产品分组修改\r\n\r\n    function getProductTypeObj() {\r\n        let fieldObj = xmlGetField('market');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        } else {\r\n            productTypeSaver = fieldObj;\r\n            return onProductTypeChange('2'); //定制品。（现货以后再说，毕竟现在信保支持度不高）\r\n        }\r\n        return setProductTypeObj(fieldObj);\r\n    } //获取产品类型\r\n    function onProductTypeChange(value) {\r\n        console.log('settting product type');\r\n        let _productTypeObj = productTypeObj._values ? productTypeObj : productTypeSaver;\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = { ..._productTypeObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setProductTypeObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('market', newObj); //通知父组件\r\n    } //产品类型修改\r\n\r\n    function getSubjectObj() {\r\n        let fieldObj = xmlGetField('productTitle');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return setSubjectObj(fieldObj);\r\n    } //获取产品名称\r\n    function onSubjectChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = { ...subjectObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setSubjectObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productTitle', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    function getKeywordObj() {\r\n        let fieldObj = xmlGetField('productKeywords');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values.map((obj) => obj.values[0].value).join(',') }; //数据内部处理\r\n        }\r\n        return setKeywordObj(fieldObj);\r\n    } //获取产品关键词\r\n    function onKeywordChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newArr = value.split(',');\r\n        if (newArr.length > 3) {\r\n            newArr.length = 3;\r\n            queryResult(false, langPack.form.keywords);\r\n        }\r\n        value = newArr.join(',');\r\n        let newObj = { ...keywordObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `complex-value`;\r\n        let setter = setKeywordObj;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        newArr.forEach((keyword, index) => {\r\n            valueTemplates[index].innerHTML = `<value>${keyword}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productKeywords', newObj); //通知父组件\r\n    } //关键词修改\r\n\r\n    function getMOQObj() {\r\n        let fieldObj = xmlGetField('minOrderQuantity');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: Number(fieldObj.values[0].value) }; //数据内部处理\r\n        }\r\n        return setMOQObj(fieldObj);\r\n    } //获取最低起订量\r\n    function onMOQChanged(value) {\r\n        if (!value) return; //校验\r\n        let newObj = { ...MOQObj };\r\n        value = Number(value);\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setMOQObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('minOrderQuantity', newObj); //通知父组件\r\n    } //最低起订量修改\r\n\r\n    function getPaymentMethodObj() {\r\n        let fieldObj = xmlGetField('paymentMethod');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values[0].values.map((obj) => {\r\n                return { value: obj.value };\r\n            });\r\n        }\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options[0].options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        return setPaymentMethodObj(fieldObj);\r\n    } //获取付款方式\r\n\r\n    function onPaymentMethodChange(newValue) {\r\n        paymentMethodSaver = newValue;\r\n    } //支付方式选择\r\n\r\n    function onPaymentMethodConfirm() {\r\n        if (!paymentMethodSaver) return;\r\n        if (!paymentMethodSaver.length) return queryResult(false, langPack.steps.productPaymentMethodsNeeded);\r\n        let newObj = { ...paymentMethodObj };\r\n        newObj = { ...newObj, _values: paymentMethodSaver };\r\n        let valueTagName = `complex-value`;\r\n        let setter = setPaymentMethodObj;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        let predefinedMethodTemplate = valueTemplates[0]; //id=\"predefined_method\"\r\n        let valueStr = '<values>';\r\n        paymentMethodSaver.forEach((obj) => {\r\n            valueStr += `<value>${obj.value}</value>`;\r\n        });\r\n        valueStr += `</values>`;\r\n        predefinedMethodTemplate.innerHTML = valueStr;\r\n        valueSaver += predefinedMethodTemplate.outerHTML;\r\n        paymentMethodSaver = '';\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('paymentMethod', newObj);\r\n    } //支付方式确认\r\n\r\n    const getPriceUnitObj = () => {\r\n        let fieldObj = xmlGetField('priceUnit');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { key: '', value: fieldObj.values[0].value };\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        }\r\n        return setPriceUnitObj(fieldObj);\r\n    }; //获取计量单位\r\n\r\n    const onPriceUnitChange = (valueObj) => {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productPriceUnitNeeded); //校验\r\n        let newObj = { ...priceUnitObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `value`;\r\n        let setter = setPriceUnitObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += valueObj.value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('priceUnit', newObj); //通知父组件\r\n    }; //计量单位选择\r\n\r\n    function getPortObj() {\r\n        let fieldObj = xmlGetField('port');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return setPortObj(fieldObj);\r\n    } //获取海运港口\r\n    function onPortChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productPortNeeded); //校验\r\n        let newObj = { ...portObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setPortObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('port', newObj); //通知父组件\r\n    } //海运港口修改\r\n\r\n    function getLogisticsObj() {\r\n        let fieldObj = xmlGetField('logisticsMode');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values.map((obj) => {\r\n                let { value } = obj;\r\n                let key = fieldObj._options.find((obj) => obj.value === value).key;\r\n                return { key, value };\r\n            });\r\n        }\r\n        return setLogisticsObj(fieldObj);\r\n    } //获取物流模式\r\n\r\n    function onLogisticsChange(newValue) {\r\n        logisticsSaver = newValue;\r\n    } //物流模式选择\r\n\r\n    function getPackaingDescriptionObj() {\r\n        let fieldObj = xmlGetField('wholeSalePkgDesc');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return setPackagingDescriptionObj(fieldObj);\r\n    } //获取包装方式\r\n    function onPackagingDescriptionChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productPackagingDescriptionNeeded); //校验\r\n        let newObj = { ...packagingDescriptionObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setPackagingDescriptionObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('wholeSalePkgDesc', newObj); //通知父组件\r\n    } //包装方式修改\r\n\r\n    function onLogisticsConfirm() {\r\n        if (!logisticsSaver) return;\r\n        if (!logisticsSaver.length) return queryResult(false, langPack.steps.productLogisticsModeNeeded);\r\n        let newObj = { ...logisticsModeObj };\r\n        let valueTagName = `values`;\r\n        let setter = setLogisticsObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: multiCheck\r\n        let valueStr = '';\r\n        logisticsSaver = logisticsSaver.map((key) => {\r\n            let value = newObj._options.find((obj) => obj.key === key).value;\r\n            return { key, value };\r\n        });\r\n        logisticsSaver.forEach((obj) => {\r\n            valueStr += `<value>${obj.value}</value>`;\r\n        });\r\n        valueSaver += valueStr + `</${valueTagName}>`;\r\n        newObj = { ...newObj, _values: logisticsSaver };\r\n        logisticsSaver = '';\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('logisticsMode', newObj);\r\n    } //物流模式确认\r\n\r\n    function getPriceObj() {\r\n        let fieldObj = xmlGetField('ladderPrice');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .filter((obj) => obj.type === 'complex')\r\n                .map((obj) => {\r\n                    return { quantity: Number(obj.values[0].values[0].value), price: Number(obj.values[1].values[0].value) };\r\n                })\r\n                .sort((a, b) => a.quantity - b.quantity);\r\n        } else {\r\n            fieldObj._values = [{ quantity: 1, price: 0 }];\r\n        }\r\n        return setPriceObj(fieldObj);\r\n    } //获取阶梯价格\r\n\r\n    const onPriceEditMode = () => {\r\n        if (priceEdit) {\r\n            onPriceChange('edit');\r\n            //提交更改\r\n        } else {\r\n            //初始化\r\n            let priceArr = priceObj._values;\r\n            let lastPrice = priceArr[priceArr.length - 1];\r\n            priceSaver = { ...lastPrice };\r\n        }\r\n        setPriceEdit((prev) => !prev);\r\n        return;\r\n    }; //阶梯价格编辑模式\r\n\r\n    const onPriceSave = (key, value, index) => {\r\n        if (!priceSaver) priceSaver = {};\r\n        priceSaver[key] = Number(value);\r\n        if (priceSaver.quantity && priceSaver.price) onPriceChange('edit', index);\r\n        return;\r\n    }; //阶梯价格暂存\r\n\r\n    const onPriceChange = (mode, index) => {\r\n        let newObj = { ...priceObj };\r\n        let priceArr = newObj._values;\r\n        if (mode === 'add') {\r\n            let lastPrice = priceArr[priceArr.length - 1];\r\n            if (!lastPrice.price || priceArr.length >= 4) return; //最多四组价格，且已经完成填写\r\n            priceArr = [...priceArr, { quantity: '', price: '' }]; //添加一组阶梯价格\r\n        } else if (mode === 'edit') {\r\n            if (!priceSaver) return;\r\n            if (!priceSaver.price || !priceSaver.quantity) return queryResult(false, langPack.steps.nullNotAllowed);\r\n            if (priceArr.length !== 1) {\r\n                if (priceSaver.quantity <= priceArr[priceArr.length - 2].quantity) return queryResult(false, langPack.steps.MOQError);\r\n                if (priceSaver.price >= priceArr[priceArr.length - 2].price) return queryResult(false, langPack.steps.PriceError);\r\n            }\r\n            //MOQ、价格与前一个值比对（规定就是这样） & 检查是否非空\r\n            priceArr.pop();\r\n            priceArr = [...priceArr, priceSaver]; //价格写入\r\n            priceSaver = '';\r\n        } else if (mode === 'remove') {\r\n            if (priceArr.length <= 1) return;\r\n            priceArr.splice(index, 1); //移除指定行\r\n        }\r\n        newObj._values = priceArr;\r\n        let setter = setPriceObj;\r\n        if (mode === 'add') return setter(newObj); //更新到JSX; （没有实质性更改，只是模板）\r\n        priceArr = priceArr.filter((obj) => obj.price);\r\n        if (!priceArr.length) return; //没有价格\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll(`fields > field[type=complex]`); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        priceArr.forEach((obj, index) => {\r\n            valueTemplates[index].querySelector('fields > field#quantity').innerHTML = `<value>${obj.quantity}</value>`;\r\n            valueTemplates[index].querySelector('fields > field#price').innerHTML = `<value>${obj.price}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        valueSaver = valueSaver.replace(/fields/g, valueTagName); //替换\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        onMOQChanged(priceArr[0].quantity); //同步到MOQ\r\n        setPriceEdit((prev) => !prev); //自动保存\r\n        return onModified('ladderPrice', newObj);\r\n    }; //阶梯价格修改 & 确认\r\n\r\n    function getLadderPeriodObj() {\r\n        let fieldObj = xmlGetField('ladderPeriod');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .filter((obj) => obj.type === 'complex')\r\n                .map((obj) => {\r\n                    return { quantity: Number(obj.values[0].values[0].value), day: Number(obj.values[1].values[0].value) };\r\n                })\r\n                .sort((a, b) => a.quantity - b.quantity);\r\n        } else {\r\n            fieldObj._values = [{ quantity: 1, price: 0 }];\r\n        }\r\n        return setLadderPeriodObj(fieldObj);\r\n    } //获取发货期\r\n\r\n    const onPeriodEditMode = () => {\r\n        if (periodEdit) {\r\n            onPeriodChange('edit');\r\n            //提交更改\r\n        } else {\r\n            //初始化\r\n            let newArr = ladderPeriodObj._values;\r\n            let lastObj = newArr[newArr.length - 1];\r\n            periodSaver = { ...lastObj };\r\n        }\r\n        setPeriodEdit((prev) => !prev);\r\n        return;\r\n    }; //发货期编辑模式\r\n\r\n    const onPeriodSave = (key, value, index) => {\r\n        if (!periodSaver) periodSaver = {};\r\n        periodSaver[key] = Number(value);\r\n        if (periodSaver.quantity && periodSaver.day) onPeriodChange('edit', index);\r\n        return;\r\n    }; //发货期暂存\r\n\r\n    const onPeriodChange = (mode, index) => {\r\n        let newObj = { ...ladderPeriodObj };\r\n        let newArr = newObj._values;\r\n        if (mode === 'add') {\r\n            let lastObj = newArr[newArr.length - 1];\r\n            if (!lastObj.day || newArr.length >= 3) return; //最多四组价格，且已经完成填写\r\n            newArr = [...newArr, { quantity: '', day: '' }]; //添加一组发货期\r\n        } else if (mode === 'edit') {\r\n            if (!periodSaver) return;\r\n            if (!periodSaver.day || !periodSaver.quantity) return queryResult(false, langPack.steps.nullNotAllowed);\r\n            newArr.pop();\r\n            newArr = [...newArr, periodSaver]; //价格写入\r\n            periodSaver = '';\r\n        } else if (mode === 'remove') {\r\n            if (newArr.length <= 1) return;\r\n            newArr.splice(index, 1); //移除指定行\r\n        }\r\n        newObj._values = newArr;\r\n        let setter = setLadderPeriodObj;\r\n        if (mode === 'add') return setter(newObj); //更新到JSX; （没有实质性更改，只是模板）\r\n        newArr = newArr.filter((obj) => obj.day);\r\n        if (!newArr.length) return; //没有填写发货期\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll(`fields > field[type=complex]`); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        newArr.forEach((obj, index) => {\r\n            valueTemplates[index].querySelector('fields > field#quantity').innerHTML = `<value>${obj.quantity}</value>`;\r\n            valueTemplates[index].querySelector('fields > field#day').innerHTML = `<value>${obj.day}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        valueSaver = valueSaver.replace(/fields/g, valueTagName); //替换\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        if (!rtsProduct && priceUnitObj._values) {\r\n            let { quantity, day } = newArr[newArr.length - 1];\r\n            let supply_number = Number(quantity) / Number(day);\r\n            let time_unit = 'Day';\r\n            let quantity_unit = priceUnitObj._values.value;\r\n            onSupplyAbilityChange({ supply_number, time_unit, quantity_unit }); //同步到MOQ\r\n        }\r\n        setPeriodEdit((prev) => !prev); //自动保存\r\n        return onModified('ladderPeriod', newObj);\r\n    }; //发货期修改 & 确认\r\n\r\n    function getSupplyAbilityObj() {\r\n        let fieldObj = xmlGetField('supply');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return setSupplyAbilityObj(fieldObj);\r\n    } //获取产品类型\r\n    function onSupplyAbilityChange(valueObj) {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = { ...supplyAbilityObj };\r\n        newObj._values = valueObj;\r\n        let setter = setSupplyAbilityObj;\r\n        let valueTagName = `complex-value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplate = newField.querySelector(`fields`); //引入填写模板\r\n        valueTemplate.querySelector(`field#supply_number`).innerHTML = `<value>${valueObj.supply_number}</value>`;\r\n        valueTemplate.querySelector(`field#time_unit`).innerHTML = `<value>${valueObj.time_unit}</value>`;\r\n        valueTemplate.querySelector(`field#quantity_unit`).innerHTML = `<value>${valueObj.quantity_unit}</value>`;\r\n        let valueTemplates = newField.querySelectorAll(`fields > field`);\r\n        Array.from(valueTemplates).forEach((node) => {\r\n            valueSaver += node.outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('supply', newObj); //通知父组件\r\n    } //产品类型修改\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={langPack.form.subject}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    key={JSON.stringify(subjectObj._values)}\r\n                    id=\"productTitle\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{subjectObj.name}</Typography>}\r\n                    defaultValue={subjectObj._values ? subjectObj._values.value : ''}\r\n                    onBlur={(e) => onSubjectChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title={langPack.form.keywords}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    key={JSON.stringify(keywordObj._values)}\r\n                    id=\"keywords\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{keywordObj.name}</Typography>}\r\n                    defaultValue={keywordObj._values ? keywordObj._values.value : ''}\r\n                    onBlur={(e) => onKeywordChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Autocomplete\r\n                id=\"add-payment-method\"\r\n                key={JSON.stringify(paymentMethodObj._values)}\r\n                sx={{ display: 'inline' }}\r\n                multiple\r\n                limitTags={1}\r\n                disableCloseOnSelect={true}\r\n                onBlur={onPaymentMethodConfirm}\r\n                onChange={(e, value) => onPaymentMethodChange(value)}\r\n                defaultValue={paymentMethodObj._values}\r\n                options={paymentMethodObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderTags={(options, getTagProps) =>\r\n                    options.map((option, index) => <Chip variant=\"outlined\" label={option.value} {...getTagProps({ index })} />)\r\n                }\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.value}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{paymentMethodObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Autocomplete\r\n                id=\"add-price-unit\"\r\n                key={priceUnitObj._values ? JSON.stringify(priceUnitObj._values.value) : ''}\r\n                sx={{ display: 'inline' }}\r\n                onChange={(e, value) => onPriceUnitChange(value)}\r\n                defaultValue={priceUnitObj._values}\r\n                options={priceUnitObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.key}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{priceUnitObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip title={langPack.form.min_order_quantity}>\r\n                <TextField\r\n                    type=\"number\"\r\n                    sx={{ maxWidth: '280px', display: 'none' }}\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(priceObj._values)}\r\n                    id=\"min_order_quantity\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{MOQObj.name}</Typography>}\r\n                    value={priceObj._values ? priceObj._values[0].quantity : MOQObj._values ? MOQObj._values.value : ''}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                {priceUnitObj._values ? priceUnitObj._values.key : langPack.form.pieces}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    onBlur={(e) => onMOQChanged(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <br />\r\n            <Autocomplete\r\n                id=\"change-logistics-mode\"\r\n                key={JSON.stringify(logisticsModeObj._values)}\r\n                multiple\r\n                disableCloseOnSelect={true}\r\n                sx={{ display: 'inline' }}\r\n                onBlur={onLogisticsConfirm}\r\n                onChange={(e, value) => onLogisticsChange(value)}\r\n                defaultValue={logisticsModeObj._values ? logisticsModeObj._values.map((obj) => obj.key) : []}\r\n                options={logisticsModeObj._options ? logisticsModeObj._options.map((obj) => obj.key) : []}\r\n                renderTags={(options, getTagProps) =>\r\n                    options.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\r\n                }\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{logisticsModeObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip title={langPack.form.subject}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(portObj._values)}\r\n                    id=\"port\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{portObj.name}</Typography>}\r\n                    defaultValue={portObj._values ? portObj._values.value : ''}\r\n                    onBlur={(e) => onPortChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title={langPack.form.subject}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(packagingDescriptionObj._values)}\r\n                    id=\"packaging-description\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{packagingDescriptionObj.name}</Typography>}\r\n                    defaultValue={packagingDescriptionObj._values ? packagingDescriptionObj._values.value : ''}\r\n                    onBlur={(e) => onPackagingDescriptionChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <hr />\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{langPack.table.min_order_quantity}</TableCell>\r\n                        <TableCell>{langPack.table.price}</TableCell>\r\n                        <TableCell>\r\n                            <Button startIcon={priceEdit ? <CheckIcon /> : <EditIcon />} onClick={onPriceEditMode}>\r\n                                {priceEdit ? langPack.steps.editDone : langPack.steps.editPrice}\r\n                            </Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {priceObj && priceObj._values ? (\r\n                        priceObj._values.map((obj, index) => (\r\n                            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} hover={true}>\r\n                                <TableCell>\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Typography sx={{ display: 'inline' }}>≤</Typography>\r\n                                        {priceEdit && index === priceObj._values.length - 1 ? (\r\n                                            <TextField\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                defaultValue={obj.quantity}\r\n                                                onBlur={(e) => onPriceSave('quantity', e.target.value, index)}\r\n                                            />\r\n                                        ) : (\r\n                                            obj.quantity\r\n                                        )}\r\n                                        <Typography sx={{ display: 'inline' }}>\r\n                                            {`&nbsp;`.encodeHTMLEntity()} {priceUnitObj._values ? priceUnitObj._values.key : ''}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {priceEdit && index === priceObj._values.length - 1 ? (\r\n                                        <TextField\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            defaultValue={obj.price}\r\n                                            onBlur={(e) => onPriceSave('price', e.target.value, index)}\r\n                                        />\r\n                                    ) : (\r\n                                        obj.price\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {index === 0 ? (\r\n                                        <Button startIcon={<AddIcon />} onClick={() => onPriceChange('add', index)}>\r\n                                            {langPack.steps.add}\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button startIcon={<RemoveIcon />} onClick={() => onPriceChange('remove', index)}>\r\n                                            {langPack.steps.remove}\r\n                                        </Button>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n            <hr />\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{langPack.table.min_order_quantity}</TableCell>\r\n                        <TableCell>{langPack.table.day}</TableCell>\r\n                        <TableCell>\r\n                            <Button startIcon={periodEdit ? <CheckIcon /> : <EditIcon />} onClick={onPeriodEditMode}>\r\n                                {periodEdit ? langPack.steps.editDone : langPack.steps.editPeriod}\r\n                            </Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {ladderPeriodObj && ladderPeriodObj._values ? (\r\n                        ladderPeriodObj._values.map((obj, index) => (\r\n                            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} hover={true}>\r\n                                <TableCell>\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Typography sx={{ display: 'inline' }}>≤</Typography>\r\n                                        {periodEdit && index === ladderPeriodObj._values.length - 1 ? (\r\n                                            <TextField\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                defaultValue={obj.quantity}\r\n                                                onBlur={(e) => onPeriodSave('quantity', e.target.value, index)}\r\n                                            />\r\n                                        ) : (\r\n                                            obj.quantity\r\n                                        )}\r\n                                        <Typography sx={{ display: 'inline' }}>\r\n                                            {`&nbsp;`.encodeHTMLEntity()} {priceUnitObj._values ? priceUnitObj._values.key : ''}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {periodEdit && index === ladderPeriodObj._values.length - 1 ? (\r\n                                        <TextField\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            defaultValue={obj.day}\r\n                                            onBlur={(e) => onPeriodSave('day', e.target.value, index)}\r\n                                        />\r\n                                    ) : (\r\n                                        obj.day\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {index === 0 ? (\r\n                                        <Button startIcon={<AddIcon />} onClick={() => onPeriodChange('add', index)}>\r\n                                            {langPack.steps.add}\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button startIcon={<RemoveIcon />} onClick={() => onPeriodChange('remove', index)}>\r\n                                            {langPack.steps.remove}\r\n                                        </Button>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    xmlSchema: PropTypes.object,\r\n    langPack: PropTypes.object,\r\n    group_id: PropTypes.string,\r\n    rtsProduct: PropTypes.bool,\r\n    productModified: PropTypes.object,\r\n    xmlGetField: PropTypes.func,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, Autocomplete, Checkbox, Chip, Button, MenuItem, TextField, Divider, Tooltip } from '@mui/material';\r\nimport { Add as AddIcon, Check as CheckIcon, Cancel as CancelIcon, DeleteOutline as DeleteIcon } from '@mui/icons-material';\r\n\r\nlet attributeSaver;\r\nfunction App({ langPack, xmlSchema, productModified, xmlGetField, onModified }) {\r\n    console.log('attributes running');\r\n    //商品属性\r\n    let [attributeObj, setAttributeObj] = useState({}); //使用中的属性\r\n    let [addAttribute, setAddAttribute] = useState(false); //需要添加？\r\n    let [optionSelected, setOptionSelected] = useState(''); //当前选中项\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { icbuCatProp } = productModified;\r\n        icbuCatProp ? setAttributeObj(icbuCatProp) : getAttributeObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    let checkValues = (arr) => {\r\n        if (!arr || !arr.length) return arr;\r\n        let newArr = [];\r\n        arr.forEach((obj) => {\r\n            let newObj = { ...obj };\r\n            let { type, displayName, inputValue, value, values } = newObj;\r\n            if (value !== undefined) {\r\n                let valueObj = {};\r\n                if (displayName !== undefined) valueObj.key = displayName;\r\n                if (inputValue !== undefined) valueObj.key = inputValue;\r\n                if (value !== undefined) valueObj.value = value;\r\n                if (Object.keys(valueObj).length) newObj = { ...newObj, ...valueObj };\r\n            } else if (['input', 'singleCheck'].find((str) => str === type)) {\r\n                let valueObj = {};\r\n                if (values[0].inputValue !== undefined) valueObj.key = values[0].inputValue;\r\n                if (values[0].value !== undefined) valueObj.value = values[0].value;\r\n                if (Object.keys(valueObj).length) newObj._values = valueObj;\r\n            } else {\r\n                let newValues = checkValues(values);\r\n                if (newValues) newObj._values = newValues;\r\n            }\r\n            newArr.push(newObj);\r\n        });\r\n        return newArr;\r\n    };\r\n    let checkOptions = (arr) => {\r\n        if (!arr || !arr.length) return arr;\r\n        let newArr = [];\r\n        arr.forEach((obj) => {\r\n            let newObj = { ...obj };\r\n            let { type, options, displayName, inputValue, value } = newObj;\r\n            if (value !== undefined) {\r\n                let optionObj = {};\r\n                if (displayName !== undefined) optionObj.key = displayName;\r\n                if (inputValue !== undefined) optionObj.key = inputValue;\r\n                if (value !== undefined) optionObj.value = value;\r\n                if (Object.keys(optionObj).length) newObj = { ...newObj, ...optionObj };\r\n            } else if (/input/gi.test(type)) {\r\n                newObj._options = false;\r\n            } else {\r\n                let newOptions = checkOptions(options);\r\n                if (newOptions) {\r\n                    newObj._options = newOptions;\r\n                } else {\r\n                    let optionObj = {};\r\n                    if (options && options[0].displayName !== undefined) optionObj.key = options[0].displayName;\r\n                    //if (options && options[0].inputValue !== undefined) optionObj.key = options[0].inputValue;\r\n                    if (options && options[0].value !== undefined) optionObj.value = options[0].value;\r\n                    if (Object.keys(optionObj).length) newObj._options = [optionObj];\r\n                }\r\n            }\r\n            newArr.push(newObj);\r\n        });\r\n        return newArr;\r\n    };\r\n\r\n    function getAttributeObj() {\r\n        let fieldObj = xmlGetField('icbuCatProp');\r\n        if (!fieldObj || fieldObj._values || fieldObj._options) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values.filter((obj) => obj.name).sort((a, b) => a.type.length - b.type.length);\r\n            fieldObj._values = checkValues(fieldObj._values);\r\n        }\r\n        if (fieldObj.options) {\r\n            fieldObj._options = fieldObj.options.filter((obj) => obj.name).sort((a, b) => a.type.length - b.type.length);\r\n            fieldObj._options = checkOptions(fieldObj._options);\r\n        }\r\n        //console.log(fieldObj);\r\n        setAttributeObj(fieldObj);\r\n    } //在用的属性\r\n\r\n    function saveAttribute(newObj, cleaner) {\r\n        let valueArr = newObj._values;\r\n        let invalidList = []; //无效列表\r\n        let setter = setAttributeObj;\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueArr.forEach((obj, index) => {\r\n            let { type, id, _values } = obj;\r\n            let valueTemplates = newField.querySelector(`fields > field#${id}`); //引入填写模板\r\n            if (valueTemplates) {\r\n                valueTemplates.innerHTML = ''; //清空模板\r\n                if (/multi(?!Complex)/.test(type)) {\r\n                    let valueStr = '';\r\n                    _values.forEach((subObj) => {\r\n                        let { key, value } = subObj;\r\n                        valueStr += `<value inputValue=\"${key}\">${value}</value>`;\r\n                    });\r\n                    let elementValues = document.createElement('values');\r\n                    elementValues.innerHTML = valueStr;\r\n                    if (valueStr) {\r\n                        valueTemplates.innerHTML = elementValues.outerHTML;\r\n                        valueSaver += valueTemplates.outerHTML;\r\n                    } else {\r\n                        invalidList.push(index);\r\n                    }\r\n                } else {\r\n                    let { key, value } = _values;\r\n                    let elementValue = document.createElement('value');\r\n                    elementValue.setAttribute('inputValue', key);\r\n                    elementValue.innerText = value;\r\n                    const checkContent = (str) => str !== undefined && String(str).trim() !== '' && str !== null; //检查内容是否为空\r\n                    if (checkContent(key)) {\r\n                        valueTemplates.innerHTML = elementValue.outerHTML;\r\n                        valueSaver += valueTemplates.outerHTML;\r\n                    } else {\r\n                        invalidList.push(index);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (invalidList.length && cleaner) newObj._values = valueArr.filter((obj, index) => !invalidList.find((i) => i === index));\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('icbuCatProp', newObj); //通知父组件\r\n    }\r\n\r\n    const onAttributeConfirm = () => {\r\n        console.log('confirming');\r\n        if (!attributeSaver) return console.log('未修改任何属性呢');\r\n        let [mainAttributeObj, value] = attributeSaver;\r\n        // need to find the main attribute option first (by id),\r\n        //and then map the data with options(if any),\r\n        //  and then update to the main attribute\r\n        let { id, type, _values } = mainAttributeObj; //multicheck, singlecheck, input\r\n        let newObj = { ...attributeObj }; //make a copy\r\n        let valueArr = newObj._values;\r\n        let myOptions = attributeObj._options.find((option) => option.id === id); //找到当前属性下的选项\r\n        if (/multi(?!Complex)/.test(type)) {\r\n            _values = [];\r\n            value.forEach((str) => {\r\n                if (myOptions._options) {\r\n                    let subOptionObj = myOptions._options.find((subOption) => subOption.key === str); //options are mapped with names\r\n                    if (subOptionObj) _values.push(subOptionObj);\r\n                    //find the mapping, and save the data\r\n                    else _values.push({ key: '', value: str }); //worst situation ( no matches found)\r\n                } else {\r\n                    _values.push({ key: '', value: str }); //worst situation ( no matches found)\r\n                }\r\n            }); //然后再映射属性选项\r\n        } else {\r\n            if (myOptions._options) {\r\n                let subOptionObj = myOptions._options.find((subOption) => subOption.key === value); //options are mapped with names\r\n                if (subOptionObj) _values = subOptionObj;\r\n                //find the mapping, and save the data\r\n                else _values = { key: value, value: '' }; //worst situation ( no matches found)\r\n            } else {\r\n                _values.key = value; //worst situation ( no matches found)\r\n            } //然后再映射属性选项\r\n        }\r\n        mainAttributeObj._values = _values;\r\n        valueArr = valueArr.filter((obj) => obj.id !== id); //过滤旧属性\r\n        valueArr.push(mainAttributeObj);\r\n        newObj._values = valueArr;\r\n        saveAttribute(newObj);\r\n        return;\r\n    };\r\n\r\n    const onAttributeChange = (mainAttributeObj, value) => {\r\n        attributeSaver = [mainAttributeObj, value];\r\n        return;\r\n    };\r\n\r\n    const onOptionChange = (values) => {\r\n        setOptionSelected(values);\r\n        return;\r\n    };\r\n\r\n    const onOptionConfirm = () => {\r\n        if (!optionSelected) return;\r\n        let optionArr = optionSelected.map((value) => attributeObj._options.find((obj) => obj.name === value));\r\n        let newObj = { ...attributeObj };\r\n        let newValueArr = newObj._values || [];\r\n        optionArr.forEach((optionObj) => {\r\n            if (!newValueArr.length || !newValueArr.find((valueObj) => valueObj.id === optionObj.id)) {\r\n                let { id, name, type } = optionObj;\r\n                let newValue = { id, name, type };\r\n                newValue._values = /multi(?!Complex)/.test(type) ? [] : {};\r\n                newValueArr.push(newValue);\r\n            } //避免属性重复\r\n        });\r\n        newObj._values = newValueArr;\r\n        setAttributeObj(newObj);\r\n        setOptionSelected('');\r\n        setAddAttribute((prev) => !prev);\r\n        return;\r\n    };\r\n\r\n    const onAttributeClear = () => {\r\n        console.log('clearing');\r\n        let newObj = { ...attributeObj };\r\n        return saveAttribute(newObj, true);\r\n    }; //清理空属性\r\n\r\n    return (\r\n        <>\r\n            <div style={{ paddingTop: '10px', paddingBottom: '20px' }}>\r\n                {addAttribute ? (\r\n                    <>\r\n                        {attributeObj._options && attributeObj._options.length ? (\r\n                            <span style={{ display: 'flex', flexDirection: 'row', alignItems: 'stretch' }}>\r\n                                <Autocomplete\r\n                                    id=\"attribute-options\"\r\n                                    key={attributeObj._options ? attributeObj._options : 'attribute-options'}\r\n                                    sx={{ display: 'inline' }}\r\n                                    multiple\r\n                                    disableCloseOnSelect={true}\r\n                                    onChange={(e, value) => onOptionChange(value)}\r\n                                    options={attributeObj._options.map((obj) => obj.name)}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                                            {option}\r\n                                        </li>\r\n                                    )}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            fullWidth={false}\r\n                                            sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                            label={<Typography variant=\"h3\">{attributeObj.name}</Typography>}\r\n                                            placeholder={langPack.form.selectOrInput}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <Button startIcon={<CheckIcon />} onClick={onOptionConfirm}>\r\n                                    {langPack.common.yes}\r\n                                </Button>\r\n                                <Button startIcon={<CancelIcon />} onClick={() => setAddAttribute((prev) => !prev)}>\r\n                                    {langPack.common.no}\r\n                                </Button>\r\n                            </span>\r\n                        ) : (\r\n                            <Typography variant=\"body1\">{langPack.form.attributeMissing}</Typography>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Tooltip title={langPack.steps.addAttributes}>\r\n                            <Button startIcon={<AddIcon />} onClick={() => setAddAttribute((prev) => !prev)}>\r\n                                {langPack.steps.addAttributes}\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title={langPack.steps.clearAttributes}>\r\n                            <Button startIcon={<DeleteIcon />} onClick={onAttributeClear}>\r\n                                {langPack.steps.clearAttributes}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Divider />\r\n            <br />\r\n            {attributeObj._values && attributeObj._values.length ? (\r\n                attributeObj._values.map((obj) => {\r\n                    return !/input/gi.test(obj.type) ? (\r\n                        /multi(?!Complex)/.test(obj.type) ? ( //multiComplex的值需要发起额外的API请求才能获取\r\n                            <Autocomplete\r\n                                id=\"current-attributes-multiple\"\r\n                                key={obj.id + JSON.stringify(obj._values)}\r\n                                sx={{ display: 'inline' }}\r\n                                limitTags={1}\r\n                                multiple\r\n                                disableCloseOnSelect={true}\r\n                                onBlur={onAttributeConfirm}\r\n                                onChange={(e, value) => onAttributeChange(obj, value)}\r\n                                options={attributeObj._options.find((option) => option.id === obj.id)._options.map((obj) => obj.key)}\r\n                                defaultValue={obj._values.map((obj) => obj.key)}\r\n                                renderTags={(options, getTagProps) =>\r\n                                    options.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\r\n                                }\r\n                                renderOption={(props, option, { selected }) => (\r\n                                    <li {...props}>\r\n                                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                                        {option}\r\n                                    </li>\r\n                                )}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        fullWidth={false}\r\n                                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                        label={<Typography variant=\"h3\">{obj.name + ' _ ' + obj.type}</Typography>}\r\n                                        placeholder={langPack.form.selectOrInput}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        ) : (\r\n                            <Autocomplete\r\n                                id=\"current-attributes-single\"\r\n                                key={obj.id + JSON.stringify(obj._values)}\r\n                                sx={{ display: 'inline' }}\r\n                                onBlur={onAttributeConfirm}\r\n                                onChange={(e, value) => onAttributeChange(obj, value)}\r\n                                defaultValue={obj._values.key}\r\n                                options={attributeObj._options.find((option) => option.id === obj.id)._options.map((obj) => obj.key)}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        fullWidth={false}\r\n                                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                        label={<Typography variant=\"h3\">{obj.name + ' _ ' + obj.type}</Typography>}\r\n                                        placeholder={langPack.form.selectOrInput}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        )\r\n                    ) : (\r\n                        <TextField\r\n                            key={obj.id + JSON.stringify(obj._values)}\r\n                            id=\"current-attributes-input-only\"\r\n                            fullWidth={false}\r\n                            defaultValue={obj._values.key || ''}\r\n                            onBlur={onAttributeConfirm}\r\n                            onChange={(e) => onAttributeChange(obj, e.target.value)}\r\n                            sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                            label={<Typography variant=\"h3\">{obj.name + ' _ ' + obj.type}</Typography>}\r\n                            placeholder={langPack.form.selectOrInput}\r\n                        />\r\n                    );\r\n                })\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    langPack: PropTypes.object,\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    xmlGetField: PropTypes.func,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, Autocomplete, Button, Checkbox, InputAdornment, MenuItem, TextField, Divider, Tooltip, Chip } from '@mui/material';\r\nimport { Add as AddIcon, Check as CheckIcon, Cancel as CancelIcon, DeleteOutline as DeleteIcon } from '@mui/icons-material';\r\n\r\nfunction App({ langPack, onModified, productModified, xmlSchema, xmlGetField }) {\r\n    console.log('service running');\r\n    let customSaver = '';\r\n    let [customObj, setCustomObj] = useState({}); //定制信息\r\n    let [addCustom, setAddCustom] = useState(false); //是否添加\r\n    let [customSelected, setCustomSelected] = useState(''); //当前选中项\r\n    let [customStatusObj, setCustomStatusObj] = useState({}); //定制状态\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { customizedServices, productLightCustom } = productModified;\r\n        customizedServices ? setCustomObj(customizedServices) : getCustomObj();\r\n        productLightCustom ? setCustomStatusObj(productLightCustom) : getCustomStatusObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getCustomStatusObj() {\r\n        let fieldObj = xmlGetField('productLightCustom');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        } else {\r\n            fieldObj._values = {};\r\n        }\r\n        return setCustomStatusObj(fieldObj);\r\n    } //获取定制服务支持状态\r\n    function onCustomStatusChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productCustomizationNeeded); //校验\r\n        if (!value || !value.trim()) return queryResult(false, '请输入定制类型'); //校验\r\n        let newObj = { ...customStatusObj };\r\n        let setter = setCustomStatusObj;\r\n        let valueTagName = 'value';\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productLightCustom', newObj); //通知父组件\r\n    } //定制服务支持状态修改\r\n\r\n    function getCustomObj() {\r\n        let fieldObj = xmlGetField('customizedServices');\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .filter((obj) => obj.type === 'complex')\r\n                .map((obj) => {\r\n                    return { key: obj.values[1].values[0].value, value: Number(obj.values[0].values[0].value) };\r\n                });\r\n        }\r\n        let optionArr = fieldObj.options.filter((obj) => obj.type === 'complex');\r\n        if (optionArr.length) {\r\n            fieldObj._options = optionArr[0].options[1].options\r\n                .filter((obj) => obj.value !== '-1') //排除 displayName: \"other\" 不太用;\r\n                .map((obj) => {\r\n                    return { ...obj, key: obj.displayName, value: obj.value };\r\n                });\r\n        } //数据内部处理\r\n        //console.log(fieldObj);\r\n        return setCustomObj(fieldObj);\r\n    } //获取定制内容\r\n\r\n    const onCustomOptionChange = (value) => {\r\n        setCustomSelected(value);\r\n        return;\r\n    }; //选择选项\r\n\r\n    const onCustomOptionConfirm = () => {\r\n        if (!customSelected || !customSelected.trim()) return;\r\n        let newObj = { ...customObj };\r\n        let optionFound = newObj._options.find((obj) => obj.key === customSelected);\r\n        let key = optionFound ? optionFound.value : customSelected;\r\n        if (!newObj._values) newObj._values = []; //初始化\r\n        let valueArr = newObj._values.filter((obj) => obj.key !== key);\r\n        if (valueArr.length >= 5) return;\r\n        valueArr.push({ key, value: 1 });\r\n        newObj._values = valueArr;\r\n        setCustomObj(newObj);\r\n        console.log(newObj);\r\n        setCustomSelected('');\r\n        setAddCustom((prev) => !prev);\r\n        return;\r\n    }; //确认选项\r\n\r\n    const onCustomChange = (obj) => {\r\n        if (!customSaver) customSaver = {};\r\n        let finalValue = Number(obj.value);\r\n        if (isNaN(finalValue)) return queryResult(false, langPack.steps.numberOnly);\r\n        customSaver = { key: obj.key, value: finalValue };\r\n        return;\r\n    }; //定制项变化\r\n\r\n    const onCustomConfirm = () => {\r\n        if (!customSaver) return;\r\n        let newObj = { ...customObj };\r\n        let valueArr = newObj._values.filter((obj) => obj.key !== customSaver.key);\r\n        valueArr = valueArr.filter((obj) => obj.value);\r\n        valueArr = valueArr.filter((obj) => !isNaN(obj.value));\r\n        valueArr.push(customSaver);\r\n        customSaver = '';\r\n        newObj._values = valueArr;\r\n        let setter = setCustomObj;\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll(`fields > field[type=complex]`); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueArr.forEach((obj, index) => {\r\n            valueTemplates[index].querySelector('fields > field#custom_type').innerHTML = `<value>${obj.key}</value>`;\r\n            valueTemplates[index].querySelector('fields > field#quantity').innerHTML = `<value>${obj.value}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        valueSaver = valueSaver.replace(/fields/g, valueTagName); //替换\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        onModified('customizedServices', newObj);\r\n        onCustomStatusChange('1'); //同步到支持定制选项\r\n        return;\r\n    }; //确认定制项\r\n\r\n    const onCustomClear = () => {\r\n        let newObj = { ...customObj };\r\n        newObj._values = newObj._values.filter((obj) => obj.value);\r\n        setCustomObj(newObj);\r\n        return;\r\n    }; //清除无效的定制项\r\n\r\n    return (\r\n        <>\r\n            <div style={{ paddingTop: '10px', paddingBottom: '20px' }}>\r\n                {!addCustom ? (\r\n                    <>\r\n                        <Tooltip title={langPack.steps.addCustomInfo}>\r\n                            <Button startIcon={<AddIcon />} onClick={() => setAddCustom((prev) => !prev)}>\r\n                                {langPack.steps.addCustomInfo}\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title={langPack.steps.clearCustomInfo}>\r\n                            <Button startIcon={<DeleteIcon />} onClick={onCustomClear}>\r\n                                {langPack.steps.clearCustomInfo}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (\r\n                    <span style={{ display: 'flex', flexDirection: 'row', alignItems: 'stretch' }}>\r\n                        {customObj._options && customObj._options.length ? (\r\n                            <Autocomplete\r\n                                id=\"add-custom\"\r\n                                freeSolo\r\n                                key={customObj._options || 'options'}\r\n                                sx={{ display: 'inline' }}\r\n                                onChange={(e, value) => onCustomOptionChange(value)}\r\n                                onInputChange={(e, value) => onCustomOptionChange(value)}\r\n                                options={customObj._options.map((obj) => obj.key)}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        fullWidth={false}\r\n                                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                        label={<Typography variant=\"h3\">{customObj.name}</Typography>}\r\n                                        placeholder={langPack.form.selectOrInput}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <Button startIcon={<CheckIcon />} onClick={() => onCustomOptionConfirm()}>\r\n                            {langPack.common.yes}\r\n                        </Button>\r\n                        <Button startIcon={<CancelIcon />} onClick={() => setAddCustom((prev) => !prev)}>\r\n                            {langPack.common.no}\r\n                        </Button>\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <Divider />\r\n            <br />\r\n            {customObj._values && customObj._values.length ? (\r\n                customObj._values.map((obj) => (\r\n                    <Tooltip title={langPack.table.min_order_quantity}>\r\n                        <TextField\r\n                            key={obj.key}\r\n                            type=\"number\"\r\n                            fullWidth={false}\r\n                            defaultValue={obj.value}\r\n                            onChange={(e) => {\r\n                                onCustomChange({ key: obj.key, value: e.target.value });\r\n                            }}\r\n                            onBlur={onCustomConfirm}\r\n                            label={<Typography variant=\"h3\">{obj.key}</Typography>}\r\n                            placeholder={langPack.form.selectOrInput}\r\n                        />\r\n                    </Tooltip>\r\n                ))\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    langPack: PropTypes.object,\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    xmlGetField: PropTypes.func,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport {\r\n    Typography,\r\n    Autocomplete,\r\n    Button,\r\n    Checkbox,\r\n    InputAdornment,\r\n    MenuItem,\r\n    TextField,\r\n    Divider,\r\n    Tooltip,\r\n    Chip,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Remove as RemoveIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    ModeEdit as EditIcon,\r\n    Clear as ClearIcon,\r\n    DeleteOutline as DeleteIcon\r\n} from '@mui/icons-material';\r\n\r\nfunction App({ xmlSchema, langPack, productModified, xmlGetField, onModified }) {\r\n    console.log('RTS running');\r\n    //运费模板\r\n    let [shippingTemplateObj, setShippingTemplateObj] = useState({});\r\n    //产品毛重\r\n    let [weightObj, setWeightObj] = useState({});\r\n    //产品长宽高\r\n    let [measureObj, setMeasureObj] = useState({});\r\n    //销售模式\r\n    let [saleTypeObj, setSaleTypeObj] = useState({});\r\n    //销售模式附带（一批等于）\r\n    let [batchObj, setBatchObj] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { shippingTemplateId, pkgWeight, pkgMeasure, saleType, batchNum } = productModified;\r\n        shippingTemplateId ? setShippingTemplateObj(shippingTemplateId) : getShippingTemplateObj();\r\n        pkgWeight ? setWeightObj(pkgWeight) : getWeightObj();\r\n        pkgMeasure ? setMeasureObj(pkgMeasure) : getMeasureObj();\r\n        saleType ? setSaleTypeObj(saleType) : getSaleTypeObj();\r\n        batchNum ? setBatchObj(batchNum) : getBatchObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getShippingTemplateObj() {\r\n        let fieldObj = xmlGetField('shippingTemplateId');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        } else {\r\n            //productTypeSaver = fieldObj;\r\n        }\r\n        return setShippingTemplateObj(fieldObj);\r\n    } //获取运费模板\r\n\r\n    const onShippingTemplateChange = (valueObj) => {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = { ...shippingTemplateObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `value`;\r\n        let setter = setShippingTemplateObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += valueObj.value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('shippingTemplateId', newObj); //通知父组件\r\n    }; //运费模板修改\r\n\r\n    function getWeightObj() {\r\n        let fieldObj = xmlGetField('pkgWeight');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value };\r\n        }\r\n        return setWeightObj(fieldObj);\r\n    } //获取毛重\r\n\r\n    const onWeightChange = (value) => {\r\n        if (!value) return queryResult(false, langPack.steps.productWeightNeeded); //校验\r\n        let newObj = { ...weightObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setWeightObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('pkgWeight', newObj); //通知父组件\r\n    };\r\n\r\n    function getMeasureObj() {\r\n        let fieldObj = xmlGetField('pkgMeasure');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values.map((obj) => {\r\n                return { key: obj.id, value: obj.values[0].value };\r\n            });\r\n            let ranking = ['length', 'width', 'height'];\r\n            fieldObj._values.sort((a, b) => {\r\n                return ranking.indexOf(a.key) - ranking.indexOf(b.key);\r\n            });\r\n        }\r\n        return setMeasureObj(fieldObj);\r\n    } //获取长宽高\r\n\r\n    const onMeasureChange = (value) => {\r\n        if (!value) return queryResult(false, langPack.steps.productMeasureNeeded); //校验\r\n        let arr = value.split('*');\r\n        if (arr.length < 3) return queryResult(false, langPack.steps.productMeasureNeeded); //校验\r\n        let hasError = false;\r\n        arr.forEach((num) => {\r\n            if (!num || isNaN(num)) hasError = true;\r\n        });\r\n        if (hasError) return queryResult(false, langPack.steps.productMeasureNeeded); //校验\r\n        let newObj = { ...measureObj };\r\n        let keyArr = ['length', 'width', 'height'];\r\n        newObj._values = arr.map((obj, index) => {\r\n            return { key: keyArr[index], value: Number(obj) };\r\n        });\r\n        let valueTagName = `complex-value`;\r\n        let setter = setMeasureObj;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        let allValueTemplates = Array.from(valueTemplates);\r\n        allValueTemplates.find((node) => node.id === 'length').innerHTML = `<value>${newObj._values[0].value}</value>`;\r\n        allValueTemplates.find((node) => node.id === 'width').innerHTML = `<value>${newObj._values[1].value}</value>`;\r\n        allValueTemplates.find((node) => node.id === 'height').innerHTML = `<value>${newObj._values[2].value}</value>`;\r\n        allValueTemplates.forEach((node) => {\r\n            valueSaver += node.outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('pkgMeasure', newObj);\r\n    }; //长宽高确认\r\n\r\n    function getSaleTypeObj() {\r\n        let fieldObj = xmlGetField('saleType');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { key: '', value: fieldObj.values[0].value };\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        }\r\n        return setSaleTypeObj(fieldObj);\r\n    } //获取销售方式\r\n\r\n    const onSaleTypeChange = (valueObj) => {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productTypeNeeded); //校验\r\n        let newObj = { ...saleTypeObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `value`;\r\n        let setter = setSaleTypeObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += valueObj.value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('saleType', newObj); //通知父组件\r\n    };\r\n\r\n    function getBatchObj() {\r\n        let fieldObj = xmlGetField('batchNum');\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value };\r\n        }\r\n        return setBatchObj(fieldObj);\r\n    } //获取毛重\r\n\r\n    const onBatchChange = (value) => {\r\n        if (!value) return queryResult(false, langPack.steps.productWeightNeeded); //校验\r\n        let newObj = { ...batchObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let setter = setBatchObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        setter(newObj); //更新到JSX\r\n        return onModified('batchNum', newObj); //通知父组件\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Autocomplete\r\n                id=\"select-shipping-template\"\r\n                key={JSON.stringify(shippingTemplateObj._values)}\r\n                sx={{ display: 'inline' }}\r\n                onChange={(e, value) => onShippingTemplateChange(value)}\r\n                defaultValue={shippingTemplateObj._values}\r\n                options={shippingTemplateObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.key}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{shippingTemplateObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip title={langPack.steps.numberOnly}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    key={weightObj._values}\r\n                    id=\"port\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{weightObj.name}</Typography>}\r\n                    defaultValue={weightObj._values ? weightObj._values.value : ''}\r\n                    onBlur={(e) => onWeightChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title={langPack.form.measure}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(measureObj._values)}\r\n                    id=\"measure\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{measureObj.name}</Typography>}\r\n                    defaultValue={\r\n                        measureObj._values\r\n                            ? `${measureObj._values[0].value} * ${measureObj._values[1].value} * ${measureObj._values[2].value}`\r\n                            : ''\r\n                    }\r\n                    onBlur={(e) => onMeasureChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Autocomplete\r\n                id=\"add-sale-type\"\r\n                key={JSON.stringify(saleTypeObj._values)}\r\n                sx={{ display: 'inline' }}\r\n                onChange={(e, value) => onSaleTypeChange(value)}\r\n                defaultValue={saleTypeObj._values}\r\n                options={saleTypeObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.key}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{saleTypeObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip\r\n                title={langPack.steps.numberOnly}\r\n                sx={{ display: saleTypeObj._values && saleTypeObj._values.value !== 'normal' ? 'inline-block' : 'none' }}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    key={batchObj._values}\r\n                    id=\"batch\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{batchObj.name}</Typography>}\r\n                    defaultValue={batchObj._values ? batchObj._values.value : ''}\r\n                    onBlur={(e) => onBatchChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    xmlSchema: PropTypes.object,\r\n    langPack: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    xmlGetField: PropTypes.func,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\r\nimport { useState, useEffect, useRef, lazy } from 'react';\r\nimport JoditEditor from 'jodit-react';\r\nimport PropTypes from 'prop-types';\r\nimport Loadable from 'ui-component/Loadable';\r\nconst Photo = Loadable(lazy(() => import('views/photo')));\r\n\r\n// material-ui\r\nimport { Typography, Tooltip, Button, Dialog, DialogTitle } from '@mui/material';\r\nimport { Cloud as CloudIcon, Build as BuildIcon } from '@mui/icons-material';\r\n\r\nfunction ProductDetail({ localization, productModified, onModified, xmlSchema, xmlGetField, langPack }) {\r\n    const editor = useRef(null);\r\n    const iconToggleMagic = useRef(null);\r\n    const iconCloudImage = useRef(null);\r\n    let [descriptionObj, setDescriptionObj] = useState({});\r\n    let [descriptionTypeObj, setDescriptionTypeObj] = useState({});\r\n    let [cloudImageArr, setCloudImageArr] = useState([]); //导入的云图片\r\n    let [dialogOpen, setDialogOpen] = useState(false); //选择图片的对话框状态\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { superText, productDescType } = productModified;\r\n        superText ? setDescriptionObj(superText) : getDescriptionObj();\r\n        productDescType ? setDescriptionTypeObj(productDescType) : getDescriptionTypeObj();\r\n        HTMLEditorFormatter();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getDescriptionObj() {\r\n        let fieldObj = xmlGetField('superText');\r\n        console.log(fieldObj);\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: String(fieldObj.values[0].value).encodeHTMLEntity() }; //数据内部处理\r\n        }\r\n        return setDescriptionObj(fieldObj);\r\n    } //获取产品详情\r\n    function onDescriptionChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productDetailsNeeded); //校验\r\n        if (value === descriptionObj._values.value) return console.log('未修改'); //未修改\r\n        value = value.replace(/\\n/g, '').trim();\r\n        let newObj = { ...descriptionObj };\r\n        newObj._values = { value };\r\n        let setter = setDescriptionObj;\r\n        let valueSaver = value.trim().encodeNonASCII();\r\n        if (valueSaver.length > 50000) return queryResult(false, langPack.form.descriptionOverflow);\r\n        newObj.xml.innerHTML = ''; //删除前值\r\n        newObj.xml.append(document.createElement('value'));\r\n        newObj.xml.children[0].innerText = valueSaver;\r\n        setter(newObj); //更新到JSX\r\n        onDescriptionTypeChange('2'); //同步更新到类型(目前只支持\"普通编辑\")\r\n        return onModified('superText', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    function getDescriptionTypeObj() {\r\n        let fieldObj = xmlGetField('productDescType');\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        let value = fieldObj.values ? fieldObj.values[0].value : '2';\r\n        if (fieldObj._options.find((obj) => obj.value === value)) {\r\n            let key = fieldObj._options.find((obj) => obj.value === value).key;\r\n            fieldObj._values = { key, value };\r\n        }\r\n        //console.log(fieldObj);\r\n        return setDescriptionTypeObj(fieldObj);\r\n    } //获取产品详情描述类型\r\n    function onDescriptionTypeChange(value) {\r\n        let newObj = { ...descriptionTypeObj };\r\n        if (newObj._options.find((obj) => obj.value === value)) {\r\n            newObj._values = { key: newObj._options.find((obj) => obj.value === value).key, value };\r\n        }\r\n        let valueTagName = `value`;\r\n        let setter = setDescriptionTypeObj;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        newObj.xml.innerHTML = valueSaver.trim().encodeHTMLEntity(); //删除前值\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productDescType', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    //Cloud-Photo组件 相关事件\r\n    let onDialogClose = (submit) => {\r\n        setDialogOpen(false);\r\n        if (submit) {\r\n            let valueArr = cloudImageArr.map((obj) => {\r\n                return { ...obj, key: obj.id, value: obj.url };\r\n            });\r\n            return onImageChange(valueArr);\r\n        }\r\n        return setCloudImageArr([]); //清除传入值\r\n    }; //对话框关闭\r\n    let onPhotoSelected = (value) => {\r\n        if (!value.length) return;\r\n        setCloudImageArr(value);\r\n    }; //选择了图片，则存到当前component里\r\n    let onImageChange = (imageArr) => {\r\n        console.log(imageArr);\r\n        if (!imageArr.length) return;\r\n        let htmlArr = imageArr.map((imageObj) => {\r\n            return `<br /><img src='${imageObj.url}' />`;\r\n        });\r\n        let imgStr = htmlArr.join('');\r\n        onDescriptionChange(imgStr + editor.current.value);\r\n    };\r\n\r\n    async function uploadPhotos(photoFile) {\r\n        let paramObj = ma.photoUploadQuery({ file_name: photoFile.name || 'image.png', image_bytes: photoFile, group_id: 0 });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, msg.response.result);\r\n        let res = ma.photoUploadCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        queryResult(status, langPack.steps.uploadSuccess);\r\n        return setTimeout(() => imageReplacer(result), 1234);\r\n    }\r\n\r\n    function imageReplacer(result) {\r\n        console.log('replacing');\r\n        let dom = editor.current.component.workplace;\r\n        let imgs = dom.querySelectorAll('img');\r\n        for (let img of Array.from(imgs)) {\r\n            if (!/alicdn.com/.test(img.src)) {\r\n                img.src = result.photobank_url;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function HTMLEditorFormatter() {\r\n        if (iconToggleMagic.current && iconCloudImage.current) {\r\n            setTimeout(() => {\r\n                Array.from(document.body.querySelectorAll(`svg[data-testid=\"BuildIcon\"]`)).forEach(\r\n                    (node) => (node.style = 'fill: orangered; stroke: orangered;')\r\n                );\r\n                Array.from(document.body.querySelectorAll(`svg[data-testid=\"CloudIcon\"]`)).forEach(\r\n                    (node) => (node.style = 'fill: skyblue; stroke: skyblue;')\r\n                );\r\n            }, 888);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h4\" sx={{ paddingTop: '6px', paddingBottom: '6px', color: 'orangered' }}>\r\n                {langPack.steps.productDescriptionTip}\r\n            </Typography>\r\n            <div style={{ display: 'block', flexDirection: 'column', justifyContent: 'center' }}>\r\n                <Dialog onClose={() => onDialogClose(true)} open={dialogOpen}>\r\n                    <DialogTitle>{langPack.steps.selectFromCloud}</DialogTitle>\r\n                    <Photo onPhotoSelected={onPhotoSelected} />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => onDialogClose(true)}>\r\n                        {langPack.common.yes}\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"error\" onClick={() => onDialogClose()}>\r\n                        {langPack.common.no}\r\n                    </Button>\r\n                </Dialog>\r\n            </div>\r\n            <div style={{ display: 'none' }}>\r\n                <BuildIcon ref={iconToggleMagic} />\r\n                <CloudIcon ref={iconCloudImage} />\r\n            </div>\r\n            <JoditEditor\r\n                ref={editor}\r\n                value={descriptionObj._values ? descriptionObj._values.value : ''}\r\n                config={{\r\n                    //全局变量\r\n                    language: localization.locale === 'zhCN' ? 'zh_cn' : 'en_us',\r\n                    enter: 'DIV',\r\n                    defaultActionOnPaste: 'insert_clear_html',\r\n                    toolbarAdaptive: false,\r\n                    toolbarButtonSize: 'large',\r\n                    imageProcessor: {\r\n                        replaceDataURIToBlobIdInView: false\r\n                    },\r\n                    buttons: [\r\n                        'source',\r\n                        'bold',\r\n                        'italic',\r\n                        'underline',\r\n                        'eraser',\r\n                        'ul',\r\n                        'ol',\r\n                        'left',\r\n                        'font',\r\n                        'fontsize',\r\n                        'brush',\r\n                        'image',\r\n                        'copyformat',\r\n                        'copy',\r\n                        'paste',\r\n                        'table',\r\n                        'link',\r\n                        {\r\n                            name: 'toggleSmartEdit',\r\n                            icon: iconToggleMagic.current ? iconToggleMagic.current.outerHTML : '',\r\n                            tooltip: langPack.steps.toggleSmartEdit,\r\n                            exec: function (editor, textNearby, obj) {\r\n                                let html = editor.value;\r\n                                html = html.replace(/\\n/gi, ''); //inline\r\n                                html = html.replace(/>/gi, '>\\n'); //按照tag 换行\r\n                                let htmlCodes = html.split('\\n');\r\n                                htmlCodes = htmlCodes.map((line) => {\r\n                                    if (!/<img src/gi.test(line)) return line;\r\n                                    line = / class=\"magic-(\\d{1,3})x000\"/gi.test(line)\r\n                                        ? line.replace(/x000/gi, '')\r\n                                        : line.replace(/ class=\"magic-(\\d{1,3})\"/gi, ` class=\"magic-$1` + `x000\"`);\r\n                                    return line;\r\n                                }); //去除smart editing 对图片的限制\r\n                                html = htmlCodes.join('');\r\n                                editor.value = html;\r\n                            }\r\n                        },\r\n                        {\r\n                            name: 'iconCloudImage',\r\n                            icon: iconCloudImage.current ? iconCloudImage.current.outerHTML : '',\r\n                            tooltip: langPack.steps.selectFromCloud,\r\n                            exec: function (editor, textNearby, obj) {\r\n                                setDialogOpen(true);\r\n                            }\r\n                        } /* \r\n                        {\r\n                            icon: iconToggleMagic.current ? iconToggleMagic.current.outerHTML : '',\r\n                            tooltip: '插入模板变量',\r\n                            exec: function (editor, textNearby, obj) {\r\n                                let varSelected = obj.control.text || '客户姓名';\r\n                                let varObj = {\r\n                                    贵司: '${company_name}',\r\n                                    客户姓名: '${contacts}',\r\n                                    客户邮箱: '${email}',\r\n                                    销售姓名: '${salesManager}'\r\n                                };\r\n                                let myVar = varObj[varSelected];\r\n                                editor.selection.removeMarkers();\r\n                                const text = editor.createInside.element('span');\r\n                                text.innerHTML = myVar;\r\n                                editor.selection.insertNode(text);\r\n                                editor.setEditorValue(); // for syncronize value between source textarea and editor\r\n                            },\r\n                            list: {\r\n                                '${company_name}': '贵司',\r\n                                '${contacts}': '客户姓名',\r\n                                '${email}': '客户邮箱',\r\n                                '${salesManager}': '销售姓名'\r\n                            }\r\n                        } */\r\n                    ],\r\n                    events: {\r\n                        paste: (e) => {\r\n                            //粘贴动作发生时\r\n                            console.log('粘贴...', e); //本地图片\r\n                            let items = e.clipboardData && e.clipboardData.items;\r\n                            if (!items || !items.length) return;\r\n                            for (let item of items) {\r\n                                if (item == null || item.type.match('image') == null) continue;\r\n                                let file = item.getAsFile();\r\n                                console.log(file);\r\n                                if (file == null) return console.log('无法获取图片');\r\n                                if (file.size > 10 * 1000 * 1000) {\r\n                                    return queryResult(false, 'size no larger than 10M. 图片文件大小不能超过10M');\r\n                                }\r\n                                return uploadPhotos(file);\r\n                            } // 此时file就是剪切板中的图片文件\r\n                        },\r\n                        beforePasteInsert: async (text) => {\r\n                            console.log('粘贴内容植入前...'); //网络图片\r\n                        } //粘贴到文本框时\r\n                    }\r\n                }}\r\n                tabIndex={1} // tabIndex of textarea\r\n                onBlur={(newContent) => onDescriptionChange(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                onChange={(newContent) => {}}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nProductDetail.propTypes = {\r\n    localization: PropTypes.object,\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    onModified: PropTypes.func,\r\n    xmlGetField: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default ProductDetail;\r\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useMediaQuery, Typography, Accordion, AccordionDetails, AccordionSummary } from '@mui/material';\r\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { Languages } from './Languages';\r\nimport EditStep from './component/EditStep';\r\nimport PhotoGallery from './component/PhotoGallery';\r\nimport ProductSummary from './component/ProductSummary';\r\nimport ProductAttribute from './component/ProductAttribute';\r\nimport ProductService from './component/ProductService';\r\nimport ProductRTS from './component/ProductRTS';\r\nimport ProductDescription from './component/ProductDescription';\r\nimport Confirmation from './component/Confirmation';\r\n\r\n// ==============================|| SINGLE PAGE APPLICATION ||============================== //\r\nlet productModified = {};\r\nlet editMode; //编辑模式 ? 更新 ： 新建\r\nlet productSchema; //产品编辑模板\r\nlet real_product_id; //产品id\r\n\r\nconst App = () => {\r\n    //全局数据\r\n    console.log('productEdit app running');\r\n    let localization = useSelector((state) => state.localization); //多语言相关\r\n    let globalization = useSelector((state) => state.globalization); //全局数据\r\n    let [langPack, setLangPack] = useState(Languages[localization.locale]); //currentLanguage\r\n    let [loginData] = useState(globalization.baseData.loginData);\r\n    let navigate = useNavigate(); //react-router-dom\r\n    //控制.面板 //编辑步骤提示 & 菜单折叠\r\n    let [activeStep, setActiveStep] = useState(0);\r\n    let [expanded, setExpanded] = useState({ panel1: true, panel2: false, panel3: false, panel4: false });\r\n    let photoCols = useMediaQuery(useTheme().breakpoints.down('md')) ? 3 : 6;\r\n    //产品信息汇总\r\n    let urlParams = new URLSearchParams(location.pathname.replace('/product/', ''));\r\n    let product_id = urlParams.get('product_id'); //产品id\r\n    let group_id = urlParams.get('group_id') || ''; //分组id\r\n    let category_Id_ext = urlParams.get('category_id'); //产品分类id\r\n    editMode = product_id ? 'update' : 'add';\r\n    let [xmlSchema, setXmlSchema] = useState(null);\r\n    let [finalCatId, setFinalCatId] = useState(0); //当前产品类目id\r\n    let [rtsProduct, setRtsProduct] = useState(false); //是否是RTS产品\r\n\r\n    useEffect(() => {\r\n        setLangPack(Languages[localization.locale]);\r\n        return; //语言切换\r\n    }, [localization.locale]);\r\n\r\n    useEffect(() => {\r\n        console.log('I want product editing');\r\n        if (!loginData) return navigate('/');\r\n        if (!editMode) return queryResult(false, langPack.steps.productIdError);\r\n        editMode === 'update' ? getProductInfo({ product_id }) : makeProductInfo({ cat_id: category_Id_ext });\r\n        return () => {\r\n            console.log('I leave product edit');\r\n            productModified = {};\r\n        }; //载入 & 清理\r\n    }, []);\r\n\r\n    //____________一些函数_______________________________________________\r\n    async function getProductInfo(obj) {\r\n        let paramObj = ma.productDetailQuery(obj);\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productDetailCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status || !result) return queryResult(status, result);\r\n        //console.log(result);\r\n        let { category_id, rts } = result;\r\n        if (category_id) {\r\n            setFinalCatId(category_id);\r\n        }\r\n        if (product_id) {\r\n            getProductId({ product_id });\r\n        }\r\n        setRtsProduct(rts);\r\n    } //获取产品信息\r\n\r\n    function getProductBasicInfo() {\r\n        setRtsProduct(false);\r\n        setFinalCatId(0);\r\n    } //👇👇👇即将顶替，然后引入一个空的组件，用于处理基本信息，I suppose\r\n\r\n    async function getProductId(obj) {\r\n        let paramObj = ma.productIdQuery(obj);\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productIdCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        real_product_id = result;\r\n        makeProductExample({ product_id: real_product_id });\r\n        return console.log(result);\r\n    } //获取类目信息\r\n\r\n    async function uploadPhotos(photoFile) {\r\n        let currentFolder = -1;\r\n        let paramObj = ma.photoUploadQuery({ file_name: photoFile.name, image_bytes: photoFile, group_id: currentFolder });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.yes);\r\n        let res = ma.photoUploadCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(false, result);\r\n        queryResult(true, langPack.steps.uploadSuccess);\r\n        return result;\r\n    }\r\n\r\n    async function makeProductInfo(obj) {\r\n        let paramObj = ma.productSchemaQuery({\r\n            param_product_top_publish_request: JSON.stringify({\r\n                ...obj,\r\n                language: localization.locale === 'enUS' ? 'en_US' : 'zh'\r\n            })\r\n        });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productSchemaCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        return makeSchema(result);\r\n    } //获取新产品 编辑模板\r\n    //👆二选一👇\r\n    async function makeProductExample(obj) {\r\n        let paramObj = ma.productSchemaRenderQuery({\r\n            param_product_top_publish_request: JSON.stringify({\r\n                ...obj,\r\n                language: localization.locale === 'enUS' ? 'en_US' : 'zh'\r\n            })\r\n        });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productSchemaRenderCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        return makeSchema(result);\r\n    } //获取 现有产品信息  &  编辑模板\r\n\r\n    function makeSchema(xml) {\r\n        productSchema = new DOMParser().parseFromString(xml, 'text/xml');\r\n        console.log(productSchema);\r\n        setXmlSchema(productSchema);\r\n        window.productSchema = productSchema;\r\n        const errorNode = productSchema.querySelector('parsererror');\r\n        if (errorNode) return queryResult(false, langPack.steps.uneditable);\r\n        return;\r\n    } //构造编辑框架\r\n\r\n    async function submitProductSchema(xml) {\r\n        let queryMethod;\r\n        let checkMethod;\r\n        let productId;\r\n        let catId;\r\n        if (editMode === 'add') {\r\n            queryMethod = ma.productSchemaAddQuery;\r\n            checkMethod = ma.productSchemaAddCheck;\r\n            catId = category_Id_ext;\r\n        } else {\r\n            queryMethod = ma.productSchemaUpdateQuery;\r\n            checkMethod = ma.productSchemaUpdateCheck;\r\n            productId = real_product_id;\r\n            catId = finalCatId;\r\n        }\r\n        let xmldom = new DOMParser().parseFromString(xml, 'text/xml');\r\n        Array.from(xmldom.querySelectorAll('itemSchema > field > rules, options, label-group, fields')).forEach((node) => node.remove());\r\n        Array.from(xmldom.children[0].children).forEach((node) => (!node.children.length ? node.remove() : ''));\r\n        xml = xmldom.children[0].outerHTML;\r\n        let params = {\r\n            xml,\r\n            cat_id: Number(catId),\r\n            language: localization.locale === 'enUS' ? 'en_US' : 'zh'\r\n        };\r\n        if (productId) params.product_id = productId;\r\n        let paramObj = queryMethod({\r\n            param_product_top_publish_request: JSON.stringify(params)\r\n        });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = checkMethod(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        queryResult(true, editMode === 'add' ? langPack.steps.addSuccess : langPack.steps.updateSuccess);\r\n        return;\r\n    } //发品（添加/修改）\r\n\r\n    function xmlGetField(id) {\r\n        if (!xmlSchema) return;\r\n        let node = xmlSchema.querySelector(`itemSchema > field[id=\"${id}\"]`);\r\n        if (!node) return;\r\n        return insideCheck([node])[0];\r\n    } //获取单个字段信息\r\n\r\n    function insideCheck(nodeArr) {\r\n        let newSubArr = [];\r\n        let subArr = Array.from(nodeArr);\r\n        for (let index = 0; index < subArr.length; index++) {\r\n            let xml = subArr[index];\r\n            let subObj = fieldCheck(xml);\r\n            if (!subObj) subObj = {};\r\n            subObj.xml = xml;\r\n            if (subObj.options && subObj.options.length) subObj.options = insideCheck(subObj.options);\r\n            if (subObj.values && subObj.values.length) subObj.values = insideCheck(subObj.values);\r\n            if (xml.innerHTML && !xml.children.length) subObj.value = xml.innerHTML;\r\n            newSubArr.push(subObj);\r\n        }\r\n        return newSubArr;\r\n    } //获取内部数据\r\n\r\n    function generalCheck(node) {\r\n        let attributeObj = node.getAttributeObj();\r\n        if (!attributeObj) attributeObj = {};\r\n        let resultObj = { ...attributeObj, xml: node };\r\n        return resultObj;\r\n    } //获取基本信息\r\n\r\n    function fieldCheck(node) {\r\n        let resultObj = generalCheck(node);\r\n        let { type } = resultObj;\r\n        if (!type) return resultObj;\r\n        let optionNodes;\r\n        let valueNodes;\r\n        if (type === 'multiComplex') {\r\n            optionNodes = node.querySelectorAll('fields > field');\r\n            valueNodes = node.querySelectorAll('complex-values > field');\r\n        } else if (type === 'complex') {\r\n            optionNodes = node.querySelectorAll('fields > field');\r\n            valueNodes = node.querySelectorAll('complex-value > field');\r\n        } else if (type === 'multiCheck') {\r\n            optionNodes = node.querySelectorAll('options > option');\r\n            valueNodes = node.querySelectorAll('values > value');\r\n        } else if (type === 'multiInput') {\r\n            valueNodes = node.querySelectorAll('values > value');\r\n        } else if (type === 'singleCheck') {\r\n            optionNodes = node.querySelectorAll('options > option');\r\n            valueNodes = node.querySelectorAll('value');\r\n        } else if (type === 'input') {\r\n            valueNodes = node.querySelectorAll('value');\r\n        }\r\n        if (optionNodes && optionNodes.length) resultObj.options = optionNodes;\r\n        if (valueNodes && valueNodes.length) resultObj.values = valueNodes;\r\n        return resultObj;\r\n    } //获取选项和值\r\n\r\n    const onModified = (key, value) => {\r\n        console.log('modified', key, value);\r\n        console.log(value.xml);\r\n        productModified[key] = value;\r\n    }; //更新产品信息\r\n\r\n    const modificationSubmission = () => {\r\n        let modifiedKeys = Object.keys(productModified);\r\n        if (!modifiedKeys.length) return queryResult(false, langPack.steps.modificationNull);\r\n        console.log(productModified);\r\n        let xmlArr = Object.values(productModified).map((obj) => obj.xml);\r\n        let finalXmlStr = '<itemSchema>';\r\n        xmlArr.forEach((xml) => (finalXmlStr += xml.outerHTML));\r\n        finalXmlStr += '</itemSchema>';\r\n        let xmldom = new DOMParser().parseFromString(finalXmlStr, 'text/xml').firstChild; //创建XML副本\r\n        //Array.from(xmldom.querySelectorAll('field > :not(value, values, complex-value, complex-values)')).forEach((node) => node.remove());\r\n        finalXmlStr = xmldom.outerHTML.replace(/ xmlns=\"http:\\/\\/www.w3.org\\/1999\\/xhtml\"/gi, '');\r\n        finalXmlStr = finalXmlStr.replace(/inputvalue/g, 'inputValue');\r\n        finalXmlStr = finalXmlStr.encodeNonASCII(); //非ASCII字符须编码\r\n        submitProductSchema(finalXmlStr);\r\n    };\r\n\r\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n        setExpanded((prev) => {\r\n            return { ...prev, [panel]: isExpanded };\r\n        });\r\n    }; //面板展开、收起\r\n    //____________Functions return JSX_______________________________________________\r\n\r\n    return (\r\n        <MainCard title=\"Product Edit --产品编辑\">\r\n            <EditStep langPack={langPack} activeStep={activeStep} setActiveStep={setActiveStep} />\r\n            {activeStep === 0 ? (\r\n                <>\r\n                    <PhotoGallery\r\n                        productModified={productModified}\r\n                        xmlSchema={xmlSchema}\r\n                        localization={localization}\r\n                        photoCols={photoCols}\r\n                        rowHeight={200}\r\n                        uploadPhotos={uploadPhotos}\r\n                        xmlGetField={xmlGetField}\r\n                        onModified={onModified}\r\n                        langPack={langPack}\r\n                    />\r\n                    <Accordion expanded={expanded['panel1']} onChange={handleAccordionChange('panel1')}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'coral' }}>\r\n                                {langPack.form.KeyInformation}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel1}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            <>\r\n                                <ProductSummary\r\n                                    productModified={productModified}\r\n                                    group_id={group_id}\r\n                                    xmlSchema={xmlSchema}\r\n                                    langPack={langPack}\r\n                                    rtsProduct={rtsProduct}\r\n                                    xmlGetField={xmlGetField}\r\n                                    onModified={onModified}\r\n                                />\r\n                            </>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion expanded={expanded['panel2']} onChange={handleAccordionChange('panel2')}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'red' }}>\r\n                                {langPack.form.ProductAttributes}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel2}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            <>\r\n                                <ProductAttribute\r\n                                    productModified={productModified}\r\n                                    xmlSchema={xmlSchema}\r\n                                    langPack={langPack}\r\n                                    xmlGetField={xmlGetField}\r\n                                    onModified={onModified}\r\n                                />\r\n                            </>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion expanded={expanded['panel3']} onChange={handleAccordionChange('panel3')}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'orangered' }}>\r\n                                {langPack.form.productService}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel3}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            <>\r\n                                <ProductService\r\n                                    productModified={productModified}\r\n                                    xmlSchema={xmlSchema}\r\n                                    langPack={langPack}\r\n                                    xmlGetField={xmlGetField}\r\n                                    onModified={onModified}\r\n                                />\r\n                            </>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion\r\n                        expanded={expanded['panel4']}\r\n                        onChange={handleAccordionChange('panel4')}\r\n                        sx={{ display: rtsProduct ? 'block' : 'none' }}\r\n                    >\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'orangered' }}>\r\n                                {langPack.form.rtsProduct}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel4}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            {rtsProduct ? (\r\n                                <>\r\n                                    <ProductRTS\r\n                                        productModified={productModified}\r\n                                        xmlSchema={xmlSchema}\r\n                                        langPack={langPack}\r\n                                        xmlGetField={xmlGetField}\r\n                                        onModified={onModified}\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <br />\r\n                </>\r\n            ) : activeStep === 1 ? (\r\n                <>\r\n                    <ProductDescription\r\n                        productModified={productModified}\r\n                        localization={localization}\r\n                        xmlGetField={xmlGetField}\r\n                        onModified={onModified}\r\n                        xmlSchema={xmlSchema}\r\n                        langPack={langPack}\r\n                    />\r\n                </>\r\n            ) : activeStep === 2 ? (\r\n                <>\r\n                    <Confirmation langPack={langPack} productModified={productModified} modificationSubmission={modificationSubmission} />\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}