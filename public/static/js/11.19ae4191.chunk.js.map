{"version":3,"sources":["views/product/Languages.js","views/product/component/ProductCategory.js","views/product/component/Confirmation.js","views/product/ProductDraft.js"],"names":["Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","folderRequired","table","tableHeader","categoryName","productId","subject","status","display","id","is_rts","is_specific","owner_member_display_name","product_type","smart_edit","attributes","keywords","price","payment_methods","min_order_quantity","unit_type","gmt_create","gmt_modified","score","tag","tableToolbar","menuHide","menuShow","productScore","productDisplayOn","productDisplayOff","productUpdate","productEdit","form","KeyInformation","ProductAttributes","Advanced","category","attributeMissing","attributeDuplicated","selectOrInput","pieces","steps","first","second","finally","previous","next","complete","addProduct","productIdError","categoryError","editPrice","choosePhotos","uploadPhotos","removePhotos","photoUploadTip","productDescriptionTip","mainPhotoRequired","descriptionOverflow","panel1","panel2","panel3","addAttributes","removeAttributes","modificationNull","addCustomInfo","modificationDone","numberOnly","uploadSuccess","productScoreError","basic","potential","super","top","common","yes","no","success","netFail","zhCN","BreadChip","styled","Chip","backgroundColor","grey","height","emphasize","boxShadow","ProductCategory","localization","categories","menuRef","menuState","showMenu","closeMenu","menuArr","anchorEl","sx","paddingTop","map","obj","index","menuLevel","component","href","label","locale","name","cn_name","icon","undefined","deleteIcon","onDelete","category_id","ref","open","Boolean","onClose","onClick","Confirmation","langPack","productModified","modificationSubmission","navigate","useNavigate","modifiedKeys","Object","keys","length","variant","key","align","startIcon","App","console","log","useSelector","state","globalization","useState","setLangPack","baseData","loginData","panel4","group_id","location","pathname","replace","finalCatId","setFinalCatId","setCategories","categoryArr","useRef","menuValue","setMenuState","a","paramObj","ma","productAddDraftQuery","fetchAPI","msg","response","queryResult","result","res","productAddDraftCheck","product_id","getCategoryInfo","productCategoryQuery","productCategoryCheck","productCategoryAttributeQuery","productCategoryAttributeCheck","getAllCategories","category_level","cat_id","categoryResult","level","parent_ids","Array","number","child_ids","find","newCategories","push","useEffect","getCategoryAttributeInfo","latestCategories","childIdsArr","indexOf","current","title","role","marginBottom","dataObj","entries","k","v","JSON","stringify","makeProductDraft"],"mappings":"uHAAA,sCAAIA,EAAY,CACZC,KAAM,CACFC,OAAQ,CACJC,cAAe,gBACfC,eAAgB,mCAChBC,aAAc,iBACdC,WAAY,mBACZC,SAAU,iBACVC,eAAgB,sCAEpBC,MAAO,CACHC,YAAa,WACbC,aAAc,gBACdC,UAAW,aACXC,QAAS,UACTC,OAAQ,SACRC,QAAS,UACTC,GAAI,KACJC,OAAQ,MACRC,YAAa,WACbC,0BAA2B,QAC3BC,aAAc,OACdC,WAAY,aACZC,WAAY,aACZC,SAAU,WACVC,MAAO,gBACPC,gBAAiB,kBACjBC,mBAAoB,0BACpBC,UAAW,YACXC,WAAY,cACZC,aAAc,gBACdC,MAAO,QACPC,IAAK,OAETC,aAAc,CACVC,SAAU,YACVC,SAAU,YACVC,aAAc,SACdC,iBAAkB,WAClBC,kBAAmB,YACnBC,cAAe,SACfC,YAAa,QAEjBC,KAAM,CACFC,eAAgB,kBAChBC,kBAAmB,qBACnBC,SAAU,WACV9B,QAAS,mBACT+B,SAAU,2BACVrB,SAAU,qCACVC,MAAO,oBACPC,gBAAiB,yCACjBC,mBAAoB,WACpBJ,WAAY,gBACZuB,iBAAkB,oBAClBC,oBAAqB,uBACrBC,cAAe,kBACfC,OAAQ,UAEZC,MAAO,CACHC,MAAO,kBACPC,OAAQ,gBACRC,QAAS,oBACTC,SAAU,WACVC,KAAM,OACNC,SAAU,WACVC,WAAY,cACZC,eAAgB,4CAChBC,cAAe,gCACfC,UAAW,aACXC,aAAc,gBACdC,aAAc,gBACdC,aAAc,mCACdC,eAAgB,kEAChBC,sBACI,yJACJC,kBAAmB,0BACnBC,oBAAqB,uDACrBC,OAAQ,mCACRC,OAAQ,6BACRC,OAAQ,4BACRC,cAAe,iBACfC,iBAAkB,oBAClBC,iBAAkB,uBAClBC,cAAe,kBACfC,iBAAkB,2CAClBC,WAAY,2BACZC,cAAe,iBACfC,kBAAmB,kBAEvB1C,aAAc,CACV2C,MAAO,QACPC,UAAW,YACXC,MAAO,QACPC,IAAK,OAETC,OAAQ,CACJC,IAAK,KACLC,GAAI,SACJC,QAAS,UACTC,QAAS,mBAGjBC,KAAM,CACFrF,OAAQ,CACJC,cAAe,qBACfC,eAAgB,6CAChBC,aAAc,iCACdC,WAAY,uCACZC,SAAU,iCACVC,eAAgB,wCAEpBC,MAAO,CACHC,YAAa,eACbC,aAAc,eACdC,UAAW,kBACXC,QAAS,eACTC,OAAQ,2BACRC,QAAS,2BACTC,GAAI,KACJC,OAAQ,MACRC,YAAa,qBACbC,0BAA2B,qBAC3BC,aAAc,2BACdC,WAAY,2BACZC,WAAY,eACZC,SAAU,qBACVC,MAAO,6BACPC,gBAAiB,2BACjBC,mBAAoB,sCACpBC,UAAW,eACXC,WAAY,2BACZC,aAAc,2BACdC,MAAO,qBACPC,IAAK,gBAETC,aAAc,CACVC,SAAU,2BACVC,SAAU,2BACVC,aAAc,qBACdC,iBAAkB,eAClBC,kBAAmB,eACnBC,cAAe,eACfC,YAAa,gBAEjBC,KAAM,CACFC,eAAgB,2BAChBC,kBAAmB,2BACnBC,SAAU,2BACV9B,QAAS,+BACT+B,SAAU,uCACVrB,SAAU,gGACVC,MAAO,yCACPC,gBAAiB,2EACjBC,mBAAoB,eACpBJ,WAAY,2BACZuB,iBAAkB,2BAClBC,oBAAqB,2BACrBC,cAAe,iCACfC,OAAQ,UAEZC,MAAO,CACHC,MAAO,2BACPC,OAAQ,2BACRC,QAAS,4BACTC,SAAU,qBACVC,KAAM,qBACNC,SAAU,eACVC,WAAY,2BACZC,eAAgB,mEAChBC,cAAe,+DACfC,UAAW,2BACXC,aAAc,2BACdC,aAAc,2BACdC,aAAc,uCACdC,eAAgB,mGAChBC,sBAAuB,4SACvBC,kBAAmB,+DACnBC,oBAAqB,sEACrBC,OAAQ,qEACRC,OAAQ,8BACRC,OAAQ,8BACRC,cAAe,2BACfC,iBAAkB,uCAClBE,cAAe,6CACfD,iBAAkB,uCAClBE,iBAAkB,8CAClBC,WAAY,iCACZC,cAAe,2BACfC,kBAAmB,wCAEvB1C,aAAc,CACV2C,MAAO,qBACPC,UAAW,qBACXC,MAAO,2BACPC,IAAK,gBAETC,OAAQ,CACJC,IAAK,eACLC,GAAI,eACJC,QAAS,2BACTC,QAAS,+B,iCCvMrB,yFAOME,EAAYC,YAAOC,IAAPD,EAAa,WAC3B,IAAME,EAAkBC,IAAK,KAC7B,MAAO,CACHD,kBACAE,OAAQ,GACR,mBAAoB,CAChBF,gBAAiBG,YAAUH,EAAiB,MAEhD,WAAY,CACRI,UAAW,GACXJ,gBAAiBG,YAAUH,EAAiB,UAmDzCK,IA9Cf,YAAiG,IAAtEC,EAAqE,EAArEA,aAAcC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAEzEC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACf,OACI,qCACI,cAAC,IAAD,CAAaC,GAAI,CAAE1F,QAAS,cAAe2F,WAAY,QAAvD,SACKR,EAAWS,KAAI,SAACC,EAAKC,GAClB,GAAIA,EAAQ,EACR,OACI,cAACrB,EAAD,CACIiB,GAAIL,EAAUU,YAAcD,EAAQ,CAAE9F,QAAS,QAAW,GAC1DgG,UAAU,IACVC,KAAK,IAELC,MAA+B,SAAxBhB,EAAaiB,OAAoBN,EAAIO,KAAOP,EAAIQ,QACvDC,KAAgB,IAAVR,EAAc,cAAC,IAAD,SAAeS,EACnCC,WAAY,cAAC,IAAD,IACZC,SAAU,kBAAMnB,EAASQ,KAJpBD,EAAIa,kBAS7B,sBAAMC,IAAKvB,IACX,8BACI,cAAC,IAAD,CAAMK,SAAUA,EAAUmB,KAAMC,QAAQpB,GAAWqB,QAAS,kBAAMvB,KAAlE,SACKC,EAAQI,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAgCkB,QAAS,kBAAMxB,EAAUM,EAAIa,cAA7D,SAC6B,SAAxBxB,EAAaiB,OAAoBN,EAAIO,KAAOP,EAAIQ,SADtCR,EAAIa,yB,iCClD3C,iFA4CeM,IArCf,YAA8E,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,uBAC3CC,EAAWC,cACXC,EAAeC,OAAOC,KAAKN,GAC/B,OACI,qCACKI,EAAaG,OACV,qCACI,cAAC,IAAD,CAAYC,QAAQ,KAApB,SAA0BT,EAAS/E,MAAMyB,mBACzC,cAAC,IAAD,UACK2D,EAAa1B,KAAI,SAAC+B,GAAD,OACd,eAAC,IAAD,gBAAuBA,IAARA,WAK3B,cAAC,IAAD,CAAYD,QAAQ,KAApB,SAA0BT,EAAS/E,MAAMuB,mBAE7C,uBACA,cAAC,IAAD,IACA,sBAAKmE,MAAM,QAAX,UACI,cAAC,IAAD,CAAQC,UAAW,cAAC,IAAD,IAAed,QAASI,EAA3C,SACKF,EAAS9C,OAAOC,MAErB,cAAC,IAAD,CAAQyD,UAAW,cAAC,IAAD,IAAgBd,QAAS,kBAAMK,EAAS,aAA3D,SACKH,EAAS9C,OAAOE,a,gLChBjC6C,EAAkB,GA2LPY,UAzLH,WAERC,QAAQC,IAAI,2BACZ,IAAI9C,EAAe+C,aAAY,SAACC,GAAD,OAAWA,EAAMhD,gBAC5CiD,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAMC,iBACjD,EAA8BC,mBAASnJ,IAAUiG,EAAaiB,SAA9D,mBAAKc,EAAL,KAAeoB,EAAf,KACA,EAAkBD,mBAASD,EAAcG,SAASC,WAA7CA,EAAL,oBACInB,EAAWC,cAEf,EAAkCe,mBAAS,GAA3C,mBACA,GADA,UAC8BA,mBAAS,CAAEhF,QAAQ,EAAMC,QAAQ,EAAOC,QAAQ,EAAOkF,QAAQ,KAA7F,mBAEIC,GAFJ,UAEeC,SAASC,SAASC,QAAQ,kBAAmB,KAC5D,EAAoCR,mBAAS,IAA7C,mBACA,GADA,UACgDA,mBAAS,KAAzD,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBACA,GADA,UAC8CA,mBAAS,KAAvD,mBACA,GADA,UACkCA,mBAAS,IAA3C,mBAAKS,EAAL,KAAiBC,EAAjB,KACA,EAA0CV,mBAAS,IAAnD,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBAAKjD,EAAL,KAAiB4D,EAAjB,KACIC,EAAc,GACd5D,EAAU6D,iBAAO,MACrB,EAAgCb,mBAAS,CACrCrC,eAAWQ,EACX2C,eAAW3C,EACXf,QAAS,GACTC,SAAU,OAJd,mBAAKJ,EAAL,KAAgB8D,EAAhB,KAtBc,8CA0Dd,WAAgCtD,GAAhC,yBAAAuD,EAAA,6DACQC,EAAWC,GAAGC,qBAAqB1D,GAD3C,SAEoB2D,SAASH,GAF7B,WAEQI,EAFR,QAGaC,SAAS3J,OAHtB,yCAGqC4J,aAAY,EAAO1C,EAAS9C,OAAOI,QAAU,KAAOkF,EAAIC,SAASE,SAHtG,UAIQC,EAAMP,GAAGQ,qBAAqBL,GAJtC,EAK6BI,EAAIH,SAAvB3J,EALV,EAKUA,OAAQ6J,EALlB,EAKkBA,OACT7J,EANT,0CAMwB4J,YAAY5J,EAAQ6J,IAN5C,WAOSA,EAAOG,WAPhB,0CAOmCJ,aAAY,EAAO1C,EAAS9C,OAAOI,UAPtE,WAQgC,SAAxBW,EAAaiB,OARrB,0CAQ+CwD,aAAY,EAAM,4EARjE,iCASWA,YAAY5J,EAAQ,gIAT/B,6CA1Dc,+BA2ECiK,GA3ED,iFA2Ed,WAA+BnE,GAA/B,yBAAAuD,EAAA,6DACQC,EAAWC,GAAGW,qBAAqBpE,GAD3C,SAEoB2D,SAASH,GAF7B,WAEQI,EAFR,QAGaC,SAAS3J,OAHtB,yCAGqC4J,aAAY,EAAO1C,EAAS9C,OAAOI,QAAU,KAAOkF,EAAIC,SAASE,SAHtG,UAIQC,EAAMP,GAAGY,qBAAqBT,GAJtC,EAK6BI,EAAIH,SAAvB3J,EALV,EAKUA,OAAQ6J,EALlB,EAKkBA,OACT7J,EANT,0CAMwB4J,YAAY5J,EAAQ6J,IAN5C,iCAOWA,GAPX,6CA3Ec,oEAqFd,WAAwC/D,GAAxC,yBAAAuD,EAAA,6DACQC,EAAWC,GAAGa,8BAA8BtE,GADpD,SAEoB2D,SAASH,GAF7B,WAEQI,EAFR,QAGaC,SAAS3J,OAHtB,yCAGqC4J,aAAY,EAAO1C,EAAS9C,OAAOI,QAAU,KAAOkF,EAAIC,SAASE,SAHtG,UAIQC,EAAMP,GAAGc,8BAA8BX,GAJ/C,EAK6BI,EAAIH,SAAvB3J,EALV,EAKUA,OAAQ6J,EALlB,EAKkBA,OACT7J,EANT,0CAMwB4J,YAAY5J,EAAQ6J,IAN5C,eAOI7B,QAAQC,IAAI4B,GAPhB,gEArFc,+BAgGCS,GAhGD,mFAgGd,WAAgC3D,EAAa4D,GAA7C,yBAAAlB,EAAA,yDACSkB,EADT,iCAEmCN,GAAgB,CAAEO,OAAQ7D,IAF7D,UAEY8D,EAFZ,+DAIcC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WACR1B,EAAYvB,SAAQuB,EAAc,IAAI2B,MAAMF,IACjDzB,EAAYyB,GAASD,EACjBC,EAAQ,GAAKC,GAAcA,EAAWE,OAEtCP,GADaK,EAAWE,OAAO,IAG/B7B,EAAcC,GAX1B,8BAeQwB,EAAiBrF,EAAWmF,EAAiB,GAAGO,UAAUD,OAAOE,MAAK,SAACjF,GAAD,OAASA,EAAIa,cAAgBA,KAf3G,0DAiBUmE,EAAcL,EAAdK,WACFE,EAlBR,YAkB4B5F,IACVmF,GAAkBE,EAC5BF,EAAiB,EAAIS,EAActD,SAAQsD,EAActD,OAAS6C,EAAiB,GACnFO,IACAE,EAAcC,KAAK,CAAEtE,YAAa,IAClCsC,EAAc+B,EACdzF,GAASyF,EAActD,OAAS,IAxBxC,kBA0BWsB,EAAcgC,IA1BzB,6CAhGc,sBA6BdE,qBAAU,WACN,GAAK9F,EAAWsC,OAAhB,CACA,IACI8C,EADiBpF,EAAWA,EAAWsC,OAAS,GACxBf,YAC5BoC,EAAcyB,GACVA,KAlCM,qCAmCNW,CAAyB,CAAEX,WAC3BrD,EAAgBR,YAAc6D,MAInC,CAACpF,IAEJ8F,qBAAU,WACN5C,EAAYpJ,IAAUiG,EAAaiB,WAEpC,CAACjB,EAAaiB,SAEjB8E,qBAAU,WAEN,OADAlD,QAAQC,IAAI,2BACPO,GACL8B,GAAiB,QACV,WACHnD,EAAkB,GAClBa,QAAQC,IAAI,2BAJOZ,EAAS,OAMjC,IAsEH,IAAM9B,GAAQ,uCAAG,WAAOQ,GAAP,2BAAAsD,EAAA,sDACT+B,EAAmBnC,EAAYvB,OAASuB,EAAc7D,EACtDuB,EAAcyE,EAAiBrF,GAAOY,YACtC0E,EAAcD,EAAiBrF,EAAQ,GAAG+E,UAAUD,OAH3C,cAIMQ,GAJN,4DAKa,kBADjBb,EAJI,+EAMkBP,GAAgB,CAAEO,WANpC,QAMLC,EANK,OAOTY,EAAYA,EAAYC,QAAQd,IAAWC,EAPlC,+IASbrB,EAAa,CAAEpD,UAAWD,EAAOoD,UAAWxC,EAAalB,QAAS4F,EAAa3F,SAAUL,EAAQkG,UATpF,gEAAH,sDAoCd,OACI,eAAC,IAAD,CAAUC,MAAM,2CAAhB,UACI,eAAC,IAAD,CAAY7D,QAAQ,KAApB,UACI,sBAAM8D,KAAK,MAAM,aAAW,OAA5B,0BAGCvE,EAASxF,KAAKI,YAEnB,uBACA,cAAC,IAAD,CACIqD,aAAcA,EACdC,WAAYA,EACZC,QAASA,EACTC,UAAWA,EACXC,SAAUA,GACVC,UAxCM,SAACmB,GACf,IAAMX,EAAcV,EAAdU,UACNoD,EAAa,CAAE3D,QAAS,GAAIC,SAAU,OACtCsC,QAAQC,IAAItB,QACQH,IAAhBG,GAA6BA,IAAgBmC,GAAYwB,GAAiB3D,EAAaX,MAsCvF,cAAC,IAAD,CAASL,GAAI,CAAE+F,aAAc,UAC7B,uBACA,cAAC,IAAD,CAAcxE,SAAUA,EAAUC,gBAAiBA,EAAiBC,uBArC7C,WAE3B,IADmBI,OAAOC,KAAKN,GACbO,OAAQ,OAAOkC,aAAY,EAAO1C,EAAS/E,MAAMuB,kBACnE,IAAK0B,EAAWsC,QAA4D,IAAlDtC,EAAWA,EAAWsC,OAAS,GAAGf,aAAqBvB,EAAWA,EAAWsC,OAAS,GAAGoD,UAC/G,OAAOlB,aAAY,EAAO1C,EAAS/E,MAAMS,eAM7C,IAJA,IAAI+I,EAAU,CACVjD,WACApI,aAAc,YAElB,MAAmBkH,OAAOoE,QAAQzE,GAAlC,eAAoD,CAA/C,0BAAK0E,EAAL,KAAQC,EAAR,KACDH,EAAQE,GAAiB,iBAALC,EAAgBC,KAAKC,UAAUF,GAAKA,EAE5D9D,QAAQC,IAAI0D,GA5JF,qCA6JVM,CAAiBN","file":"static/js/11.19ae4191.chunk.js","sourcesContent":["let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found',\r\n            folderRequired: 'please select a folder to continue'\r\n        },\r\n        table: {\r\n            tableHeader: 'Products',\r\n            categoryName: 'category name',\r\n            productId: 'product id',\r\n            subject: 'subject',\r\n            status: 'status',\r\n            display: 'display',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: 'specific',\r\n            owner_member_display_name: 'owner',\r\n            product_type: 'type',\r\n            smart_edit: 'smart edit',\r\n            attributes: 'attributes',\r\n            keywords: 'keywords',\r\n            price: 'price (range)',\r\n            payment_methods: 'payment methods',\r\n            min_order_quantity: 'min order quantity(MOQ)',\r\n            unit_type: 'unit type',\r\n            gmt_create: 'date create',\r\n            gmt_modified: 'date modified',\r\n            score: 'score',\r\n            tag: 'tag'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            productScore: 'scores',\r\n            productDisplayOn: 'in-stock',\r\n            productDisplayOff: 'out-stock',\r\n            productUpdate: 'update',\r\n            productEdit: 'edit'\r\n        },\r\n        form: {\r\n            KeyInformation: 'key information',\r\n            ProductAttributes: 'product attributes',\r\n            Advanced: 'advanced',\r\n            subject: '128 letters max.',\r\n            category: 'click to change category',\r\n            keywords: '3 keywords max. Comma(,) separated',\r\n            price: 'set price (range)',\r\n            payment_methods: 'payment methods such as T/T, L/C, etc.',\r\n            min_order_quantity: 'optional',\r\n            attributes: 'add or delete',\r\n            attributeMissing: 'attribute missing',\r\n            attributeDuplicated: 'attribute duplicated',\r\n            selectOrInput: 'select or input',\r\n            pieces: 'pieces'\r\n        },\r\n        steps: {\r\n            first: 'Edit Attributes',\r\n            second: 'Edit Contents',\r\n            finally: 'Preview & Publish',\r\n            previous: 'Previous',\r\n            next: 'Next',\r\n            complete: 'Complete',\r\n            addProduct: 'Add Product',\r\n            productIdError: 'product id error, pls go back & try again',\r\n            categoryError: 'category error, pls try again',\r\n            editPrice: 'Edit Price',\r\n            choosePhotos: 'Choose Photos',\r\n            uploadPhotos: 'Upload Photos',\r\n            removePhotos: 'double click to remove the photo',\r\n            photoUploadTip: 'If it cannot be updated, please remove ALL photos and try again',\r\n            productDescriptionTip:\r\n                'Tips: ① If it cannot be updated, please remove ALL contents and try again. ②Click the red button below 👇 to unlock photo resizing',\r\n            mainPhotoRequired: 'Need at least one photo',\r\n            descriptionOverflow: 'description length shall be smaller than 60k letters',\r\n            panel1: 'subject, keywords, price, MOQ...',\r\n            panel2: 'all kinds of attributes...',\r\n            panel3: 'additional information...',\r\n            addAttributes: 'Add Attributes',\r\n            removeAttributes: 'Remove Attributes',\r\n            modificationNull: 'No modification made',\r\n            addCustomInfo: 'Add Custom Info',\r\n            modificationDone: 'Will submit the following modifications:',\r\n            numberOnly: 'Please input number only',\r\n            uploadSuccess: 'Upload Success',\r\n            productScoreError: 'no score found'\r\n        },\r\n        productScore: {\r\n            basic: 'Basic',\r\n            potential: 'Potential',\r\n            super: 'Super',\r\n            top: 'Top'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            success: 'Success',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在',\r\n            folderRequired: '请选择文件夹'\r\n        },\r\n        table: {\r\n            tableHeader: '产品',\r\n            categoryName: '类目',\r\n            productId: '产品 id',\r\n            subject: '标题',\r\n            status: '审核状态',\r\n            display: '上架状态',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: '规格品',\r\n            owner_member_display_name: '负责人',\r\n            product_type: '商品类型',\r\n            smart_edit: '智能编辑',\r\n            attributes: '属性',\r\n            keywords: '关键词',\r\n            price: '价格(区间)',\r\n            payment_methods: '支付方式',\r\n            min_order_quantity: '最小起订量(MOQ)',\r\n            unit_type: '单位',\r\n            gmt_create: '创建日期',\r\n            gmt_modified: '修改日期',\r\n            score: '产品分',\r\n            tag: '标签'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            productScore: '产品分',\r\n            productDisplayOn: '上架',\r\n            productDisplayOff: '下架',\r\n            productUpdate: '更新',\r\n            productEdit: '编辑'\r\n        },\r\n        form: {\r\n            KeyInformation: '基本信息',\r\n            ProductAttributes: '产品属性',\r\n            Advanced: '更多设置',\r\n            subject: '128 字符以内',\r\n            category: '点击更换类目',\r\n            keywords: '最多三个关键词，用英文逗号(,)分隔',\r\n            price: '设置价格(区间)',\r\n            payment_methods: '支付方式，例如：T/T，L/C，等',\r\n            min_order_quantity: '选填',\r\n            attributes: '可增可减',\r\n            attributeMissing: '属性缺失',\r\n            attributeDuplicated: '属性重复',\r\n            selectOrInput: '选择或输入',\r\n            pieces: '件'\r\n        },\r\n        steps: {\r\n            first: '属性编辑',\r\n            second: '详情编辑',\r\n            finally: '预览&发布',\r\n            previous: '上一步',\r\n            next: '下一步',\r\n            complete: '完成',\r\n            addProduct: '发布产品',\r\n            productIdError: '产品 id 错误，请返回重试',\r\n            categoryError: '类目有误，请重新选择',\r\n            editPrice: '编辑价格',\r\n            choosePhotos: '选择图片',\r\n            uploadPhotos: '上传图片',\r\n            removePhotos: '双击移除图片',\r\n            photoUploadTip: '若无法更新，请清除所有图片后重试',\r\n            productDescriptionTip: '提示: ①若无法更新，请清除所有详情后重试 ②原先是智能编辑的情况下，须点击下方红色按钮解锁图片缩放👇',\r\n            mainPhotoRequired: '需要保留至少一张主图',\r\n            descriptionOverflow: '描述长度不能超过6万字符',\r\n            panel1: '标题，关键词，价格，MOQ...',\r\n            panel2: '各类属性...',\r\n            panel3: '附加信息...',\r\n            addAttributes: '添加属性',\r\n            removeAttributes: '移除空白属性',\r\n            addCustomInfo: '添加自定义信息',\r\n            modificationNull: '没有任何修改',\r\n            modificationDone: '将提交如下内容:',\r\n            numberOnly: '请输入数字',\r\n            uploadSuccess: '上传成功',\r\n            productScoreError: '产品分未查到'\r\n        },\r\n        productScore: {\r\n            basic: '低质品',\r\n            potential: '普通品',\r\n            super: '实力优品',\r\n            top: '精品'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            success: '操作成功',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Menu, MenuItem, Breadcrumbs, Chip } from '@mui/material';\r\nimport { Home as HomeIcon, ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\r\nimport { emphasize, styled } from '@mui/material/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\n//styled components\r\nconst BreadChip = styled(Chip)(() => {\r\n    const backgroundColor = grey[100];\r\n    return {\r\n        backgroundColor,\r\n        height: 40,\r\n        '&:hover, &:focus': {\r\n            backgroundColor: emphasize(backgroundColor, 0.06)\r\n        },\r\n        '&:active': {\r\n            boxShadow: 10,\r\n            backgroundColor: emphasize(backgroundColor, 0.12)\r\n        }\r\n    };\r\n});\r\n\r\nfunction ProductCategory({ localization, categories, menuRef, menuState, showMenu, closeMenu }) {\r\n    //console.log('loading product category...');\r\n    let { menuArr, anchorEl } = menuState;\r\n    return (\r\n        <>\r\n            <Breadcrumbs sx={{ display: 'inline-flex', paddingTop: '10px' }}>\r\n                {categories.map((obj, index) => {\r\n                    if (index > 0)\r\n                        return (\r\n                            <BreadChip\r\n                                sx={menuState.menuLevel === index ? { display: 'none' } : {}}\r\n                                component=\"a\"\r\n                                href=\"#\"\r\n                                key={obj.category_id}\r\n                                label={localization.locale !== 'zhCN' ? obj.name : obj.cn_name}\r\n                                icon={index === 1 ? <HomeIcon /> : undefined}\r\n                                deleteIcon={<ExpandMoreIcon />}\r\n                                onDelete={() => showMenu(index)}\r\n                            />\r\n                        );\r\n                })}\r\n            </Breadcrumbs>\r\n            <span ref={menuRef}></span>\r\n            <div>\r\n                <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => closeMenu()}>\r\n                    {menuArr.map((obj) => (\r\n                        <MenuItem key={obj.category_id} onClick={() => closeMenu(obj.category_id)}>\r\n                            {localization.locale !== 'zhCN' ? obj.name : obj.cn_name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Menu>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nProductCategory.propTypes = {\r\n    localization: PropTypes.object,\r\n    finalImageArr: PropTypes.array,\r\n    menuRef: PropTypes.object,\r\n    categories: PropTypes.array,\r\n    menuState: PropTypes.object,\r\n    showMenu: PropTypes.func,\r\n    closeMenu: PropTypes.func\r\n};\r\n\r\nexport default ProductCategory;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Divider, Typography, List, ListItem } from '@mui/material';\r\nimport { Check as CheckIcon, Cancel as CancelIcon } from '@mui/icons-material';\r\n\r\nfunction Confirmation({ langPack, productModified, modificationSubmission }) {\r\n    let navigate = useNavigate(); //react-router-dom\r\n    let modifiedKeys = Object.keys(productModified);\r\n    return (\r\n        <>\r\n            {modifiedKeys.length ? (\r\n                <>\r\n                    <Typography variant=\"h3\">{langPack.steps.modificationDone}</Typography>\r\n                    <List>\r\n                        {modifiedKeys.map((key) => (\r\n                            <ListItem key={key}>--{key}</ListItem>\r\n                        ))}\r\n                    </List>\r\n                </>\r\n            ) : (\r\n                <Typography variant=\"h3\">{langPack.steps.modificationNull}</Typography>\r\n            )}\r\n            <br />\r\n            <Divider />\r\n            <div align=\"right\">\r\n                <Button startIcon={<CheckIcon />} onClick={modificationSubmission}>\r\n                    {langPack.common.yes}\r\n                </Button>\r\n                <Button startIcon={<CancelIcon />} onClick={() => navigate(`/product`)}>\r\n                    {langPack.common.no}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    langPack: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    modificationSubmission: PropTypes.func\r\n};\r\n\r\nexport default Confirmation;\r\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Typography, List, ListItem, useMediaQuery, TextField, Divider } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { Languages } from './Languages';\r\nimport ProductCategory from './component/ProductCategory';\r\nimport Confirmation from './component/Confirmation';\r\n\r\n// ==============================|| SINGLE PAGE APPLICATION ||============================== //\r\nlet productModified = {};\r\n\r\nconst App = () => {\r\n    //全局数据\r\n    console.log('productEdit app running');\r\n    let localization = useSelector((state) => state.localization); //多语言相关\r\n    let globalization = useSelector((state) => state.globalization); //全局数据\r\n    let [langPack, setLangPack] = useState(Languages[localization.locale]); //currentLanguage\r\n    let [loginData] = useState(globalization.baseData.loginData);\r\n    let navigate = useNavigate(); //react-router-dom\r\n    //编辑步骤提示 & 菜单折叠\r\n    let [activeStep, setActiveStep] = useState(0);\r\n    let [expanded, setExpanded] = useState({ panel1: true, panel2: false, panel3: false, panel4: false });\r\n    //产品信息汇总\r\n    let group_id = location.pathname.replace('/product/draft/', ''); //产品id\r\n    let [productInfo, setProductInfo] = useState({}); //产品信息\r\n    let [finalAttributeArr, setFinalAttributeArr] = useState([]); //在用的属性列表\r\n    let [finalImageArr, setFinalImageArr] = useState([]); //在用的图片列表\r\n    let [finalDescription, setFinalDescription] = useState(''); //在用的产品详情\r\n    let [finalCatId, setFinalCatId] = useState(0); //当前产品类目id\r\n    let [finalCustomArr, setFinalCustomArr] = useState([]); //当前产品定制信息\r\n    let [categories, setCategories] = useState([]); //当前产品类目\r\n    let categoryArr = []; //当前产品类目(暂存)\r\n    let menuRef = useRef(null);\r\n    let [menuState, setMenuState] = useState({\r\n        menuLevel: undefined,\r\n        menuValue: undefined,\r\n        menuArr: [],\r\n        anchorEl: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!categories.length) return;\r\n        let categoryResult = categories[categories.length - 1];\r\n        let cat_id = categoryResult.category_id;\r\n        setFinalCatId(cat_id);\r\n        if (cat_id) {\r\n            getCategoryAttributeInfo({ cat_id });\r\n            productModified.category_id = cat_id;\r\n        }\r\n        //console.log(categories, categoryResult.category_id);\r\n        return; //类目调整 返回最新的类目id\r\n    }, [categories]);\r\n\r\n    useEffect(() => {\r\n        setLangPack(Languages[localization.locale]);\r\n        return; //语言切换\r\n    }, [localization.locale]);\r\n\r\n    useEffect(() => {\r\n        console.log('I want product drafting');\r\n        if (!loginData) return navigate('/');\r\n        getAllCategories(153710); //获取所有类目\r\n        return () => {\r\n            productModified = {};\r\n            console.log('I leave product draft');\r\n        }; //载入 & 清理\r\n    }, []);\r\n\r\n    //____________一些函数_______________________________________________\r\n    async function makeProductDraft(obj) {\r\n        let paramObj = ma.productAddDraftQuery(obj);\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productAddDraftCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        if (!result.product_id) return queryResult(false, langPack.common.netFail);\r\n        if (localization.locale !== 'zhCN') return queryResult(true, 'saved to draft, editing not yet supported.🤯 Keep in touch...');\r\n        return queryResult(status, '已存入草稿箱，暂不支持编辑，敬请期待...🤯');\r\n        if (localization.locale !== 'zhCN') queryResult(true, langPack.common.success + '\\n' + 'redirecting...');\r\n        else queryResult(true, langPack.common.success + '\\n' + '正在跳转...');\r\n        setTimeout(() => {\r\n            navigate('/product/update/product_id=' + result.product_id + '&category_id=' + finalCatId);\r\n        }, 3000);\r\n    } //发布草稿\r\n\r\n    async function getCategoryInfo(obj) {\r\n        let paramObj = ma.productCategoryQuery(obj);\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productCategoryCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        return result;\r\n    } //获取类目信息\r\n\r\n    async function getCategoryAttributeInfo(obj) {\r\n        let paramObj = ma.productCategoryAttributeQuery(obj);\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg.response.result);\r\n        let res = ma.productCategoryAttributeCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        console.log(result);\r\n        return;\r\n    } //获取类目属性信息\r\n\r\n    async function getAllCategories(category_id, category_level) {\r\n        if (!category_level) {\r\n            let categoryResult = await getCategoryInfo({ cat_id: category_id });\r\n            if (!categoryResult) return;\r\n            let { level, parent_ids } = categoryResult;\r\n            if (!categoryArr.length) categoryArr = new Array(level); //初始化模式\r\n            categoryArr[level] = categoryResult;\r\n            if (level > 0 && parent_ids && parent_ids.number) {\r\n                let cat_id = parent_ids.number[0];\r\n                getAllCategories(cat_id);\r\n            } else {\r\n                setCategories(categoryArr);\r\n            }\r\n            return;\r\n        }\r\n        let categoryResult = categories[category_level - 1].child_ids.number.find((obj) => obj.category_id === category_id);\r\n        if (!categoryResult) return;\r\n        let { child_ids } = categoryResult;\r\n        let newCategories = [...categories];\r\n        newCategories[category_level] = categoryResult;\r\n        if (category_level + 1 < newCategories.length) newCategories.length = category_level + 1;\r\n        if (child_ids) {\r\n            newCategories.push({ category_id: 0 });\r\n            categoryArr = newCategories;\r\n            showMenu(newCategories.length - 1);\r\n        }\r\n        return setCategories(newCategories); //修改类目模式\r\n    }\r\n\r\n    const showMenu = async (index) => {\r\n        let latestCategories = categoryArr.length ? categoryArr : categories;\r\n        let category_id = latestCategories[index].category_id;\r\n        let childIdsArr = latestCategories[index - 1].child_ids.number;\r\n        for (let cat_id of childIdsArr) {\r\n            if (typeof cat_id === 'object') break;\r\n            let categoryResult = await getCategoryInfo({ cat_id });\r\n            childIdsArr[childIdsArr.indexOf(cat_id)] = categoryResult;\r\n        }\r\n        setMenuState({ menuLevel: index, menuValue: category_id, menuArr: childIdsArr, anchorEl: menuRef.current });\r\n    }; //获取当前的类目id & 通过父级获取子类目选项\r\n    const closeMenu = (category_id) => {\r\n        let { menuLevel } = menuState;\r\n        setMenuState({ menuArr: [], anchorEl: null });\r\n        console.log(category_id);\r\n        if (category_id !== undefined && category_id !== finalCatId) getAllCategories(category_id, menuLevel);\r\n    }; //需要更新类目\r\n\r\n    const modificationSubmission = () => {\r\n        let modifiedKeys = Object.keys(productModified);\r\n        if (!modifiedKeys.length) return queryResult(false, langPack.steps.modificationNull);\r\n        if (!categories.length || categories[categories.length - 1].category_id === 0 || categories[categories.length - 1].child_ids) {\r\n            return queryResult(false, langPack.steps.categoryError);\r\n        }\r\n        let dataObj = {\r\n            group_id,\r\n            product_type: 'sourcing'\r\n        }; //默认提交的数据\r\n        for (let [k, v] of Object.entries(productModified)) {\r\n            dataObj[k] = typeof v == 'object' ? JSON.stringify(v) : v;\r\n        } //带上修改的数据\r\n        console.log(dataObj);\r\n        makeProductDraft(dataObj);\r\n    };\r\n    //____________Functions return JSX_______________________________________________\r\n\r\n    return (\r\n        <MainCard title=\"Product Draft --产品草稿\">\r\n            <Typography variant=\"h2\">\r\n                <span role=\"img\" aria-label=\"hint\">\r\n                    👇\r\n                </span>\r\n                {langPack.form.category}\r\n            </Typography>\r\n            <br />\r\n            <ProductCategory\r\n                localization={localization}\r\n                categories={categories}\r\n                menuRef={menuRef}\r\n                menuState={menuState}\r\n                showMenu={showMenu}\r\n                closeMenu={closeMenu}\r\n            />\r\n            <Divider sx={{ marginBottom: '50px' }} />\r\n            <br />\r\n            <Confirmation langPack={langPack} productModified={productModified} modificationSubmission={modificationSubmission} />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}