{"version":3,"sources":["../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js","views/sample-page/Languages.js","views/sample-page/index.js"],"names":["getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","_excluded","colorTransformations","primary","textPrimary","secondary","textSecondary","error","LinkRoot","styled","Typography","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","component","button","theme","color","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","Link","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Languages","enUS","about","introduction","url","currentVersion","latestVersion","newVersionFound","upgradeNow","howToUpgrade","orClickHere","common","yes","no","netFail","zhCN","SamplePage","localization","useSelector","state","useState","locale","langPack","info","setInfo","showUpgrade","setShowUpgrade","a","queryObj","prepareMsg","request","data","doFetch","msg","response","net","ok","version","image","queryResult","useEffect","console","log","getVersion","MainCard","title","Button","onClick","prev","alt","src","href","target","split","map","str","index","test","style","marginBottom"],"mappings":"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","file":"static/js/14.4a6f4de3.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","let Languages = {\r\n    enUS: {\r\n        about: {\r\n            introduction: 'Introduction',\r\n            name: 'Name',\r\n            url: 'Url',\r\n            currentVersion: 'Current Version',\r\n            latestVersion: 'Latest Version',\r\n            newVersionFound: 'New Version Found',\r\n            upgradeNow: 'Upgrade Now',\r\n            howToUpgrade: 'How to Upgrade',\r\n            orClickHere: 'Or click here to reinstall'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        about: {\r\n            introduction: '简介',\r\n            name: '名称',\r\n            url: '链接',\r\n            currentVersion: '当前版本',\r\n            latestVersion: '最新版本',\r\n            newVersionFound: '发现新版本',\r\n            upgradeNow: '现在升级',\r\n            howToUpgrade: '如何升级',\r\n            orClickHere: '或点击这里重新安装'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { Typography, Button, Link } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { Languages } from './Languages';\n\n// ==============================|| SAMPLE PAGE ||============================== //\n\nconst SamplePage = () => {\n    let currentVersion = '1.1.4';\n    let localization = useSelector((state) => state.localization); //read only (language related)\n    let [langPack] = useState(Languages[localization.locale]); //currentLanguage\n    let [info, setInfo] = useState('');\n    let [showUpgrade, setShowUpgrade] = useState(false);\n    async function getVersion() {\n        let { locale } = localization;\n        let queryObj = prepareMsg('ERP版本信息');\n        queryObj.request.data.locale = locale;\n        let msg = await doFetch(queryObj);\n        if (!msg.response.net.ok || !msg.response.data.version) return;\n        let { version, image, name, url, introduction } = msg.response.data;\n        if (version === currentVersion) return;\n        queryResult(true, langPack.about.newVersionFound);\n        setInfo(msg.response.data);\n    }\n    useEffect(() => {\n        console.log('I want update');\n        //初始化\n        getVersion();\n        return () => {\n            console.log('I leave update');\n        }; //载入 & 清理\n    }, []);\n    return (\n        <MainCard title=\"About--关于\">\n            <Typography variant=\"h3\">\n                {langPack.about.currentVersion}: v{currentVersion}\n            </Typography>\n            <br />\n            <hr />\n            {!info ? null : (\n                <>\n                    <Typography key=\"upgrade\" variant=\"h3\" color=\"coral\">\n                        {langPack.about.latestVersion}: v{info.version}\n                    </Typography>\n                    <br />\n                    <Button key=\"btnUpgrade\" variant=\"contained\" onClick={() => setShowUpgrade((prev) => !prev)}>\n                        {langPack.about.howToUpgrade}\n                    </Button>\n                    <br />\n                    <br />\n                    {!showUpgrade ? null : localization.locale === 'zhCN' ? (\n                        <>\n                            <img\n                                key=\"cnUpgrade\"\n                                alt=\"cnUpgrade\"\n                                src=\"https://img.alicdn.com/imgextra/i2/O1CN01erhX9I1ddfZ47xxr9_!!6000000003759-2-tps-960-160.png\"\n                            />\n                            <Typography>{langPack.about.orClickHere}</Typography>\n                            <Link key=\"cnUpgradeLink\" href={info.url} target=\"_blank\">\n                                {info.url}\n                            </Link>\n                        </>\n                    ) : (\n                        <>\n                            <img\n                                key=\"enUpgrade\"\n                                alt=\"enUpgrade\"\n                                src=\"https://img.alicdn.com/imgextra/i1/O1CN01NFfF8B1hH0QignVF9_!!6000000004251-2-tps-959-159.png\"\n                            />\n                            <Typography>{langPack.about.orClickHere}</Typography>\n                            <Link key=\"enUpgradeLink\" href={info.url} target=\"_blank\">\n                                {info.url}\n                            </Link>\n                        </>\n                    )}\n                    <br />\n                    {info.introduction.split('\\n').map((str, index) =>\n                        /#/.test(str) ? (\n                            <div key={'header' + index}>\n                                <br key={'endLine' + index} style={{ marginBottom: '30px' }} />\n                                <Typography key={'head' + index} variant=\"h4\">\n                                    {str}\n                                </Typography>\n                                <br key={'newLine' + index} style={{ marginBottom: '30px' }} />\n                            </div>\n                        ) : (\n                            <Typography key={'body' + index} variant=\"body1\">\n                                {str}\n                            </Typography>\n                        )\n                    )}\n                </>\n            )}\n        </MainCard>\n    );\n};\n\nexport default SamplePage;\n"],"sourceRoot":""}