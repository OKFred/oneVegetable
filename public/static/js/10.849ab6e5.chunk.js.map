{"version":3,"sources":["../node_modules/@mui/icons-material/esm/Folder.js","../node_modules/@mui/icons-material/esm/ModeEdit.js","views/photo/Languages.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/icons-material/esm/Toc.js","../node_modules/@mui/icons-material/esm/Collections.js","views/photo/component/PhotoFolder.js","views/photo/component/Pagination.js","views/photo/component/PhotoGallery.js","views/photo/component/PhotoTable.js","views/photo/index.js"],"names":["createSvgIcon","_jsx","d","Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","action","uploadSuccess","table","tableHeader","id","group_id","group_name","file_name","file_size","gmt_modified","owner_member_display_name","reference_count","url","tableToolbar","menuHide","menuShow","photoUpload","photoDownload","common","yes","no","netFail","zhCN","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","props","styles","ownerState","root","row","_extends","display","flexDirection","flexWrap","FormGroup","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","clsx","newPhotoArr","PhotoFolder","folderArr","setCurrentFolder","manageFolder","uploadPhotos","setPage","displayMode","setDisplayMode","langPack","useState","newFolder","setNewFolder","folderCommand","setFolderCommand","refreshFolders","a","result","console","log","file","length","style","marginTop","Input","sx","height","marginRight","variant","color","type","placeholder","onChange","e","target","value","trim","Button","startIcon","Check","onClick","Cancel","defaultValue","find","obj","FormControlLabel","border","margin","justifyContent","labelPlacement","control","inputProps","multiple","label","AddPhotoAlternate","fontSize","files","Breadcrumbs","Folder","Select","minWidth","autoWidth","MenuItem","disabled","map","index","ButtonGroup","Add","thisFolder","Toc","Collections","Typography","Pagination","page","page_size","handleChangePage","handleChangeRowsPerPage","TablePagination","component","labelDisplayedRows","from","to","padding","count","onPageChange","event","newPage","rowsPerPage","onRowsPerPageChange","parseInt","PhotoGallery","photoArr","photoSizing","photoCols","rowHeight","width","ImageList","cols","marginBottom","gap","item","ImageListItem","rows","srcset","alt","loading","ImageListItemBar","background","title","position","actionIcon","IconButton","StarBorder","actionPosition","selectedArr","PhotoTable","tableRows","tableColumns","localization","onRowClick","tableHeight","window","innerHeight","DataGrid","checkboxSelection","localeText","locale","components","MuiDataGrid","defaultProps","Toolbar","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","csvOptions","utf8WithBom","fileName","Date","valueOf","getTimezoneOffset","toISOString","replace","onStateChange","selection","pageSize","rowCount","columns","getRowHeight","rowsPerPageOptions","disableSelectionOnClick","paginationMode","onPageSizeChange","App","folderRefreshTimer","useSelector","state","setLangPack","globalization","baseData","loginData","navigate","useNavigate","setFolderArr","setPhotoArr","setPage_size","setTableColumns","uploadTimer","theme","useTheme","useMediaQuery","breakpoints","down","operation","groupObj","paramObj","ma","photoFolderManageQuery","fetchAPI","msg","response","status","queryResult","res","photoFolderManageCheck","setTimeout","getFolders","photoFolderQuery","photoFolderCheck","clearTimeout","newArr","String","getPhotos","photoQuery","photoCheck","photoFile","photoUploadQuery","image_bytes","photoUploadCheck","undefined","useEffect","current_page","field","headerName","valueGetter","valueFormatter","renderCell","href","split","flex","score","splice","sortable","tag","tableFormatter","newSize","MainCard"],"mappings":"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","file":"static/js/10.849ab6e5.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'ModeEdit');","let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found'\r\n        },\r\n        action: {\r\n            uploadSuccess: 'upload success'\r\n        },\r\n        table: {\r\n            tableHeader: 'photo',\r\n            id: 'photo id',\r\n            group_id: 'group id',\r\n            group_name: 'folder name',\r\n            file_name: 'file name',\r\n            file_size: 'file size',\r\n            gmt_modified: 'date modified',\r\n            owner_member_display_name: 'owner',\r\n            reference_count: 'reference count',\r\n            url: 'link'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            photoUpload: 'upload',\r\n            photoDownload: 'download'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在'\r\n        },\r\n        action: {\r\n            uploadSuccess: '上传成功'\r\n        },\r\n        table: {\r\n            tableHeader: '图片',\r\n            id: '图片 id',\r\n            group_id: '分组 id',\r\n            group_name: '文件夹',\r\n            file_name: '文件名',\r\n            file_size: '文件大小',\r\n            gmt_modified: '修改日期',\r\n            owner_member_display_name: '用户名',\r\n            reference_count: '引用次数',\r\n            url: '链接'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            photoUpload: '上传',\r\n            photoDownload: '下载'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z\"\n}), 'Toc');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4 2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z\"\n}), 'Collections');","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, FormGroup, FormControlLabel, Button, ButtonGroup, Input, Select, MenuItem, Breadcrumbs } from '@mui/material';\r\nimport {\r\n    AddPhotoAlternate as AddPhotoAlternateIcon,\r\n    Folder as FolderIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    Add as AddIcon,\r\n    ModeEdit as EditIcon,\r\n    DeleteOutline as DeleteIcon,\r\n    FileUpload as UploadIcon,\r\n    Toc as TocIcon,\r\n    Collections as CollectionsIcon\r\n} from '@mui/icons-material';\r\n\r\nlet newPhotoArr = [];\r\nfunction PhotoFolder({\r\n    folderArr,\r\n    currentFolder,\r\n    setCurrentFolder,\r\n    manageFolder,\r\n    uploadPhotos,\r\n    setPage,\r\n    displayMode,\r\n    setDisplayMode,\r\n    langPack\r\n}) {\r\n    let [newFolder, setNewFolder] = useState(false);\r\n    let [folderCommand, setFolderCommand] = useState(false);\r\n    function onPhotoSelected(e) {\r\n        let files = e.target.files;\r\n        if (!files.length) {\r\n            newPhotoArr = [];\r\n            return;\r\n        }\r\n        newPhotoArr = files;\r\n    }\r\n    function refreshFolders() {\r\n        setNewFolder('');\r\n        setFolderCommand(false);\r\n        return;\r\n    }\r\n    async function onFolderAdd() {\r\n        let result = await manageFolder('add', { group_name: newFolder });\r\n        if (result) {\r\n            setCurrentFolder('');\r\n            refreshFolders();\r\n        }\r\n        return;\r\n    }\r\n    async function onFolderRename() {\r\n        let result = await manageFolder('rename', { group_id: currentFolder, group_name: newFolder });\r\n        console.log(result);\r\n        if (result) refreshFolders();\r\n        return;\r\n    }\r\n    async function onFolderDelete() {\r\n        manageFolder('delete', { group_id: currentFolder });\r\n        setCurrentFolder('');\r\n        refreshFolders();\r\n        return;\r\n    }\r\n    async function onPhotoUpload() {\r\n        for (let file of newPhotoArr) {\r\n            await uploadPhotos(file);\r\n        }\r\n        newPhotoArr = [];\r\n    }\r\n    function changeFolder(e) {\r\n        let value = e.target.value;\r\n        if (value && value !== langPack.folder.currentFolder) {\r\n            setPage(0);\r\n            setCurrentFolder(value);\r\n        }\r\n    }\r\n    return !folderArr || !folderArr.length ? (\r\n        <Typography variant=\"body2\">{langPack.folder.folderNull}</Typography>\r\n    ) : (\r\n        <span style={{ marginTop: '20px' }}>\r\n            {!folderCommand ? (\r\n                <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\" sx={{ display: 'inline-block', marginRight: '5px' }}>\r\n                        <FolderIcon />\r\n                        <Select sx={{ height: '30px', minWidth: '100px' }} autoWidth={true} value={currentFolder} onChange={changeFolder}>\r\n                            <MenuItem value={langPack.folder.currentFolder} disabled>\r\n                                {langPack.folder.currentFolder}\r\n                            </MenuItem>\r\n                            {folderArr.map((obj, index) => (\r\n                                <MenuItem key={index} value={obj.id}>\r\n                                    {obj.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </Breadcrumbs>\r\n                    <ButtonGroup variant=\"\">\r\n                        <Button onClick={() => setFolderCommand('add')}>\r\n                            <AddIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                if (!currentFolder || currentFolder === langPack.folder.currentFolder) return;\r\n                                setFolderCommand('edit');\r\n                                let thisFolder = folderArr.find((obj) => obj.id === currentFolder);\r\n                                if (thisFolder) setNewFolder(thisFolder.name);\r\n                            }}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            <EditIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => setFolderCommand('delete')}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => setFolderCommand('upload')}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            <UploadIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => setDisplayMode(displayMode === 'gallery' ? 'table' : 'gallery')}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            {displayMode === 'gallery' ? <TocIcon /> : <CollectionsIcon />}\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {folderCommand === 'add' ? (\r\n                        <>\r\n                            <Input\r\n                                sx={{ height: '30px', marginRight: '10px' }}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                type=\"text\"\r\n                                placeholder={langPack.folder.addNewFolder}\r\n                                onChange={(e) => setNewFolder(e.target.value.trim())}\r\n                            />\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderAdd}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : folderCommand === 'edit' ? (\r\n                        <>\r\n                            <Input\r\n                                sx={{ height: '30px', marginRight: '10px' }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                type=\"text\"\r\n                                defaultValue={folderArr.find((obj) => obj.id === currentFolder).name}\r\n                                onChange={(e) => setNewFolder(e.target.value.trim())}\r\n                            />\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderRename}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : folderCommand === 'delete' ? (\r\n                        <>\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderDelete}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : folderCommand === 'upload' ? (\r\n                        <>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    sx={{ border: '1px dotted', height: '200px', margin: '20px', justifyContent: 'center' }}\r\n                                    labelPlacement=\"top\"\r\n                                    control={<Input type=\"file\" inputProps={{ multiple: true }} />}\r\n                                    label={<AddPhotoAlternateIcon fontSize=\"large\" />}\r\n                                    onChange={onPhotoSelected}\r\n                                />\r\n                                <Button startIcon={<CheckIcon />} onClick={onPhotoUpload}>\r\n                                    {langPack.common.yes}\r\n                                </Button>\r\n                                <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                    {langPack.common.no}\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </>\r\n            )}\r\n        </span>\r\n    );\r\n}\r\n\r\nPhotoFolder.propTypes = {\r\n    folderArr: PropTypes.array,\r\n    currentFolder: PropTypes.string,\r\n    setCurrentFolder: PropTypes.func,\r\n    setPhotoArr: PropTypes.func,\r\n    manageFolder: PropTypes.func,\r\n    uploadPhotos: PropTypes.func,\r\n    setPage: PropTypes.func,\r\n    displayMode: PropTypes.string,\r\n    setDisplayMode: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoFolder;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { TablePagination } from '@mui/material';\r\n\r\nfunction Pagination({ page, page_size, handleChangePage, handleChangeRowsPerPage }) {\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            labelDisplayedRows={({ from, to }) => {\r\n                return `${from}–${to}`;\r\n            }}\r\n            sx={{\r\n                '& .MuiTablePagination-toolbar': { height: '29px', padding: '1px' }\r\n            }}\r\n            page={page}\r\n            count={-1}\r\n            onPageChange={(event, newPage) => handleChangePage(newPage)}\r\n            rowsPerPage={page_size}\r\n            onRowsPerPageChange={(event) => handleChangeRowsPerPage(parseInt(event.target.value))}\r\n        />\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    page: PropTypes.number,\r\n    page_size: PropTypes.number,\r\n    handleChangePage: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, ImageList, ImageListItem, ImageListItemBar, IconButton } from '@mui/material';\r\nimport { StarBorder as StarBorderIcon } from '@mui/icons-material';\r\n\r\nfunction PhotoGallery({ photoArr, photoSizing, photoCols, rowHeight, currentFolder, langPack }) {\r\n    let { width, height } = photoSizing;\r\n    return photoArr && photoArr.length ? (\r\n        <ImageList cols={photoCols} rowHeight={rowHeight} sx={{ marginTop: '1px', marginBottom: '60px' }} variant=\"standard\" gap={2}>\r\n            {photoArr.map((item) => {\r\n                return (\r\n                    <ImageListItem key={item.url} cols={1} rows={1}>\r\n                        <img {...srcset(item.url, width, height, 1, 1)} alt={item.file_name} loading=\"lazy\" />\r\n                        <ImageListItemBar\r\n                            sx={{\r\n                                background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)'\r\n                            }}\r\n                            title={item.file_name}\r\n                            position=\"top\"\r\n                            actionIcon={\r\n                                <IconButton sx={{ color: item.reference_count ? 'yellow' : 'white' }} aria-label={`star ${item.file_name}`}>\r\n                                    <StarBorderIcon />\r\n                                </IconButton>\r\n                            }\r\n                            actionPosition=\"left\"\r\n                        />\r\n                    </ImageListItem>\r\n                );\r\n            })}\r\n        </ImageList>\r\n    ) : (\r\n        <Typography variant=\"body2\" sx={{ margin: '10px' }}>\r\n            {currentFolder === langPack.folder.currentFolder ? langPack.folder.currentFolder : langPack.folder.dataNull}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nPhotoGallery.propTypes = {\r\n    photoArr: PropTypes.array,\r\n    photoSizing: PropTypes.object,\r\n    photoCols: PropTypes.number,\r\n    rowHeight: PropTypes.number,\r\n    currentFolder: PropTypes.string,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarFilterButton,\r\n    GridToolbarExport,\r\n    GridToolbarDensitySelector,\r\n    zhCN\r\n} from '@mui/x-data-grid';\r\n\r\nlet selectedArr = []; //当前选中的产品id，需要转换成加密id才可以调用API\r\nfunction PhotoTable({\r\n    tableRows,\r\n    tableColumns,\r\n    page_size,\r\n    page,\r\n    localization,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    onRowClick,\r\n    langPack\r\n}) {\r\n    const tableHeight = window.innerHeight > 520 ? window.innerHeight - 320 : 600;\r\n    const onStateChange = (obj) => {\r\n        let { selection } = obj;\r\n        if (selection.length === selectedArr.length) return;\r\n        selectedArr = selection.map((id) => tableRows.find((obj) => obj.id === id));\r\n        console.log(selectedArr.length + ' selected');\r\n    }; //勾选\r\n    return (\r\n        <div style={{ height: tableHeight, width: '100%' }}>\r\n            <DataGrid\r\n                checkboxSelection={true}\r\n                localeText={localization.locale === 'zhCN' ? zhCN.components.MuiDataGrid.defaultProps.localeText : {}}\r\n                components={{\r\n                    Toolbar: () => (\r\n                        <GridToolbarContainer>\r\n                            <GridToolbarColumnsButton />\r\n                            <GridToolbarFilterButton />\r\n                            <GridToolbarDensitySelector />\r\n                            <GridToolbarExport\r\n                                csvOptions={{\r\n                                    utf8WithBom: true,\r\n                                    fileName:\r\n                                        langPack.table.tableHeader +\r\n                                        '_' +\r\n                                        new Date(new Date().valueOf() - new Date().getTimezoneOffset() * 60 * 1000)\r\n                                            .toISOString()\r\n                                            .replace(/T.*/, '')\r\n                                }}\r\n                            />\r\n                        </GridToolbarContainer>\r\n                    )\r\n                }}\r\n                onRowClick={onRowClick}\r\n                onStateChange={onStateChange}\r\n                page={page}\r\n                pageSize={page_size}\r\n                rowCount={9999}\r\n                columns={tableColumns}\r\n                getRowHeight={() => 88}\r\n                rows={tableRows}\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                disableSelectionOnClick\r\n                paginationMode=\"server\"\r\n                onPageChange={handleChangePage}\r\n                onPageSizeChange={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nPhotoTable.propTypes = {\r\n    tableRows: PropTypes.array,\r\n    tableColumns: PropTypes.array,\r\n    page_size: PropTypes.number,\r\n    page: PropTypes.number,\r\n    localization: PropTypes.object,\r\n    handleChangePage: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func,\r\n    onRowClick: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoTable;\r\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { Languages } from './Languages';\nimport PhotoFolder from './component/PhotoFolder';\nimport Pagination from './component/Pagination';\nimport PhotoGallery from './component/PhotoGallery';\nimport PhotoTable from './component/PhotoTable';\n\n// ==============================|| SINGLE PAGE APPLICATION ||============================== //\n\nconst App = () => {\n    console.log('photo app running');\n    const localization = useSelector((state) => state.localization); //read only (language related)\n    let [langPack, setLangPack] = useState(Languages[localization.locale]); //currentLanguage\n    const globalization = useSelector((state) => state.globalization);\n    const [loginData] = useState(globalization.baseData.loginData);\n    let navigate = useNavigate(); //react-router-dom\n\n    //states [所有文件夹，当前文件夹，待上传文件，文件夹下所有图片，当前页，页面大小]\n    let [folderArr, setFolderArr] = useState([]);\n    let [currentFolder, setCurrentFolder] = useState(langPack.folder.currentFolder);\n    let [photoArr, setPhotoArr] = useState([]);\n    let [page, setPage] = useState(0);\n    let [page_size, setPage_size] = useState(10);\n    let [displayMode, setDisplayMode] = useState('gallery');\n    let [tableColumns, setTableColumns] = useState([]);\n    let uploadTimer = 0; //节流\n    const theme = useTheme();\n    const photoCols = useMediaQuery(theme.breakpoints.down('md')) ? 3 : 10;\n\n    useEffect(() => {\n        console.log('display mode changed: ', displayMode);\n        return;\n    }, [displayMode]);\n    useEffect(() => {\n        setLangPack(Languages[localization.locale]);\n        return;\n    }, [localization.locale]);\n    useEffect(() => {\n        console.log('current folder:', currentFolder);\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) {\n            getPhotos({ group_id: currentFolder, current_page: page + 1, page_size });\n        }\n        return;\n    }, [currentFolder]);\n\n    useEffect(() => {\n        console.log('I want pics');\n        if (!loginData) return navigate('/');\n        getFolders();\n        tableFormatter();\n        return () => {\n            console.log('I leave pics');\n        };\n    }, []);\n\n    //____________一些函数_______________________________________________\n\n    let folderRefreshTimer;\n    async function manageFolder(operation, groupObj) {\n        let paramObj = ma.photoFolderManageQuery({ operation, groupObj });\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoFolderManageCheck(msg);\n        let { status, result } = res.response;\n        queryResult(status, 'ok');\n        if (status) setTimeout(getFolders, 1234);\n        return result;\n    }\n    async function getFolders(obj) {\n        let paramObj = ma.photoFolderQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoFolderCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        clearTimeout(uploadTimer);\n        uploadTimer = setTimeout(() => {\n            let newArr = result.map((item) => {\n                return { ...item, id: String(item.id) };\n            });\n            setFolderArr(newArr);\n        }, 1234);\n        return result;\n    }\n    async function getPhotos(obj) {\n        if (!obj) obj = {};\n        let paramObj = ma.photoQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        setPhotoArr(result);\n        return result;\n    }\n    async function uploadPhotos(photoFile) {\n        let paramObj = ma.photoUploadQuery({ file_name: photoFile.name, image_bytes: photoFile, group_id: currentFolder });\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoUploadCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(status, result);\n        queryResult(status, langPack.action.uploadSuccess);\n        if (folderRefreshTimer !== undefined) clearTimeout(folderRefreshTimer);\n        folderRefreshTimer = setTimeout(() => {\n            getPhotos({ group_id: currentFolder });\n        }, 2000);\n        return result;\n    }\n\n    const handleChangePage = (newPage) => {\n        setPage(newPage);\n        let obj = { current_page: newPage + 1, page_size };\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) obj.group_id = currentFolder;\n        getPhotos(obj);\n    }; //翻页\n    const handleChangeRowsPerPage = (newSize) => {\n        setPage_size(newSize);\n        let obj = { current_page: page + 1, page_size: newSize };\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) obj.group_id = currentFolder;\n        getPhotos(obj);\n    }; //页面大小调整\n    const onRowClick = (obj, e) => {\n        // let { id, row } = obj;\n    }; //单元格点击\n\n    //____________ ProductTable functions ___________________________________________________\n    function tableFormatter(obj) {\n        const columns = [\n            {\n                field: 'imgWithURL',\n                headerName: langPack.table.tableHeader,\n                minWidth: 50,\n                valueGetter: ({ row }) => row,\n                valueFormatter: ({ value }) => value.url,\n                renderCell: ({ value }) => (\n                    <a href={value.url} target=\"_blank\">\n                        <img {...srcset(value.url.split(',')[0], 100, 100, 1, 1)} alt=\"mainPic\" />\n                    </a>\n                )\n            },\n            {\n                field: 'file_name',\n                minWidth: 300,\n                headerName: langPack.table.file_name\n            },\n            {\n                field: 'reference_count',\n                flex: 1,\n                headerName: langPack.table.reference_count\n            },\n            {\n                field: 'gmt_modified',\n                flex: 1,\n                headerName: langPack.table.gmt_modified\n            }\n        ];\n        if (obj) {\n            let { score } = obj;\n            if (score) {\n                columns.splice(\n                    5,\n                    0,\n                    {\n                        field: 'final_score',\n                        headerName: langPack.table.score,\n                        flex: 0.5,\n                        sortable: true\n                    },\n                    {\n                        field: 'tag',\n                        headerName: langPack.table.tag,\n                        flex: 0.5,\n                        sortable: true\n                    }\n                ); // inserts\n            }\n        }\n        setTableColumns(columns);\n    }\n    //____________JSX函数_______________________________________________\n\n    return (\n        <MainCard title=\"Photos --图库\">\n            <PhotoFolder\n                folderArr={folderArr}\n                currentFolder={currentFolder}\n                setCurrentFolder={setCurrentFolder}\n                manageFolder={manageFolder}\n                uploadPhotos={uploadPhotos}\n                setPage={setPage}\n                displayMode={displayMode}\n                setDisplayMode={setDisplayMode}\n                langPack={langPack}\n            />\n            <Pagination\n                page={page}\n                page_size={page_size}\n                handleChangePage={handleChangePage}\n                handleChangeRowsPerPage={handleChangeRowsPerPage}\n                langPack={langPack}\n            />\n            {displayMode === 'table' ? (\n                <PhotoTable\n                    tableRows={photoArr}\n                    tableColumns={tableColumns}\n                    page={page}\n                    page_size={page_size}\n                    localization={localization}\n                    handleChangePage={handleChangePage}\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\n                    onRowClick={onRowClick}\n                    langPack={langPack}\n                />\n            ) : (\n                <PhotoGallery\n                    photoArr={photoArr}\n                    rowHeight={150}\n                    photoCols={photoCols}\n                    photoSizing={{ width: 100, height: 100 }}\n                    currentFolder={currentFolder}\n                    langPack={langPack}\n                />\n            )}\n        </MainCard>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}