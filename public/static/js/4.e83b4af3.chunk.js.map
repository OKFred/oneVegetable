{"version":3,"sources":["views/product/Languages.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/icons-material/esm/NetworkCheckOutlined.js","../node_modules/@mui/icons-material/esm/Speed.js","../node_modules/@mui/icons-material/esm/DriveFileMoveOutlined.js","../node_modules/@mui/icons-material/esm/FileUploadOutlined.js","../node_modules/@mui/icons-material/esm/CheckCircleOutlined.js","../node_modules/@mui/icons-material/esm/ArrowUpward.js","../node_modules/@mui/icons-material/esm/ArrowDownward.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","views/product/component/ProductTable.js"],"names":["Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","folderRequired","table","tableHeader","categoryName","productId","photos","subject","status","display","id","is_rts","is_specific","owner_member_display_name","product_type","smart_edit","attributes","keywords","keyword1","keyword2","keyword3","price","payment_methods","min_order_quantity","day","unit_type","logistic_mode","shipping_port","packaging_description","gmt_create","gmt_modified","score","tag","customInfo","tableToolbar","menuHide","menuShow","productScore","productDisplayOn","productDisplayOff","productUpdate","productEdit","productCopy","form","KeyInformation","ProductAttributes","productService","productType","rtsProduct","sourcingProduct","category","attributeMissing","attributeDuplicated","pleaseSelect","selectOrInput","measure","pieces","steps","first","second","finally","previous","next","complete","redirecting","addProduct","columnNotFound","keyAttributeMissing","productSheetEmpty","productCategoryNeeded","productGroupNeeded","productSubjectNeeded","productKeywordNeeded","productDetailsNeeded","productPriceUnitNeeded","productLogisticsModeNeeded","productPortNeeded","productPackagingDescriptionNeeded","productCustomizationNeeded","productTypeNeeded","productWeightNeeded","productPaymentMethodsNeeded","productMeasureNeeded","productSupplyAbilityNeeded","uneditable","productIdError","categoryError","editPrice","editPeriod","editAll","editDone","nullNotAllowed","MOQError","PriceError","add","remove","cloud","import","template","post","bulkUpload","bulkUploadGuide","bulkUploadTemplate","bulkUploadeTemplateDetails","bulkUploadProcesses","bulkUploadSheetMalformed","startPosting","selectFromCloud","uploadProductSheet","choosePhotos","uploadPhotos","removePhotos","toggleSmartEdit","productDescriptionTip","mainPhotoRequired","descriptionOverflow","panel1","panel2","panel3","panel4","addAttributes","clearAttributes","modificationNull","addCustomInfo","clearCustomInfo","modificationDone","duplicationLimitation","numberOnly","addSuccess","updateSuccess","duplicateSuccess","uploadSuccess","productScoreError","basic","potential","super","top","common","yes","no","success","netFail","zhCN","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","Breadcrumbs","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","selectedArr","ProductTable","tableRows","tableColumns","page_size","page","total","localization","langPack","columnVisibilityModel","setColumnVisibilityModel","handleChangePage","handleChangeRowsPerPage","onRowClick","loadingProgress","onTableSelection","productTableFn","navigate","useNavigate","useState","updatedArr","setUpdatedArr","scoreAutoQuery","setScoreAutoQuery","updateProduct","changeProductDisplay","duplicateProduct","needPhoto","needSheet","needTemplate","needPost","tableHeight","window","innerHeight","getUpdatedTable","allRows","rowObj","Number","style","DataGrid","experimentalFeatures","newEditingApi","checkboxSelection","localeText","locale","components","MuiDataGrid","defaultProps","Toolbar","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","csvOptions","utf8WithBom","fileName","Date","valueOf","getTimezoneOffset","toISOString","replace","hidden","undefined","Button","sx","fontSize","startIcon","NetworkCheckOutlined","Speed","prev","Add","Tooltip","title","DriveFileMoveOutlined","FileUploadOutlined","CheckCircleOutlined","ArrowUpward","list","obj","product_id","join","new_display","product_id_list","ArrowDownward","disabled","CloudQueue","ContentCopy","a","real_product_id","Check","LoadingOverlay","LinearProgress","variant","value","loading","onCellEditCommit","params","row","field","oldIndex","findIndex","newData","newArr","onStateChange","selection","find","pageSize","rowCount","columns","onColumnVisibilityModelChange","getRowHeight","rows","rowsPerPageOptions","paginationMode","onPageChange","onPageSizeChange"],"mappings":"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","file":"static/js/4.e83b4af3.chunk.js","sourcesContent":["let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found',\r\n            folderRequired: 'please select a folder to continue'\r\n        },\r\n        table: {\r\n            tableHeader: 'Products',\r\n            categoryName: 'category name',\r\n            productId: 'product id',\r\n            photos: 'photos',\r\n            subject: 'subject',\r\n            status: 'status',\r\n            display: 'display',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: 'specific',\r\n            owner_member_display_name: 'owner',\r\n            product_type: 'type',\r\n            smart_edit: 'smart edit',\r\n            attributes: 'attributes',\r\n            keywords: 'keywords',\r\n            keyword1: 'keyword1',\r\n            keyword2: 'keyword2',\r\n            keyword3: 'keyword3',\r\n            price: 'price',\r\n            payment_methods: 'payment methods',\r\n            min_order_quantity: 'MOQ(min. order quantity)',\r\n            day: 'day',\r\n            unit_type: 'unit type',\r\n            logistic_mode: 'logistic mode',\r\n            shipping_port: 'shipping port',\r\n            packaging_description: 'packaging description',\r\n            gmt_create: 'date create',\r\n            gmt_modified: 'date modified',\r\n            score: 'score',\r\n            tag: 'tag',\r\n            customInfo: 'custom info'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            productScore: 'scores',\r\n            productDisplayOn: 'list',\r\n            productDisplayOff: 'delist',\r\n            productUpdate: 'update',\r\n            productEdit: 'edit',\r\n            productCopy: 'copy'\r\n        },\r\n        form: {\r\n            KeyInformation: 'key information',\r\n            ProductAttributes: 'product attributes',\r\n            productService: 'product service',\r\n            productType: 'product type',\r\n            rtsProduct: 'ready-to-ship product',\r\n            sourcingProduct: 'inquiry/quotation product',\r\n            subject: '128 letters max.',\r\n            category: 'Select product category',\r\n            keywords: '3 keywords max. Comma(,) separated',\r\n            price: 'set price (range)',\r\n            payment_methods: 'payment methods such as T/T, L/C, etc.',\r\n            min_order_quantity: 'optional',\r\n            attributes: 'add or delete',\r\n            attributeMissing: 'attribute missing',\r\n            attributeDuplicated: 'attribute duplicated',\r\n            pleaseSelect: 'please select',\r\n            selectOrInput: 'select or input',\r\n            measure: 'length * width * height (cm)',\r\n            pieces: 'pieces'\r\n        },\r\n        steps: {\r\n            first: 'Edit Attributes',\r\n            second: 'Edit Contents',\r\n            finally: 'Preview & Publish',\r\n            previous: 'Previous',\r\n            next: 'Next',\r\n            complete: 'Complete',\r\n            redirecting: 'Redirecting...',\r\n            addProduct: 'New',\r\n            columnNotFound: 'Column not found',\r\n            keyAttributeMissing: 'product key attribute missing',\r\n            productSheetEmpty: 'Product sheet is empty',\r\n            productCategoryNeeded: 'Please select a specific category',\r\n            productGroupNeeded: 'Please select a product group',\r\n            productSubjectNeeded: 'Please input product subject',\r\n            productKeywordNeeded: 'Please input product keywords',\r\n            productDetailsNeeded: 'Product Details Needed',\r\n            productPriceUnitNeeded: 'Please input price unit',\r\n            productLogisticsModeNeeded: 'Please input logistics mode',\r\n            productPortNeeded: 'Please input shipping port',\r\n            productPackagingDescriptionNeeded: 'Please input packaging description',\r\n            productCustomizationNeeded: 'Please input Product Customization MOQ',\r\n            productTypeNeeded: 'Please select product type',\r\n            productWeightNeeded: 'Please input product weight',\r\n            productPaymentMethodsNeeded: 'Please select payment methods',\r\n            productMeasureNeeded: 'Please input product length * width * height',\r\n            productSupplyAbilityNeeded: 'Please input supply ability',\r\n            uneditable: 'product is currently uneditable',\r\n            productIdError: 'product id error, pls go back & try again',\r\n            categoryError: 'category error, pls try again',\r\n            editPrice: 'Edit Price',\r\n            editPeriod: 'Edit Production Period',\r\n            editAll: 'Edit All',\r\n            editDone: 'Edit Done',\r\n            nullNotAllowed: 'empty value is not allowed',\r\n            MOQError: 'MOQ should be greater than the previous one',\r\n            PriceError: 'price should be smaller than the previous one',\r\n            add: 'Add',\r\n            remove: 'Remove',\r\n            cloud: 'Cloud',\r\n            import: 'Import',\r\n            template: 'Template',\r\n            post: 'Post',\r\n            bulkUpload: 'Or, you want bulk upload...',\r\n            bulkUploadGuide: 'Read the tips 👉',\r\n            bulkUploadTemplate: 'Choose a template if you need some shared data',\r\n            bulkUploadeTemplateDetails: 'select shared details from the templeate',\r\n            bulkUploadProcesses: '①Export the template and edit... Do NOT use any comma(,) ② Import ③ Select photos ④ Post ',\r\n            bulkUploadSheetMalformed: 'the sheet uploaded is malformed',\r\n            startPosting: 'Start Posting Products',\r\n            selectFromCloud: 'Select from Cloud',\r\n            uploadProductSheet: 'Upload Product Sheet',\r\n            choosePhotos: 'Choose Photos',\r\n            uploadPhotos: 'Upload Photos',\r\n            removePhotos: 'double click to remove the photo',\r\n            toggleSmartEdit: 'toggle smart edit',\r\n            productDescriptionTip: 'Pictures from Smart Editing are not supported. Remove pictures if you want to modify',\r\n            mainPhotoRequired: 'Need at least one photo',\r\n            descriptionOverflow: 'description length shall be smaller than 60k letters',\r\n            panel1: 'subject, keywords, price, shipping...',\r\n            panel2: 'all kinds of attributes...(attributes may NOT be updated when posting new products for the first time. Try the second time if have to',\r\n            panel3: 'customized service if the MOQ is met...',\r\n            panel4: 'for trade assurance users exclusively...',\r\n            addAttributes: 'Add Attributes',\r\n            clearAttributes: 'Clear Attributes',\r\n            modificationNull: 'No modification made',\r\n            addCustomInfo: 'Add Custom Info',\r\n            clearCustomInfo: 'Clear Custom Info',\r\n            modificationDone: 'Will submit the following modifications:',\r\n            duplicationLimitation: 'Products with smart editing cannot duplicate its description',\r\n            numberOnly: 'Please input number only',\r\n            addSuccess: 'Product added successfully',\r\n            updateSuccess: 'Product updated successfully',\r\n            duplicateSuccess: 'product duplicated successfully',\r\n            uploadSuccess: 'Upload Success',\r\n            productScoreError: 'no score found'\r\n        },\r\n        productScore: {\r\n            basic: 'Basic',\r\n            potential: 'Potential',\r\n            super: 'Super',\r\n            top: 'Top'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            success: 'Success',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在',\r\n            folderRequired: '请选择文件夹'\r\n        },\r\n        table: {\r\n            tableHeader: '产品',\r\n            categoryName: '类目',\r\n            productId: '产品 id',\r\n            photos: '产品图',\r\n            subject: '标题',\r\n            status: '审核状态',\r\n            display: '上架状态',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: '规格品',\r\n            owner_member_display_name: '负责人',\r\n            product_type: '商品类型',\r\n            smart_edit: '智能编辑',\r\n            attributes: '属性',\r\n            keywords: '关键词',\r\n            keyword1: '关键词1',\r\n            keyword2: '关键词2',\r\n            keyword3: '关键词3',\r\n            price: '价格',\r\n            payment_methods: '支付方式',\r\n            min_order_quantity: '最小起订量(MOQ)',\r\n            day: '天',\r\n            unit_type: '单位',\r\n            logistic_mode: '物流方式',\r\n            shipping_port: '发货地',\r\n            packaging_description: '包装描述',\r\n            gmt_create: '创建日期',\r\n            gmt_modified: '修改日期',\r\n            score: '产品分',\r\n            tag: '标签',\r\n            customInfo: '定制信息'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            productScore: '产品分',\r\n            productDisplayOn: '上架',\r\n            productDisplayOff: '下架',\r\n            productUpdate: '更新',\r\n            productEdit: '编辑',\r\n            productCopy: '复制'\r\n        },\r\n        form: {\r\n            KeyInformation: '基本信息',\r\n            ProductAttributes: '产品属性',\r\n            productService: '产品服务',\r\n            productType: '产品类型',\r\n            rtsProduct: 'RTS 产品',\r\n            sourcingProduct: '询盘品',\r\n            subject: '128 字符以内',\r\n            category: '选择产品类目',\r\n            keywords: '最多三个关键词，用英文逗号(,)分隔',\r\n            price: '设置价格(区间)',\r\n            payment_methods: '支付方式，例如：T/T，L/C，等',\r\n            min_order_quantity: '选填',\r\n            attributes: '可增可减',\r\n            attributeMissing: '属性缺失',\r\n            attributeDuplicated: '属性重复',\r\n            pleaseSelect: '请选择',\r\n            selectOrInput: '选择或输入',\r\n            measure: '长*宽*高 (cm)',\r\n            pieces: '件'\r\n        },\r\n        steps: {\r\n            first: '属性编辑',\r\n            second: '详情编辑',\r\n            finally: '预览&发布',\r\n            previous: '上一步',\r\n            next: '下一步',\r\n            complete: '完成',\r\n            redirecting: '正在跳转...',\r\n            addProduct: '发品',\r\n            columnNotFound: '未找到对应列',\r\n            keyAttributeMissing: '发品关键属性缺失',\r\n            productSheetEmpty: '产品表没有数据',\r\n            productCategoryNeeded: '请选择详细的产品类目',\r\n            productGroupNeeded: '请选择产品分组',\r\n            productSubjectNeeded: '请输入产品名称',\r\n            productKeywordNeeded: '请输入产品关键词',\r\n            productDetailsNeeded: '请输入产品详情',\r\n            productPriceUnitNeeded: '请选择计量单位',\r\n            productLogisticsModeNeeded: '请选择物流方式',\r\n            productPortNeeded: '请输入海运港口',\r\n            productPackagingDescriptionNeeded: '请输入包装描述',\r\n            productCustomizationNeeded: '请输入产品定制信息',\r\n            productTypeNeeded: '请选择产品类型',\r\n            productWeightNeeded: '请输入产品重量',\r\n            productPaymentMethodsNeeded: '请输入支付方式',\r\n            productMeasureNeeded: '请输入长宽高',\r\n            productSupplyAbilityNeeded: '请输入供货能力',\r\n            uneditable: '当前产品不可编辑',\r\n            productIdError: '产品 id 错误，请返回重试',\r\n            categoryError: '类目有误，请重新选择',\r\n            editPrice: '编辑价格',\r\n            editPeriod: '编辑发货期',\r\n            editAll: '编辑全部',\r\n            editDone: '编辑完成',\r\n            nullNotAllowed: '不能为空',\r\n            MOQError: 'MOQ值须大于前一个值',\r\n            PriceError: '价格值须小于前一个值',\r\n            add: '添加',\r\n            remove: '删除',\r\n            cloud: '图库',\r\n            import: '导入',\r\n            template: '模板',\r\n            post: '发品',\r\n            bulkUpload: '或者你想要批量上传...',\r\n            bulkUploadGuide: '请参考提示操作 👉',\r\n            bulkUploadTemplate: '可选模板作为共享信息导入',\r\n            bulkUploadeTemplateDetails: '选择发品参考中需要共享的信息',\r\n            bulkUploadProcesses: ' ① 导出表格并编辑。不要使用英文逗号【 , 】②导入表格 ③ 选图 ④发布 ',\r\n            bulkUploadSheetMalformed: '表格列数不一致',\r\n            startPosting: '开始发品',\r\n            selectFromCloud: '从云端选择',\r\n            uploadProductSheet: '上传产品表',\r\n            choosePhotos: '选择图片',\r\n            uploadPhotos: '上传图片',\r\n            removePhotos: '双击移除图片',\r\n            toggleSmartEdit: '智能编辑切换',\r\n            productDescriptionTip: '提示: 来自【智能编辑】的图片无法编辑，如需修改，请移除所有旧图先',\r\n            mainPhotoRequired: '需要保留至少一张主图',\r\n            descriptionOverflow: '描述长度不能超过6万字符',\r\n            panel1: '标题，关键词，价格，发货...',\r\n            panel2: '各类属性...（发新品初次编辑时部分属性可能无法提交，可第二次再填）',\r\n            panel3: '定制服务...',\r\n            panel4: '信保用户专属...',\r\n            addAttributes: '添加属性',\r\n            clearAttributes: '移除空白属性',\r\n            addCustomInfo: '添加自定义信息',\r\n            clearCustomInfo: '清理自定义信息',\r\n            modificationNull: '没有任何修改',\r\n            modificationDone: '将提交如下内容:',\r\n            duplicationLimitation: '智能编辑的产品暂时无法复制其详情',\r\n            numberOnly: '请输入数字',\r\n            uploadSuccess: '上传成功',\r\n            addSuccess: '产品添加成功',\r\n            updateSuccess: '产品更新成功',\r\n            duplicateSuccess: '产品复制成功',\r\n            productScoreError: '产品分未查到'\r\n        },\r\n        productScore: {\r\n            basic: '低质品',\r\n            potential: '普通品',\r\n            super: '实力优品',\r\n            top: '精品'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            success: '操作成功',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.9 5c-.17 0-.32.09-.41.23l-.07.15-5.18 11.65c-.16.29-.26.61-.26.96 0 1.11.9 2.01 2.01 2.01.96 0 1.77-.68 1.96-1.59l.01-.03L16.4 5.5c0-.28-.22-.5-.5-.5zM1 9l2 2c2.88-2.88 6.79-4.08 10.53-3.62l1.19-2.68C9.89 3.84 4.74 5.27 1 9zm20 2 2-2c-1.64-1.64-3.55-2.82-5.59-3.57l-.53 2.82c1.5.62 2.9 1.53 4.12 2.75zm-4 4 2-2c-.8-.8-1.7-1.42-2.66-1.89l-.55 2.92c.42.27.83.59 1.21.97zM5 13l2 2c1.13-1.13 2.56-1.79 4.03-2l1.28-2.88c-2.63-.08-5.3.87-7.31 2.88z\"\n}), 'NetworkCheckOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.38 8.57-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83z\"\n}), 'Speed');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V6h5.17l1.41 1.41.59.59H20v10zm-7.84-6H8v2h4.16l-1.59 1.59L11.99 17 16 13.01 11.99 9l-1.41 1.41L12.16 12z\"\n}), 'DriveFileMoveOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z\"\n}), 'FileUploadOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z\"\n}), 'CheckCircleOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Tooltip, LinearProgress } from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    CloudQueue as CloudQueueIcon,\r\n    FileUploadOutlined as FileUploadOutlinedIcon,\r\n    DriveFileMoveOutlined as DriveFileMoveOutlinedIcon,\r\n    CheckCircleOutlined as CheckCircleOutlinedIcon,\r\n    ContentCopy as ContentCopyIcon,\r\n    Speed as SpeedIcon,\r\n    Check as CheckIcon,\r\n    NetworkCheckOutlined as NetworkCheckOutlinedIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ModeEdit as EditIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarFilterButton,\r\n    GridToolbarExport,\r\n    GridToolbarDensitySelector,\r\n    zhCN\r\n} from '@mui/x-data-grid';\r\n\r\nlet selectedArr = []; //当前选中的产品id\r\nfunction ProductTable({\r\n    tableRows,\r\n    tableColumns,\r\n    page_size,\r\n    page,\r\n    total,\r\n    localization,\r\n    langPack,\r\n    columnVisibilityModel,\r\n    setColumnVisibilityModel,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    onRowClick,\r\n    loadingProgress,\r\n    onTableSelection,\r\n    productTableFn\r\n}) {\r\n    const navigate = useNavigate(); //react-router-dom\r\n    let [updatedArr, setUpdatedArr] = useState([]); //更新了的行\r\n    let {\r\n        scoreAutoQuery,\r\n        setScoreAutoQuery,\r\n        addProduct,\r\n        updateProduct,\r\n        changeProductDisplay,\r\n        duplicateProduct,\r\n        needPhoto,\r\n        needSheet,\r\n        needTemplate,\r\n        needPost\r\n    } = productTableFn;\r\n    //DataGrid toolbar;\r\n    const tableHeight = window.innerHeight < 700 ? 350 : window.innerHeight - 350;\r\n\r\n    const onStateChange = (obj) => {\r\n        let { selection } = obj;\r\n        if (selection.length === selectedArr.length) return;\r\n        selectedArr = selection.map((id) => tableRows.find((obj) => obj.id === id));\r\n        onTableSelection(selectedArr);\r\n    }; //勾选\r\n\r\n    const onCellEditCommit = (params) => {\r\n        let { id, row, field, value } = params;\r\n        let oldIndex = tableRows.findIndex((obj) => obj.id === id);\r\n        if (oldIndex === -1) return; //没找到?\r\n        let oldValue = tableRows[oldIndex][field];\r\n        if (oldValue === value) return; //先对比原始数据，如果没有改变，则不更新\r\n        let newData = { ...row, [field]: value };\r\n        let newArr = [...updatedArr];\r\n        newArr[oldIndex] = newData; //不管改不改，先存着再说\r\n        return setUpdatedArr(newArr);\r\n    };\r\n\r\n    function getUpdatedTable(allRows) {\r\n        let arr = allRows ? tableRows : selectedArr;\r\n        return arr.map((rowObj) => {\r\n            let id = Number(rowObj.id);\r\n            return updatedArr[id] ? { ...rowObj, ...updatedArr[id] } : rowObj;\r\n        });\r\n    } //获取更新后的数据\r\n\r\n    return (\r\n        <div style={{ height: tableHeight, width: '100%' }}>\r\n            <DataGrid\r\n                experimentalFeatures={{ newEditingApi: true }}\r\n                checkboxSelection={true}\r\n                localeText={localization.locale === 'zhCN' ? zhCN.components.MuiDataGrid.defaultProps.localeText : {}}\r\n                components={{\r\n                    Toolbar: () => (\r\n                        <GridToolbarContainer>\r\n                            <GridToolbarColumnsButton />\r\n                            <GridToolbarFilterButton />\r\n                            <GridToolbarDensitySelector />\r\n                            <GridToolbarExport\r\n                                csvOptions={{\r\n                                    utf8WithBom: true,\r\n                                    fileName:\r\n                                        langPack.table.tableHeader +\r\n                                        '_' +\r\n                                        new Date(new Date().valueOf() - new Date().getTimezoneOffset() * 60 * 1000)\r\n                                            .toISOString()\r\n                                            .replace(/T.*/, '')\r\n                                }}\r\n                            />\r\n                            <span hidden={setScoreAutoQuery === undefined}>\r\n                                <Button\r\n                                    sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                    startIcon={scoreAutoQuery ? <NetworkCheckOutlinedIcon /> : <SpeedIcon />}\r\n                                    onClick={() => {\r\n                                        setScoreAutoQuery((prev) => !prev);\r\n                                    }}\r\n                                >\r\n                                    {langPack.tableToolbar.productScore}\r\n                                </Button>\r\n                            </span>\r\n                            <span hidden={addProduct === undefined}>\r\n                                <Button sx={{ padding: '4px 5px', fontSize: '13px' }} startIcon={<AddIcon />} onClick={addProduct}>\r\n                                    {langPack.steps.addProduct}\r\n                                </Button>\r\n                            </span>\r\n                            <span hidden={needTemplate === undefined}>\r\n                                <Tooltip title={langPack.steps.bulkUploadTemplate}>\r\n                                    <span>\r\n                                        <Button sx={{ height: '100%' }} startIcon={<DriveFileMoveOutlinedIcon />} onClick={needTemplate}>\r\n                                            {langPack.steps.template}\r\n                                        </Button>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </span>\r\n                            <span hidden={needSheet === undefined}>\r\n                                <Tooltip title={langPack.steps.uploadProductSheet}>\r\n                                    <span>\r\n                                        <Button sx={{ height: '100%' }} startIcon={<FileUploadOutlinedIcon />} onClick={needSheet}>\r\n                                            {langPack.steps.import}\r\n                                        </Button>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </span>\r\n                            <span hidden={needPost === undefined}>\r\n                                <Tooltip title={langPack.steps.startPosting}>\r\n                                    <span>\r\n                                        <Button\r\n                                            sx={{ height: '100%' }}\r\n                                            startIcon={<CheckCircleOutlinedIcon />}\r\n                                            onClick={() => needPost(getUpdatedTable(true))}\r\n                                        >\r\n                                            {langPack.steps.post}\r\n                                        </Button>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </span>\r\n                            <span hidden={!selectedArr.length}>\r\n                                <span hidden={changeProductDisplay === undefined}>\r\n                                    <Button\r\n                                        sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                        startIcon={<ArrowUpwardIcon />}\r\n                                        onClick={() => {\r\n                                            let list = selectedArr.map((obj) => obj.product_id).join(',');\r\n                                            changeProductDisplay({\r\n                                                new_display: 'on',\r\n                                                product_id_list: list\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        {langPack.tableToolbar.productDisplayOn}\r\n                                    </Button>\r\n                                    <Button\r\n                                        sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                        startIcon={<ArrowDownwardIcon />}\r\n                                        onClick={() => {\r\n                                            let list = selectedArr.map((obj) => obj.product_id).join(',');\r\n                                            changeProductDisplay({\r\n                                                new_display: 'off',\r\n                                                product_id_list: list\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        {langPack.tableToolbar.productDisplayOff}\r\n                                    </Button>\r\n                                </span>\r\n                                <span hidden={needPhoto === undefined}>\r\n                                    <Tooltip title={langPack.steps.selectFromCloud}>\r\n                                        <span>\r\n                                            <Button\r\n                                                disabled={selectedArr.length !== 1}\r\n                                                sx={{ height: '100%' }}\r\n                                                startIcon={<CloudQueueIcon />}\r\n                                                onClick={() => needPhoto(getUpdatedTable())}\r\n                                            >\r\n                                                {langPack.steps.cloud}\r\n                                            </Button>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </span>\r\n                                <span hidden={duplicateProduct === undefined}>\r\n                                    <Tooltip title={langPack.steps.duplicationLimitation}>\r\n                                        <span>\r\n                                            <Button\r\n                                                sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                                startIcon={<ContentCopyIcon />}\r\n                                                disabled={selectedArr.length !== 1}\r\n                                                onClick={async () => {\r\n                                                    if (!selectedArr.length) return;\r\n                                                    await duplicateProduct(selectedArr[0]);\r\n                                                    return;\r\n                                                }}\r\n                                            >\r\n                                                {langPack.tableToolbar.productCopy}\r\n                                            </Button>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </span>\r\n                                <span hidden={addProduct === undefined}>\r\n                                    <Button\r\n                                        sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                        startIcon={<EditIcon />}\r\n                                        disabled={selectedArr.length !== 1}\r\n                                        onClick={() => {\r\n                                            if (!selectedArr.length) return;\r\n                                            let real_product_id = selectedArr.map((obj) => obj.id).join(',');\r\n                                            let product_id = selectedArr.map((obj) => obj.product_id).join(',');\r\n                                            navigate(`/product/real_product_id=${real_product_id}&product_id=${product_id}`);\r\n                                            return;\r\n                                        }}\r\n                                    >\r\n                                        {langPack.tableToolbar.productEdit}\r\n                                    </Button>\r\n                                </span>\r\n                            </span>\r\n                            <span hidden={!updatedArr.length}>\r\n                                <span hidden={updateProduct === undefined}>\r\n                                    <Button\r\n                                        color=\"error\"\r\n                                        sx={{ padding: '4px 5px', fontSize: '13px' }}\r\n                                        startIcon={<CheckIcon />}\r\n                                        onClick={async () => {\r\n                                            await updateProduct(updatedArr);\r\n                                            setUpdatedArr([]);\r\n                                        }}\r\n                                    >\r\n                                        {langPack.tableToolbar.productUpdate}\r\n                                    </Button>\r\n                                </span>\r\n                            </span>\r\n                        </GridToolbarContainer>\r\n                    ),\r\n                    LoadingOverlay: () => <LinearProgress variant=\"determinate\" value={loadingProgress} />\r\n                }}\r\n                loading={loadingProgress !== 100}\r\n                onCellEditCommit={onCellEditCommit}\r\n                onStateChange={onStateChange}\r\n                page={page}\r\n                pageSize={page_size}\r\n                rowCount={total}\r\n                columns={tableColumns}\r\n                columnVisibilityModel={columnVisibilityModel}\r\n                onColumnVisibilityModelChange={setColumnVisibilityModel}\r\n                getRowHeight={() => 88}\r\n                rows={tableRows}\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                paginationMode=\"server\"\r\n                onRowClick={onRowClick}\r\n                onPageChange={handleChangePage}\r\n                onPageSizeChange={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nProductTable.propTypes = {\r\n    onPhotoConfirm: PropTypes.func,\r\n    tableRows: PropTypes.array,\r\n    tableColumns: PropTypes.array,\r\n    page_size: PropTypes.number,\r\n    page: PropTypes.number,\r\n    total: PropTypes.number,\r\n    localization: PropTypes.object,\r\n    langPack: PropTypes.object,\r\n    columnVisibilityModel: PropTypes.object,\r\n    setColumnVisibilityModel: PropTypes.func,\r\n    loadingProgress: PropTypes.number,\r\n    handleChangePage: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func,\r\n    onRowClick: PropTypes.func,\r\n    onTableSelection: PropTypes.func,\r\n    productTableFn: PropTypes.object\r\n};\r\n\r\nexport default ProductTable;\r\n"],"sourceRoot":""}