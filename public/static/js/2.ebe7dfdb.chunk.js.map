{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/icons-material/esm/Folder.js","../node_modules/@mui/icons-material/esm/FileUpload.js","views/photo/Languages.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/icons-material/esm/Toc.js","../node_modules/@mui/icons-material/esm/Collections.js","../node_modules/@mui/icons-material/esm/AddPhotoAlternate.js","views/photo/component/PhotoFolder.js","views/photo/component/Pagination.js","views/photo/component/PhotoGallery.js","views/photo/component/PhotoTable.js","views/photo/index.js"],"names":["createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","Breadcrumbs","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","action","uploadSuccess","table","tableHeader","id","group_id","group_name","file_name","file_size","gmt_modified","owner_member_display_name","reference_count","url","tableToolbar","menuHide","menuShow","photoUpload","photoDownload","common","yes","no","netFail","zhCN","getFormGroupUtilityClass","FormGroupRoot","row","flexDirection","FormGroup","muiFormControl","useFormControl","fcs","formControlState","states","error","slots","newPhotoArr","PhotoFolder","folderArr","setCurrentFolder","manageFolder","uploadPhotos","setPage","displayMode","setDisplayMode","langPack","useState","newFolder","setNewFolder","folderCommand","setFolderCommand","refreshFolders","a","result","console","log","file","style","marginBottom","Input","sx","variant","type","placeholder","onChange","e","target","value","trim","Button","startIcon","Check","Cancel","defaultValue","find","obj","FormControlLabel","border","justifyContent","labelPlacement","control","inputProps","multiple","label","AddPhotoAlternate","fontSize","files","Folder","Select","minWidth","autoWidth","MenuItem","disabled","ButtonGroup","Add","thisFolder","Toc","Collections","Pagination","page","page_size","handleChangePage","handleChangeRowsPerPage","TablePagination","labelDisplayedRows","from","to","count","onPageChange","event","newPage","rowsPerPage","onRowsPerPageChange","parseInt","PhotoGallery","photoArr","photoSizing","photoCols","rowHeight","ImageList","cols","marginTop","gap","item","ImageListItem","rows","srcset","alt","loading","ImageListItemBar","background","title","position","actionIcon","IconButton","StarBorder","actionPosition","selectedArr","PhotoTable","tableRows","tableColumns","localization","onRowClick","onPhotoSelection","tableHeight","window","innerHeight","DataGrid","checkboxSelection","localeText","locale","components","MuiDataGrid","defaultProps","Toolbar","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","csvOptions","utf8WithBom","fileName","Date","valueOf","getTimezoneOffset","toISOString","replace","onStateChange","selection","pageSize","rowCount","columns","getRowHeight","rowsPerPageOptions","disableSelectionOnClick","paginationMode","onPageSizeChange","App","onPhotoSelected","folderRefreshTimer","useSelector","state","setLangPack","globalization","baseData","loginData","navigate","useNavigate","setFolderArr","setPhotoArr","setPage_size","setTableColumns","uploadTimer","useTheme","useMediaQuery","breakpoints","down","operation","groupObj","paramObj","ma","photoFolderManageQuery","fetchAPI","msg","response","status","queryResult","res","photoFolderManageCheck","setTimeout","getFolders","photoFolderQuery","photoFolderCheck","clearTimeout","newArr","String","getPhotos","photoQuery","photoCheck","photoFile","photoUploadQuery","image_bytes","photoUploadCheck","undefined","useEffect","current_page","field","headerName","flex","valueGetter","valueFormatter","renderCell","href","tableFormatter","newSize","MainCard"],"mappings":"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","file":"static/js/2.ebe7dfdb.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"\n}), 'Folder');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"\n}), 'FileUpload');","let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found'\r\n        },\r\n        action: {\r\n            uploadSuccess: 'upload success'\r\n        },\r\n        table: {\r\n            tableHeader: 'photo',\r\n            id: 'photo id',\r\n            group_id: 'group id',\r\n            group_name: 'folder name',\r\n            file_name: 'file name',\r\n            file_size: 'file size',\r\n            gmt_modified: 'date modified',\r\n            owner_member_display_name: 'owner',\r\n            reference_count: 'reference count',\r\n            url: 'link'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            photoUpload: 'upload',\r\n            photoDownload: 'download'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在'\r\n        },\r\n        action: {\r\n            uploadSuccess: '上传成功'\r\n        },\r\n        table: {\r\n            tableHeader: '图片',\r\n            id: '图片 id',\r\n            group_id: '分组 id',\r\n            group_name: '文件夹',\r\n            file_name: '文件名',\r\n            file_size: '文件大小',\r\n            gmt_modified: '修改日期',\r\n            owner_member_display_name: '用户名',\r\n            reference_count: '引用次数',\r\n            url: '链接'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            photoUpload: '上传',\r\n            photoDownload: '下载'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z\"\n}), 'Toc');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4 2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z\"\n}), 'Collections');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 7v2.99s-1.99.01-2 0V7h-3s.01-1.99 0-2h3V2h2v3h3v2h-3zm-3 4V8h-3V5H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-8h-3zM5 19l3-4 2 3 3-4 4 5H5z\"\n}), 'AddPhotoAlternate');","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, FormGroup, FormControlLabel, Button, ButtonGroup, Input, Select, MenuItem, Breadcrumbs } from '@mui/material';\r\nimport {\r\n    AddPhotoAlternate as AddPhotoAlternateIcon,\r\n    Folder as FolderIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    Add as AddIcon,\r\n    ModeEdit as EditIcon,\r\n    DeleteOutline as DeleteIcon,\r\n    FileUpload as UploadIcon,\r\n    Toc as TocIcon,\r\n    Collections as CollectionsIcon\r\n} from '@mui/icons-material';\r\n\r\nlet newPhotoArr = [];\r\nfunction PhotoFolder({\r\n    folderArr,\r\n    currentFolder,\r\n    setCurrentFolder,\r\n    manageFolder,\r\n    uploadPhotos,\r\n    setPage,\r\n    displayMode,\r\n    setDisplayMode,\r\n    langPack\r\n}) {\r\n    let [newFolder, setNewFolder] = useState(false);\r\n    let [folderCommand, setFolderCommand] = useState(false);\r\n    function onFileSelected(e) {\r\n        let files = e.target.files;\r\n        if (!files.length) {\r\n            newPhotoArr = [];\r\n            return;\r\n        }\r\n        newPhotoArr = files;\r\n    }\r\n    function refreshFolders() {\r\n        setNewFolder('');\r\n        setFolderCommand(false);\r\n        return;\r\n    }\r\n    async function onFolderAdd() {\r\n        let result = await manageFolder('add', { group_name: newFolder });\r\n        if (result) {\r\n            setCurrentFolder('');\r\n            refreshFolders();\r\n        }\r\n        return;\r\n    }\r\n    async function onFolderRename() {\r\n        let result = await manageFolder('rename', { group_id: currentFolder, group_name: newFolder });\r\n        console.log(result);\r\n        if (result) refreshFolders();\r\n        return;\r\n    }\r\n    async function onFolderDelete() {\r\n        manageFolder('delete', { group_id: currentFolder });\r\n        setCurrentFolder('');\r\n        refreshFolders();\r\n        return;\r\n    }\r\n    async function onPhotoUpload() {\r\n        for (let file of newPhotoArr) {\r\n            await uploadPhotos(file);\r\n        }\r\n        newPhotoArr = [];\r\n    }\r\n    function changeFolder(e) {\r\n        let value = e.target.value;\r\n        if (value && value !== langPack.folder.currentFolder) {\r\n            setPage(0);\r\n            setCurrentFolder(value);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            {!folderCommand ? (\r\n                <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\" sx={{ display: 'inline-block', marginRight: '5px' }}>\r\n                        <FolderIcon />\r\n                        <Select sx={{ height: '30px', minWidth: '100px' }} autoWidth={true} value={currentFolder} onChange={changeFolder}>\r\n                            <MenuItem value={langPack.folder.currentFolder} disabled>\r\n                                {langPack.folder.currentFolder}\r\n                            </MenuItem>\r\n                            {!folderArr || !folderArr.length ? (\r\n                                <Typography variant=\"body2\">{langPack.folder.folderNull}</Typography>\r\n                            ) : (\r\n                                folderArr.map((obj, index) => (\r\n                                    <MenuItem key={index} value={obj.id}>\r\n                                        {obj.name}\r\n                                    </MenuItem>\r\n                                ))\r\n                            )}\r\n                        </Select>\r\n                    </Breadcrumbs>\r\n                    <ButtonGroup variant=\"\">\r\n                        <Button onClick={() => setFolderCommand('add')}>\r\n                            <AddIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                if (!currentFolder || currentFolder === langPack.folder.currentFolder) return;\r\n                                setFolderCommand('edit');\r\n                                let thisFolder = folderArr.find((obj) => obj.id === currentFolder);\r\n                                if (thisFolder) setNewFolder(thisFolder.name);\r\n                            }}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            <EditIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => setFolderCommand('delete')}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => setFolderCommand('upload')}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            <UploadIcon />\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => setDisplayMode(displayMode === 'gallery' ? 'table' : 'gallery')}\r\n                            disabled={!currentFolder || currentFolder === langPack.folder.currentFolder}\r\n                        >\r\n                            {displayMode === 'gallery' ? <TocIcon /> : <CollectionsIcon />}\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {folderCommand === 'add' ? (\r\n                        <>\r\n                            <Input\r\n                                sx={{ height: '30px', marginRight: '10px' }}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                type=\"text\"\r\n                                placeholder={langPack.folder.addNewFolder}\r\n                                onChange={(e) => setNewFolder(e.target.value.trim())}\r\n                            />\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderAdd}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : folderCommand === 'edit' ? (\r\n                        <>\r\n                            <Input\r\n                                sx={{ height: '30px', marginRight: '10px' }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                type=\"text\"\r\n                                defaultValue={folderArr.find((obj) => obj.id === currentFolder).name}\r\n                                onChange={(e) => setNewFolder(e.target.value.trim())}\r\n                            />\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderRename}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : folderCommand === 'delete' ? (\r\n                        <>\r\n                            <Button startIcon={<CheckIcon />} onClick={onFolderDelete}>\r\n                                {langPack.common.yes}\r\n                            </Button>\r\n                            <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                {langPack.common.no}\r\n                            </Button>\r\n                        </>\r\n                    ) : folderCommand === 'upload' ? (\r\n                        <>\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    sx={{ border: '1px dotted', height: '200px', margin: '20px', justifyContent: 'center' }}\r\n                                    labelPlacement=\"top\"\r\n                                    control={<Input type=\"file\" inputProps={{ multiple: true }} />}\r\n                                    label={<AddPhotoAlternateIcon fontSize=\"large\" />}\r\n                                    onChange={onFileSelected}\r\n                                />\r\n                                <Button startIcon={<CheckIcon />} onClick={onPhotoUpload}>\r\n                                    {langPack.common.yes}\r\n                                </Button>\r\n                                <Button startIcon={<CancelIcon />} onClick={() => setFolderCommand(false)}>\r\n                                    {langPack.common.no}\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nPhotoFolder.propTypes = {\r\n    folderArr: PropTypes.array,\r\n    currentFolder: PropTypes.string,\r\n    setCurrentFolder: PropTypes.func,\r\n    setPhotoArr: PropTypes.func,\r\n    manageFolder: PropTypes.func,\r\n    uploadPhotos: PropTypes.func,\r\n    setPage: PropTypes.func,\r\n    displayMode: PropTypes.string,\r\n    setDisplayMode: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoFolder;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { TablePagination } from '@mui/material';\r\n\r\nfunction Pagination({ page, page_size, handleChangePage, handleChangeRowsPerPage }) {\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            labelDisplayedRows={({ from, to }) => {\r\n                return `${from}–${to}`;\r\n            }}\r\n            sx={{\r\n                '& .MuiTablePagination-toolbar': { height: '29px', padding: '1px' }\r\n            }}\r\n            page={page}\r\n            count={-1}\r\n            onPageChange={(event, newPage) => handleChangePage(newPage)}\r\n            rowsPerPage={page_size}\r\n            onRowsPerPageChange={(event) => handleChangeRowsPerPage(parseInt(event.target.value))}\r\n        />\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    page: PropTypes.number,\r\n    page_size: PropTypes.number,\r\n    handleChangePage: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func\r\n};\r\n\r\nexport default Pagination;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, ImageList, ImageListItem, ImageListItemBar, IconButton } from '@mui/material';\r\nimport { StarBorder as StarBorderIcon } from '@mui/icons-material';\r\n\r\nfunction PhotoGallery({ photoArr, photoSizing, photoCols, rowHeight, currentFolder, langPack }) {\r\n    let { width, height } = photoSizing;\r\n    return photoArr && photoArr.length ? (\r\n        <ImageList cols={photoCols} rowHeight={rowHeight} sx={{ marginTop: '1px', marginBottom: '60px' }} variant=\"standard\" gap={2}>\r\n            {photoArr.map((item) => {\r\n                return (\r\n                    <ImageListItem key={item.url} cols={1} rows={1}>\r\n                        <img {...srcset(item.url, width, height, 1, 1)} alt={item.file_name} loading=\"lazy\" />\r\n                        <ImageListItemBar\r\n                            sx={{\r\n                                background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)'\r\n                            }}\r\n                            title={item.file_name}\r\n                            position=\"top\"\r\n                            actionIcon={\r\n                                <IconButton sx={{ color: item.reference_count ? 'yellow' : 'white' }} aria-label={`star ${item.file_name}`}>\r\n                                    <StarBorderIcon />\r\n                                </IconButton>\r\n                            }\r\n                            actionPosition=\"left\"\r\n                        />\r\n                    </ImageListItem>\r\n                );\r\n            })}\r\n        </ImageList>\r\n    ) : (\r\n        <Typography variant=\"body2\" sx={{ margin: '10px' }}>\r\n            {currentFolder === langPack.folder.currentFolder ? langPack.folder.currentFolder : langPack.folder.dataNull}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nPhotoGallery.propTypes = {\r\n    photoArr: PropTypes.array,\r\n    photoSizing: PropTypes.object,\r\n    photoCols: PropTypes.number,\r\n    rowHeight: PropTypes.number,\r\n    currentFolder: PropTypes.string,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarFilterButton,\r\n    GridToolbarExport,\r\n    GridToolbarDensitySelector,\r\n    zhCN\r\n} from '@mui/x-data-grid';\r\n\r\nlet selectedArr = []; //当前选中的产品id，需要转换成加密id才可以调用API\r\nfunction PhotoTable({\r\n    tableRows,\r\n    tableColumns,\r\n    page_size,\r\n    page,\r\n    localization,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    onRowClick,\r\n    onPhotoSelection,\r\n    langPack\r\n}) {\r\n    const tableHeight = window.innerHeight < 700 ? 350 : window.innerHeight - 350;\r\n    const onStateChange = (obj) => {\r\n        let { selection } = obj;\r\n        if (selection.length === selectedArr.length) return;\r\n        selectedArr = selection.map((id) => tableRows.find((obj) => obj.id === id));\r\n        onPhotoSelection(selectedArr);\r\n    }; //勾选\r\n    return (\r\n        <div style={{ height: tableHeight, width: '100%' }}>\r\n            <DataGrid\r\n                checkboxSelection={true}\r\n                localeText={localization.locale === 'zhCN' ? zhCN.components.MuiDataGrid.defaultProps.localeText : {}}\r\n                components={{\r\n                    Toolbar: () => (\r\n                        <GridToolbarContainer>\r\n                            <GridToolbarColumnsButton />\r\n                            <GridToolbarFilterButton />\r\n                            <GridToolbarDensitySelector />\r\n                            <GridToolbarExport\r\n                                csvOptions={{\r\n                                    utf8WithBom: true,\r\n                                    fileName:\r\n                                        langPack.table.tableHeader +\r\n                                        '_' +\r\n                                        new Date(new Date().valueOf() - new Date().getTimezoneOffset() * 60 * 1000)\r\n                                            .toISOString()\r\n                                            .replace(/T.*/, '')\r\n                                }}\r\n                            />\r\n                        </GridToolbarContainer>\r\n                    )\r\n                }}\r\n                onRowClick={onRowClick}\r\n                onStateChange={onStateChange}\r\n                page={page}\r\n                pageSize={page_size}\r\n                rowCount={9999}\r\n                columns={tableColumns}\r\n                getRowHeight={() => 88}\r\n                rows={tableRows}\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                disableSelectionOnClick\r\n                paginationMode=\"server\"\r\n                onPageChange={handleChangePage}\r\n                onPageSizeChange={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nPhotoTable.propTypes = {\r\n    tableRows: PropTypes.array,\r\n    tableColumns: PropTypes.array,\r\n    page_size: PropTypes.number,\r\n    page: PropTypes.number,\r\n    localization: PropTypes.object,\r\n    handleChangePage: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func,\r\n    onPhotoSelection: PropTypes.func,\r\n    onRowClick: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoTable;\r\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// material-ui\nimport { useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport { Languages } from './Languages';\nimport PhotoFolder from './component/PhotoFolder';\nimport Pagination from './component/Pagination';\nimport PhotoGallery from './component/PhotoGallery';\nimport PhotoTable from './component/PhotoTable';\n\n// ==============================|| SINGLE PAGE APPLICATION ||============================== //\n\nconst App = ({ onPhotoSelected }) => {\n    console.log('photo app running');\n    const localization = useSelector((state) => state.localization); //read only (language related)\n    let [langPack, setLangPack] = useState(Languages[localization.locale]); //currentLanguage\n    const globalization = useSelector((state) => state.globalization);\n    const [loginData] = useState(globalization.baseData.loginData);\n    let navigate = useNavigate(); //react-router-dom\n\n    //states [所有文件夹，当前文件夹，待上传文件，文件夹下所有图片，当前页，页面大小]\n    let [folderArr, setFolderArr] = useState([]);\n    let [currentFolder, setCurrentFolder] = useState(langPack.folder.currentFolder);\n    let [photoArr, setPhotoArr] = useState([]);\n    let [page, setPage] = useState(0);\n    let [page_size, setPage_size] = useState(10);\n    let [displayMode, setDisplayMode] = useState('table');\n    let [tableColumns, setTableColumns] = useState([]);\n    let uploadTimer = 0; //节流\n    const theme = useTheme();\n    const photoCols = useMediaQuery(theme.breakpoints.down('md')) ? 3 : 10;\n\n    useEffect(() => {\n        console.log('display mode changed: ', displayMode);\n        return;\n    }, [displayMode]);\n    useEffect(() => {\n        setLangPack(Languages[localization.locale]);\n        return;\n    }, [localization.locale]);\n    useEffect(() => {\n        console.log('current folder:', currentFolder);\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) {\n            getPhotos({ group_id: currentFolder, current_page: page + 1, page_size });\n        }\n        return;\n    }, [currentFolder]);\n\n    useEffect(() => {\n        console.log('I want pics');\n        if (!loginData) return navigate('/');\n        getFolders();\n        tableFormatter();\n        return () => {\n            console.log('I leave pics');\n        };\n    }, []);\n\n    //____________一些函数_______________________________________________\n\n    let folderRefreshTimer;\n    async function manageFolder(operation, groupObj) {\n        let paramObj = ma.photoFolderManageQuery({ operation, groupObj });\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoFolderManageCheck(msg);\n        let { status, result } = res.response;\n        queryResult(status, 'ok');\n        if (status) setTimeout(getFolders, 1234);\n        return result;\n    }\n    async function getFolders(obj) {\n        let paramObj = ma.photoFolderQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoFolderCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        clearTimeout(uploadTimer);\n        uploadTimer = setTimeout(() => {\n            let newArr = result.map((item) => {\n                return { ...item, id: String(item.id) };\n            });\n            setFolderArr(newArr);\n        }, 1234);\n        return result;\n    }\n    async function getPhotos(obj) {\n        if (!obj) obj = {};\n        let paramObj = ma.photoQuery(obj);\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(false, result);\n        setPhotoArr(result);\n        return result;\n    }\n    async function uploadPhotos(photoFile) {\n        let paramObj = ma.photoUploadQuery({ file_name: photoFile.name, image_bytes: photoFile, group_id: currentFolder });\n        let msg = await fetchAPI(paramObj);\n        if (!msg.response.status) return queryResult(false, msg.response.result);\n        let res = ma.photoUploadCheck(msg);\n        let { status, result } = res.response;\n        if (!status) return queryResult(status, result);\n        queryResult(status, langPack.action.uploadSuccess);\n        if (folderRefreshTimer !== undefined) clearTimeout(folderRefreshTimer);\n        folderRefreshTimer = setTimeout(() => {\n            getPhotos({ group_id: currentFolder });\n        }, 2000);\n        return result;\n    }\n\n    const handleChangePage = (newPage) => {\n        setPage(newPage);\n        let obj = { current_page: newPage + 1, page_size };\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) obj.group_id = currentFolder;\n        getPhotos(obj);\n    }; //翻页\n    const handleChangeRowsPerPage = (newSize) => {\n        setPage_size(newSize);\n        let obj = { current_page: page + 1, page_size: newSize };\n        if (currentFolder && currentFolder !== langPack.folder.currentFolder) obj.group_id = currentFolder;\n        getPhotos(obj);\n    }; //页面大小调整\n    const onRowClick = (obj, e) => {\n        // let { id, row } = obj;\n    }; //单元格点击\n\n    let onPhotoSelection = (selectedArr) => {\n        if (onPhotoSelected) onPhotoSelected(selectedArr);\n        console.log(selectedArr.length + ' selected');\n        return;\n    }; //选择图片\n\n    //____________ Table functions ___________________________________________________\n    function tableFormatter(obj) {\n        const columns = [\n            {\n                field: 'imgWithURL',\n                headerName: langPack.table.tableHeader,\n                flex: 1,\n                minWidth: 50,\n                valueGetter: ({ row }) => row,\n                valueFormatter: ({ value }) => value.url,\n                renderCell: ({ value }) => (\n                    <a href={value.url} target=\"_blank\">\n                        <img {...srcset(value.url, 100, 100, 1, 1)} alt=\"mainPic\" />\n                    </a>\n                )\n            },\n            {\n                field: 'file_name',\n                flex: 1,\n                headerName: langPack.table.file_name\n            },\n            {\n                field: 'reference_count',\n                flex: 1,\n                headerName: langPack.table.reference_count\n            },\n            {\n                field: 'gmt_modified',\n                flex: 1,\n                headerName: langPack.table.gmt_modified\n            }\n        ];\n        if (obj) {\n            //let { score } = obj;\n        }\n        setTableColumns(columns);\n    }\n    //____________JSX函数_______________________________________________\n\n    return (\n        <MainCard title=\"Photos --图库\">\n            <PhotoFolder\n                folderArr={folderArr}\n                currentFolder={currentFolder}\n                setCurrentFolder={setCurrentFolder}\n                manageFolder={manageFolder}\n                uploadPhotos={uploadPhotos}\n                setPage={setPage}\n                displayMode={displayMode}\n                setDisplayMode={setDisplayMode}\n                langPack={langPack}\n            />\n            {displayMode === 'table' ? (\n                <PhotoTable\n                    tableRows={photoArr}\n                    tableColumns={tableColumns}\n                    page={page}\n                    page_size={page_size}\n                    localization={localization}\n                    handleChangePage={handleChangePage}\n                    handleChangeRowsPerPage={handleChangeRowsPerPage}\n                    onRowClick={onRowClick}\n                    onPhotoSelection={onPhotoSelection}\n                    langPack={langPack}\n                />\n            ) : (\n                <>\n                    <Pagination\n                        page={page}\n                        page_size={page_size}\n                        handleChangePage={handleChangePage}\n                        handleChangeRowsPerPage={handleChangeRowsPerPage}\n                        langPack={langPack}\n                    />\n                    <PhotoGallery\n                        photoArr={photoArr}\n                        rowHeight={150}\n                        photoCols={photoCols}\n                        photoSizing={{ width: 100, height: 100 }}\n                        currentFolder={currentFolder}\n                        langPack={langPack}\n                    />\n                </>\n            )}\n        </MainCard>\n    );\n};\n\nApp.propTypes = {\n    onPhotoSelected: PropTypes.func\n};\n\nexport default App;\n"],"sourceRoot":""}