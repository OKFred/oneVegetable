{"version":3,"sources":["views/product/Languages.js","views/product/component/productFn.js","views/product/component/Confirmation.js","views/product/component/EditStep.js","views/product/component/PhotoGallery.js","views/product/component/ProductSummary.js","views/product/component/ProductAttribute.js","views/product/component/ProductService.js","views/product/component/ProductRTS.js","views/product/component/ProductDescription.js","views/product/ProductEdit.js"],"names":["Languages","enUS","folder","currentFolder","needFolderName","addNewFolder","folderNull","dataNull","folderRequired","table","tableHeader","categoryName","productId","photos","subject","status","display","id","is_rts","is_specific","owner_member_display_name","product_type","smart_edit","attributes","keywords","keyword1","keyword2","keyword3","price","payment_methods","min_order_quantity","day","unit_type","logistic_mode","shipping_port","packaging_description","gmt_create","gmt_modified","score","tag","customInfo","tableToolbar","menuHide","menuShow","productScore","productDisplayOn","productDisplayOff","productUpdate","productEdit","productCopy","form","KeyInformation","ProductAttributes","productService","productType","rtsProduct","sourcingProduct","category","attributeMissing","attributeDuplicated","pleaseSelect","selectOrInput","measure","pieces","steps","first","second","finally","previous","next","complete","redirecting","addProduct","columnNotFound","keyAttributeMissing","productSheetEmpty","productCategoryNeeded","productGroupNeeded","productSubjectNeeded","productKeywordNeeded","productDetailsNeeded","productPriceUnitNeeded","productLogisticsModeNeeded","productPortNeeded","productPackagingDescriptionNeeded","productCustomizationNeeded","productTypeNeeded","productWeightNeeded","productPaymentMethodsNeeded","productMeasureNeeded","productSupplyAbilityNeeded","uneditable","productIdError","categoryError","editPrice","editPeriod","editAll","editDone","nullNotAllowed","MOQError","PriceError","add","remove","cloud","import","template","post","bulkUpload","bulkUploadGuide","bulkUploadTemplate","bulkUploadeTemplateDetails","bulkUploadProcesses","bulkUploadSheetMalformed","startPosting","selectFromCloud","uploadProductSheet","choosePhotos","uploadPhotos","removePhotos","toggleSmartEdit","productDescriptionTip","mainPhotoRequired","descriptionOverflow","panel1","panel2","panel3","panel4","addAttributes","clearAttributes","modificationNull","addCustomInfo","clearCustomInfo","modificationDone","duplicationLimitation","numberOnly","addSuccess","updateSuccess","duplicateSuccess","uploadSuccess","productScoreError","basic","potential","super","top","common","yes","no","success","netFail","zhCN","ProductFn","xml","editMode","real_product_id","cat_id","locale","a","queryMethod","ma","productSchemaAddQuery","checkMethod","productSchemaAddCheck","productSchemaUpdateQuery","productSchemaUpdateCheck","xmldom","DOMParser","parseFromString","Array","from","querySelectorAll","forEach","node","children","length","outerHTML","params","language","product_id","paramObj","param_product_top_publish_request","JSON","stringify","fetchAPI","msg","response","res","xmlGetField","schema","querySelector","insideCheck","nodeArr","newSubArr","subArr","index","subObj","fieldCheck","options","values","innerHTML","value","push","optionNodes","valueNodes","resultObj","attributeObj","getAttributeObj","generalCheck","type","schemaSubmit","schemaChecker","productObj","Object","keys","xmlArr","map","obj","xmlString","firstChild","replace","encodeNonASCII","schemaMaker","pureFunction","imageObjMaker","fieldObj","_values","key","sort","b","Number","exec","imageObjChecker","imageObj","valueArr","newObj","newArr","filter","valueTagName","valueTemplates","valueSaver","newXml","append","productGroupObjMaker","productGroupObjChecker","productGroupObj","valueTemplate","productTypeObjMaker","_options","displayName","find","productTypeObjChecker","productTypeObj","subjectObjMaker","subjectObjChecker","subjectObj","trim","keywordObjMaker","join","keywordObjChecker","keywordObj","keyword","MOQObjMaker","MOQObjChecker","MOQObj","paymentMethodObjMaker","paymentMethodObjChecker","paymentMethodObj","predefinedMethodTemplate","valueStr","priceUnitObjMaker","priceUnitObjChecker","priceUnitObj","valueObj","portObjMaker","portObjChecker","portObj","logisticsObjMaker","logisticsObjChecker","logisticsModeObj","packaingDescriptionObjMaker","packaingDescriptionObjChecker","packagingDescriptionObj","priceObjMaker","quantity","priceObjChecker","priceObj","priceArr","i","ladderPeriodObjMaker","ladderPeriodObjChecker","ladderPeriodObj","supplyAbilityObjMaker","supplyAbilityObjChecker","supplyAbilityObj","newField","supply_number","time_unit","quantity_unit","attributeObjMaker","name","checkValues","arr","inputValue","undefined","str","newValues","checkOptions","optionObj","test","newOptions","attributeObjChecker","attributeSaver","cleaner","saveAttribute","invalidList","elementValues","document","createElement","elementValue","setAttribute","innerText","String","mainAttributeObj","myOptions","option","subOptionObj","subOption","customStatusObjMaker","customStatusObjChecker","customStatusObj","customObjMaker","optionArr","customObjChecker","customObj","isNaN","shippingTemplateObjMaker","shippingTemplateObjChecker","shippingTemplateObj","weightObjMaker","weightObjChecker","weightObj","measureObjMaker","ranking","indexOf","measureObjChecker","measureObj","split","hasError","num","keyArr","allValueTemplates","saleTypeObjMaker","saleTypeObjChecker","saleTypeObj","batchObjMaker","batchObjChecker","batchObj","descriptionObjMaker","decodeHTMLEntity","descriptionObjChecker","descriptionObj","descriptionTypeObjMaker","descriptionTypeObjChecker","descriptionTypeObj","Confirmation","langPack","productModified","showDetails","modificationSubmission","navigate","useNavigate","modifiedKeys","variant","startIcon","onClick","EditStep","activeStep","setActiveStep","useState","Stepper","label","Step","StepLabel","ButtonGroup","color","disableElevation","sx","flexDirection","pt","paddingBottom","Button","disabled","prevActiveStep","mr","Box","flex","PhotoSelector","Loadable","lazy","PhotoGallery","productGroupSaver","paymentMethodSaver","logisticsSaver","priceSaver","periodSaver","productTypeSaver","xmlSchema","productFn","onModified","photoCols","rowHeight","setImageObj","dialogOpen","setDialogOpen","onImageChange","method","imageArr","queryResult","useEffect","scImages","ImageList","cols","marginTop","marginBottom","gap","ImageListItem","rows","src","alt","loading","ImageListItemBar","background","title","position","actionIcon","Tooltip","IconButton","onDoubleClick","StarBorder","actionPosition","right","size","deletedImage","splice","onPhotoReorder","SwitchLeft","height","CloudQueue","onPhotoConfirm","url","App","group_id","console","log","setProductGroupObj","setProductTypeObj","setSubjectObj","setKeywordObj","setPaymentMethodObj","setPriceUnitObj","setMOQObj","setPriceObj","priceEdit","setPriceEdit","setLadderPeriodObj","periodEdit","setPeriodEdit","setPortObj","setLogisticsObj","setPackagingDescriptionObj","setSupplyAbilityObj","onMOQChanged","productGroup","market","productTitle","productKeywords","minOrderQuantity","paymentMethod","priceUnit","ladderPrice","ladderPeriod","port","logisticsMode","wholeSalePkgDesc","supply","onProductGroupChange","getProductGroupObj","onProductTypeChange","getProductTypeObj","onPriceSave","onPriceChange","mode","pop","setter","prev","onPeriodSave","onPeriodChange","onSupplyAbilityChange","TextField","margin","fullWidth","Typography","defaultValue","onBlur","e","onSubjectChange","target","onKeywordChange","Autocomplete","multiple","limitTags","disableCloseOnSelect","onChange","getOptionLabel","isOptionEqualToValue","renderTags","getTagProps","Chip","renderOption","props","selected","Checkbox","style","marginRight","checked","renderInput","minWidth","placeholder","onPriceUnitChange","maxWidth","InputProps","endAdornment","InputAdornment","onPortChange","onPackagingDescriptionChange","Table","TableHead","TableRow","TableCell","Check","lastPrice","TableBody","border","hover","alignItems","component","scope","Add","Remove","lastObj","setAttributeObj","addAttribute","setAddAttribute","optionSelected","setOptionSelected","icbuCatProp","onAttributeConfirm","onAttributeChange","paddingTop","newValueArr","newValue","Cancel","Divider","customSaver","setCustomObj","addCustom","setAddCustom","customSelected","setCustomSelected","setCustomStatusObj","customizedServices","productLightCustom","onCustomOptionChange","onCustomConfirm","onCustomStatusChange","freeSolo","onInputChange","optionFound","onCustomOptionConfirm","finalValue","onCustomChange","setShippingTemplateObj","setWeightObj","setMeasureObj","setSaleTypeObj","setBatchObj","shippingTemplateId","pkgWeight","pkgMeasure","saleType","batchNum","onShippingTemplateChange","onWeightChange","onMeasureChange","onSaleTypeChange","onBatchChange","Photo","ProductDetail","localization","productInfo","editor","useRef","iconToggleMagic","iconCloudImage","setDescriptionObj","setDescriptionTypeObj","cloudImageArr","setCloudImageArr","smartEdit","setSmartEdit","onDescriptionChange","onDescriptionTypeChange","superText","productDescType","description","getDescriptionObj","current","setTimeout","body","onDialogClose","submit","photoFile","photoUploadQuery","file_name","image_bytes","result","photoUploadCheck","imageReplacer","imgs","workplace","img","photobank_url","justifyContent","Dialog","onClose","open","DialogTitle","onPhotoSelected","Build","ref","Cloud","config","enter","defaultActionOnPaste","toolbarAdaptive","toolbarButtonSize","imageProcessor","replaceDataURIToBlobIdInView","buttons","icon","tooltip","textNearby","html","htmlCodes","line","events","paste","items","clipboardData","item","match","file","getAsFile","beforePasteInsert","text","tabIndex","newContent","useSelector","state","globalization","setLangPack","baseData","loginData","expanded","setExpanded","useMediaQuery","useTheme","breakpoints","down","urlParams","URLSearchParams","location","pathname","setProductInfo","setXmlSchema","get","setRtsProduct","setCat_id","productDetailQuery","productDetailCheck","category_id","rts","productSchemaQuery","productSchemaCheck","schemaResult","productSchemaRenderQuery","productSchemaRenderCheck","makeProductInfo","makeProductExample","getProductInfo","handleAccordionChange","panel","event","isExpanded","MainCard","Accordion","AccordionSummary","expandIcon","ExpandMore","width","flexShrink","AccordionDetails","ProductSummary","ProductAttribute","ProductService","ProductRTS","ProductDescription"],"mappings":"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","file":"static/js/18.6b5f45c3.chunk.js","sourcesContent":["let Languages = {\r\n    enUS: {\r\n        folder: {\r\n            currentFolder: 'please select',\r\n            needFolderName: 'please input name for new folder',\r\n            addNewFolder: 'add new folder',\r\n            folderNull: 'folder not found',\r\n            dataNull: 'data not found',\r\n            folderRequired: 'please select a folder to continue'\r\n        },\r\n        table: {\r\n            tableHeader: 'Products',\r\n            categoryName: 'category name',\r\n            productId: 'product id',\r\n            photos: 'photos',\r\n            subject: 'subject',\r\n            status: 'status',\r\n            display: 'display',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: 'specific',\r\n            owner_member_display_name: 'owner',\r\n            product_type: 'type',\r\n            smart_edit: 'smart edit',\r\n            attributes: 'attributes',\r\n            keywords: 'keywords',\r\n            keyword1: 'keyword1',\r\n            keyword2: 'keyword2',\r\n            keyword3: 'keyword3',\r\n            price: 'price',\r\n            payment_methods: 'payment methods',\r\n            min_order_quantity: 'MOQ(min. order quantity)',\r\n            day: 'day',\r\n            unit_type: 'unit type',\r\n            logistic_mode: 'logistic mode',\r\n            shipping_port: 'shipping port',\r\n            packaging_description: 'packaging description',\r\n            gmt_create: 'date create',\r\n            gmt_modified: 'date modified',\r\n            score: 'score',\r\n            tag: 'tag',\r\n            customInfo: 'custom info'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: 'hide menu',\r\n            menuShow: 'show menu',\r\n            productScore: 'scores',\r\n            productDisplayOn: 'list',\r\n            productDisplayOff: 'delist',\r\n            productUpdate: 'update',\r\n            productEdit: 'edit',\r\n            productCopy: 'copy'\r\n        },\r\n        form: {\r\n            KeyInformation: 'key information',\r\n            ProductAttributes: 'product attributes',\r\n            productService: 'product service',\r\n            productType: 'product type',\r\n            rtsProduct: 'ready-to-ship product',\r\n            sourcingProduct: 'inquiry/quotation product',\r\n            subject: '128 letters max.',\r\n            category: 'Select product category',\r\n            keywords: '3 keywords max. Comma(,) separated',\r\n            price: 'set price (range)',\r\n            payment_methods: 'payment methods such as T/T, L/C, etc.',\r\n            min_order_quantity: 'optional',\r\n            attributes: 'add or delete',\r\n            attributeMissing: 'attribute missing',\r\n            attributeDuplicated: 'attribute duplicated',\r\n            pleaseSelect: 'please select',\r\n            selectOrInput: 'select or input',\r\n            measure: 'length * width * height (cm)',\r\n            pieces: 'pieces'\r\n        },\r\n        steps: {\r\n            first: 'Edit Attributes',\r\n            second: 'Edit Contents',\r\n            finally: 'Preview & Publish',\r\n            previous: 'Previous',\r\n            next: 'Next',\r\n            complete: 'Complete',\r\n            redirecting: 'Redirecting...',\r\n            addProduct: 'New',\r\n            columnNotFound: 'Column not found',\r\n            keyAttributeMissing: 'product key attribute missing',\r\n            productSheetEmpty: 'Product sheet is empty',\r\n            productCategoryNeeded: 'Please select a specific category',\r\n            productGroupNeeded: 'Please select a product group',\r\n            productSubjectNeeded: 'Please input product subject',\r\n            productKeywordNeeded: 'Please input product keywords',\r\n            productDetailsNeeded: 'Product Details Needed',\r\n            productPriceUnitNeeded: 'Please input price unit',\r\n            productLogisticsModeNeeded: 'Please input logistics mode',\r\n            productPortNeeded: 'Please input shipping port',\r\n            productPackagingDescriptionNeeded: 'Please input packaging description',\r\n            productCustomizationNeeded: 'Please input Product Customization MOQ',\r\n            productTypeNeeded: 'Please select product type',\r\n            productWeightNeeded: 'Please input product weight',\r\n            productPaymentMethodsNeeded: 'Please select payment methods',\r\n            productMeasureNeeded: 'Please input product length * width * height',\r\n            productSupplyAbilityNeeded: 'Please input supply ability',\r\n            uneditable: 'product is currently uneditable',\r\n            productIdError: 'product id error, pls go back & try again',\r\n            categoryError: 'category error, pls try again',\r\n            editPrice: 'Edit Price',\r\n            editPeriod: 'Edit Production Period',\r\n            editAll: 'Edit All',\r\n            editDone: 'Edit Done',\r\n            nullNotAllowed: 'empty value is not allowed',\r\n            MOQError: 'MOQ should be greater than the previous one',\r\n            PriceError: 'price should be smaller than the previous one',\r\n            add: 'Add',\r\n            remove: 'Remove',\r\n            cloud: 'Cloud',\r\n            import: 'Import',\r\n            template: 'Template',\r\n            post: 'Post',\r\n            bulkUpload: 'Or, you want bulk upload...',\r\n            bulkUploadGuide: 'Read the tips 👉',\r\n            bulkUploadTemplate: 'Choose a template if you need some shared data',\r\n            bulkUploadeTemplateDetails: 'select shared details from the templeate',\r\n            bulkUploadProcesses: '①Export the template and edit... Do NOT use any comma(,) ② Import ③ Select photos ④ Post ',\r\n            bulkUploadSheetMalformed: 'the sheet uploaded is malformed',\r\n            startPosting: 'Start Posting Products',\r\n            selectFromCloud: 'Select from Cloud',\r\n            uploadProductSheet: 'Upload Product Sheet',\r\n            choosePhotos: 'Choose Photos',\r\n            uploadPhotos: 'Upload Photos',\r\n            removePhotos: 'double click to remove the photo',\r\n            toggleSmartEdit: 'toggle smart edit',\r\n            productDescriptionTip: 'Pictures from Smart Editing are not supported. Remove pictures if you want to modify',\r\n            mainPhotoRequired: 'Need at least one photo',\r\n            descriptionOverflow: 'description length shall be smaller than 60k letters',\r\n            panel1: 'subject, keywords, price, shipping...',\r\n            panel2: 'all kinds of attributes...(attributes may NOT be updated when posting new products for the first time. Try the second time if have to',\r\n            panel3: 'customized service if the MOQ is met...',\r\n            panel4: 'for trade assurance users exclusively...',\r\n            addAttributes: 'Add Attributes',\r\n            clearAttributes: 'Clear Attributes',\r\n            modificationNull: 'No modification made',\r\n            addCustomInfo: 'Add Custom Info',\r\n            clearCustomInfo: 'Clear Custom Info',\r\n            modificationDone: 'Will submit the following modifications:',\r\n            duplicationLimitation: 'Products with smart editing cannot duplicate its description',\r\n            numberOnly: 'Please input number only',\r\n            addSuccess: 'Product added successfully',\r\n            updateSuccess: 'Product updated successfully',\r\n            duplicateSuccess: 'product duplicated successfully',\r\n            uploadSuccess: 'Upload Success',\r\n            productScoreError: 'no score found'\r\n        },\r\n        productScore: {\r\n            basic: 'Basic',\r\n            potential: 'Potential',\r\n            super: 'Super',\r\n            top: 'Top'\r\n        },\r\n        common: {\r\n            yes: 'OK',\r\n            no: 'Cancel',\r\n            success: 'Success',\r\n            netFail: 'request failed'\r\n        }\r\n    },\r\n    zhCN: {\r\n        folder: {\r\n            currentFolder: '请选择',\r\n            needFolderName: '请填写文件夹名',\r\n            addNewFolder: '新建文件夹',\r\n            folderNull: '文件夹不存在',\r\n            dataNull: '数据不存在',\r\n            folderRequired: '请选择文件夹'\r\n        },\r\n        table: {\r\n            tableHeader: '产品',\r\n            categoryName: '类目',\r\n            productId: '产品 id',\r\n            photos: '产品图',\r\n            subject: '标题',\r\n            status: '审核状态',\r\n            display: '上架状态',\r\n            id: 'id',\r\n            is_rts: 'RTS',\r\n            is_specific: '规格品',\r\n            owner_member_display_name: '负责人',\r\n            product_type: '商品类型',\r\n            smart_edit: '智能编辑',\r\n            attributes: '属性',\r\n            keywords: '关键词',\r\n            keyword1: '关键词1',\r\n            keyword2: '关键词2',\r\n            keyword3: '关键词3',\r\n            price: '价格',\r\n            payment_methods: '支付方式',\r\n            min_order_quantity: '最小起订量(MOQ)',\r\n            day: '天',\r\n            unit_type: '单位',\r\n            logistic_mode: '物流方式',\r\n            shipping_port: '发货地',\r\n            packaging_description: '包装描述',\r\n            gmt_create: '创建日期',\r\n            gmt_modified: '修改日期',\r\n            score: '产品分',\r\n            tag: '标签',\r\n            customInfo: '定制信息'\r\n        },\r\n        tableToolbar: {\r\n            menuHide: '隐藏菜单',\r\n            menuShow: '显示菜单',\r\n            productScore: '产品分',\r\n            productDisplayOn: '上架',\r\n            productDisplayOff: '下架',\r\n            productUpdate: '更新',\r\n            productEdit: '编辑',\r\n            productCopy: '复制'\r\n        },\r\n        form: {\r\n            KeyInformation: '基本信息',\r\n            ProductAttributes: '产品属性',\r\n            productService: '产品服务',\r\n            productType: '产品类型',\r\n            rtsProduct: 'RTS 产品',\r\n            sourcingProduct: '询盘品',\r\n            subject: '128 字符以内',\r\n            category: '选择产品类目',\r\n            keywords: '最多三个关键词，用英文逗号(,)分隔',\r\n            price: '设置价格(区间)',\r\n            payment_methods: '支付方式，例如：T/T，L/C，等',\r\n            min_order_quantity: '选填',\r\n            attributes: '可增可减',\r\n            attributeMissing: '属性缺失',\r\n            attributeDuplicated: '属性重复',\r\n            pleaseSelect: '请选择',\r\n            selectOrInput: '选择或输入',\r\n            measure: '长*宽*高 (cm)',\r\n            pieces: '件'\r\n        },\r\n        steps: {\r\n            first: '属性编辑',\r\n            second: '详情编辑',\r\n            finally: '预览&发布',\r\n            previous: '上一步',\r\n            next: '下一步',\r\n            complete: '完成',\r\n            redirecting: '正在跳转...',\r\n            addProduct: '发品',\r\n            columnNotFound: '未找到对应列',\r\n            keyAttributeMissing: '发品关键属性缺失',\r\n            productSheetEmpty: '产品表没有数据',\r\n            productCategoryNeeded: '请选择详细的产品类目',\r\n            productGroupNeeded: '请选择产品分组',\r\n            productSubjectNeeded: '请输入产品名称',\r\n            productKeywordNeeded: '请输入产品关键词',\r\n            productDetailsNeeded: '请输入产品详情',\r\n            productPriceUnitNeeded: '请选择计量单位',\r\n            productLogisticsModeNeeded: '请选择物流方式',\r\n            productPortNeeded: '请输入海运港口',\r\n            productPackagingDescriptionNeeded: '请输入包装描述',\r\n            productCustomizationNeeded: '请输入产品定制信息',\r\n            productTypeNeeded: '请选择产品类型',\r\n            productWeightNeeded: '请输入产品重量',\r\n            productPaymentMethodsNeeded: '请输入支付方式',\r\n            productMeasureNeeded: '请输入长宽高',\r\n            productSupplyAbilityNeeded: '请输入供货能力',\r\n            uneditable: '当前产品不可编辑',\r\n            productIdError: '产品 id 错误，请返回重试',\r\n            categoryError: '类目有误，请重新选择',\r\n            editPrice: '编辑价格',\r\n            editPeriod: '编辑发货期',\r\n            editAll: '编辑全部',\r\n            editDone: '编辑完成',\r\n            nullNotAllowed: '不能为空',\r\n            MOQError: 'MOQ值须大于前一个值',\r\n            PriceError: '价格值须小于前一个值',\r\n            add: '添加',\r\n            remove: '删除',\r\n            cloud: '图库',\r\n            import: '导入',\r\n            template: '模板',\r\n            post: '发品',\r\n            bulkUpload: '或者你想要批量上传...',\r\n            bulkUploadGuide: '请参考提示操作 👉',\r\n            bulkUploadTemplate: '可选模板作为共享信息导入',\r\n            bulkUploadeTemplateDetails: '选择发品参考中需要共享的信息',\r\n            bulkUploadProcesses: ' ① 导出表格并编辑。不要使用英文逗号【 , 】②导入表格 ③ 选图 ④发布 ',\r\n            bulkUploadSheetMalformed: '表格列数不一致',\r\n            startPosting: '开始发品',\r\n            selectFromCloud: '从云端选择',\r\n            uploadProductSheet: '上传产品表',\r\n            choosePhotos: '选择图片',\r\n            uploadPhotos: '上传图片',\r\n            removePhotos: '双击移除图片',\r\n            toggleSmartEdit: '智能编辑切换',\r\n            productDescriptionTip: '提示: 来自【智能编辑】的图片无法编辑，如需修改，请移除所有旧图先',\r\n            mainPhotoRequired: '需要保留至少一张主图',\r\n            descriptionOverflow: '描述长度不能超过6万字符',\r\n            panel1: '标题，关键词，价格，发货...',\r\n            panel2: '各类属性...（发新品初次编辑时部分属性可能无法提交，可第二次再填）',\r\n            panel3: '定制服务...',\r\n            panel4: '信保用户专属...',\r\n            addAttributes: '添加属性',\r\n            clearAttributes: '移除空白属性',\r\n            addCustomInfo: '添加自定义信息',\r\n            clearCustomInfo: '清理自定义信息',\r\n            modificationNull: '没有任何修改',\r\n            modificationDone: '将提交如下内容:',\r\n            duplicationLimitation: '智能编辑的产品暂时无法复制其详情',\r\n            numberOnly: '请输入数字',\r\n            uploadSuccess: '上传成功',\r\n            addSuccess: '产品添加成功',\r\n            updateSuccess: '产品更新成功',\r\n            duplicateSuccess: '产品复制成功',\r\n            productScoreError: '产品分未查到'\r\n        },\r\n        productScore: {\r\n            basic: '低质品',\r\n            potential: '普通品',\r\n            super: '实力优品',\r\n            top: '精品'\r\n        },\r\n        common: {\r\n            yes: '确定',\r\n            no: '取消',\r\n            success: '操作成功',\r\n            netFail: '请求失败'\r\n        }\r\n    }\r\n};\r\n\r\nexport { Languages };\r\n","const ProductFn = (() => {\r\n    async function schemaSubmit(xml, editMode, real_product_id, cat_id, locale) {\r\n        let queryMethod;\r\n        let checkMethod;\r\n        if (editMode === 'add') {\r\n            queryMethod = ma.productSchemaAddQuery;\r\n            checkMethod = ma.productSchemaAddCheck;\r\n        } else {\r\n            queryMethod = ma.productSchemaUpdateQuery;\r\n            checkMethod = ma.productSchemaUpdateCheck;\r\n        }\r\n        let xmldom = new DOMParser().parseFromString(xml, 'text/xml');\r\n        Array.from(xmldom.querySelectorAll('itemSchema > field > rules, options, label-group, fields')).forEach((node) => node.remove());\r\n        Array.from(xmldom.children[0].children).forEach((node) => (!node.children.length ? node.remove() : ''));\r\n        xml = xmldom.children[0].outerHTML;\r\n        let params = {\r\n            xml,\r\n            cat_id,\r\n            language: locale === 'zh' ? 'zh' : 'en_US'\r\n        };\r\n        if (real_product_id) params.product_id = real_product_id;\r\n        let paramObj = queryMethod({\r\n            param_product_top_publish_request: JSON.stringify(params)\r\n        });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return msg;\r\n        let res = checkMethod(msg);\r\n        return res;\r\n    } //发品（添加/修改）\r\n\r\n    function schemaChecker(productObj) {\r\n        if (!Object.keys(productObj).length) return;\r\n        let xmlArr = Object.values(productObj).map((obj) => obj.xml);\r\n        let xmlString = '<itemSchema>';\r\n        xmlArr.forEach((xml) => (xmlString += xml.outerHTML));\r\n        xmlString += '</itemSchema>';\r\n        let xmldom = new DOMParser().parseFromString(xmlString, 'text/xml').firstChild; //创建XML副本\r\n        Array.from(xmldom.querySelectorAll('field > rules')).forEach((node) => node.remove());\r\n        xmlString = xmldom.outerHTML.replace(/ xmlns=\"http:\\/\\/www.w3.org\\/1999\\/xhtml\"/gi, '');\r\n        xmlString = xmlString.replace(/inputvalue/g, 'inputValue');\r\n        xmlString = xmlString.encodeNonASCII(); //非ASCII字符须编码\r\n        return xmlString;\r\n    }\r\n\r\n    function schemaMaker(xml, pureFunction) {\r\n        let schema = new DOMParser().parseFromString(xml, 'text/xml');\r\n        if (!pureFunction) ProductFn.schema = schema;\r\n        const errorNode = schema.querySelector('parsererror');\r\n        if (errorNode) return null;\r\n        return schema;\r\n    } //构造编辑框架\r\n\r\n    function xmlGetField(id, schema) {\r\n        if (!schema) schema = ProductFn.schema;\r\n        if (!schema) return null;\r\n        let node = ProductFn.schema.querySelector(`itemSchema > field[id=\"${id}\"]`);\r\n        if (!node) return null;\r\n        return insideCheck([node])[0];\r\n    } //获取单个字段信息\r\n\r\n    function insideCheck(nodeArr) {\r\n        let newSubArr = [];\r\n        let subArr = Array.from(nodeArr);\r\n        for (let index = 0; index < subArr.length; index++) {\r\n            let xml = subArr[index];\r\n            let subObj = fieldCheck(xml);\r\n            if (!subObj) subObj = {};\r\n            subObj.xml = xml;\r\n            if (subObj.options && subObj.options.length) subObj.options = insideCheck(subObj.options);\r\n            if (subObj.values && subObj.values.length) subObj.values = insideCheck(subObj.values);\r\n            if (xml.innerHTML && !xml.children.length) subObj.value = xml.innerHTML;\r\n            newSubArr.push(subObj);\r\n        }\r\n        return newSubArr;\r\n    } //获取内部数据\r\n\r\n    function generalCheck(node) {\r\n        let attributeObj = node.getAttributeObj();\r\n        if (!attributeObj) attributeObj = {};\r\n        let resultObj = { ...attributeObj, xml: node };\r\n        return resultObj;\r\n    } //获取基本信息\r\n\r\n    function fieldCheck(node) {\r\n        let resultObj = generalCheck(node);\r\n        let { type } = resultObj;\r\n        if (!type) return resultObj;\r\n        let optionNodes;\r\n        let valueNodes;\r\n        if (type === 'multiComplex') {\r\n            optionNodes = node.querySelectorAll('fields > field');\r\n            valueNodes = node.querySelectorAll('complex-values > field');\r\n        } else if (type === 'complex') {\r\n            optionNodes = node.querySelectorAll('fields > field');\r\n            valueNodes = node.querySelectorAll('complex-value > field');\r\n        } else if (type === 'multiCheck') {\r\n            optionNodes = node.querySelectorAll('options > option');\r\n            valueNodes = node.querySelectorAll('values > value');\r\n        } else if (type === 'multiInput') {\r\n            valueNodes = node.querySelectorAll('values > value');\r\n        } else if (type === 'singleCheck') {\r\n            optionNodes = node.querySelectorAll('options > option');\r\n            valueNodes = node.querySelectorAll('value');\r\n        } else if (type === 'input') {\r\n            valueNodes = node.querySelectorAll('value');\r\n        }\r\n        if (optionNodes && optionNodes.length) resultObj.options = optionNodes;\r\n        if (valueNodes && valueNodes.length) resultObj.values = valueNodes;\r\n        return resultObj;\r\n    } //获取选项和值\r\n\r\n    function imageObjMaker(schema) {\r\n        let fieldObj = xmlGetField('scImages', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .map((obj) => {\r\n                    let key = obj.id;\r\n                    let value = obj.values[0].value.replace(/_.*/, ''); //换高清图\r\n                    return { key, value };\r\n                })\r\n                .sort((a, b) => Number(/\\d/.exec(a.key)[0]) - Number(/\\d/.exec(b.key)[0])); //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取产品名称\r\n\r\n    function imageObjChecker(imageObj, valueArr) {\r\n        if (!valueArr.length) return null; //校验\r\n        if (valueArr.length > 6) valueArr.length = 6; //max\r\n        let newObj = { ...imageObj };\r\n        let newArr = valueArr.map((obj, index) => {\r\n            return {\r\n                ...obj,\r\n                key: `scImages_${index}`,\r\n                value: obj.value.replace('https:', '')\r\n            };\r\n        }); //重新编号\r\n        newArr = newArr.filter((obj) => obj.id); // \"fileId必须填写;\" 否则报错\r\n        newObj._values = newArr;\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        newArr.forEach((obj, index) => {\r\n            valueTemplates[index].innerHTML = `<value fileId=\"${obj.id}\">${obj.value}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //通知父组件\r\n    } //产品图片修改\r\n\r\n    function productGroupObjMaker(schema) {\r\n        let fieldObj = xmlGetField('productGroup', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].values[0].value }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取产品分组\r\n\r\n    function productGroupObjChecker(productGroupObj, value) {\r\n        if (!value) return null; //productGroupNeeded\r\n        let newObj = { ...productGroupObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplate = newField.querySelector('fields > field#first_group_id'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueTemplate.innerHTML = `<value>${value}</value>`; //填值\r\n        valueSaver += valueTemplate.outerHTML;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //产品分组修改\r\n\r\n    function productTypeObjMaker(schema) {\r\n        let fieldObj = xmlGetField('market', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        }\r\n        return fieldObj;\r\n    } //获取产品类型\r\n\r\n    function productTypeObjChecker(productTypeObj, value) {\r\n        let newObj = { ...productTypeObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //产品类型修改\r\n\r\n    function subjectObjMaker(schema) {\r\n        let fieldObj = xmlGetField('productTitle', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取产品名称\r\n\r\n    function subjectObjChecker(subjectObj, value) {\r\n        if (!value || !value.trim()) return null; //productSubjectNeeded\r\n        let newObj = { ...subjectObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //产品名称修改\r\n\r\n    function keywordObjMaker(schema) {\r\n        let fieldObj = xmlGetField('productKeywords', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values.map((obj) => obj.values[0].value).join(',') }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取产品关键词\r\n\r\n    function keywordObjChecker(keywordObj, valueArr) {\r\n        if (!valueArr.length) return null; //productKeywordNeeded\r\n        if (valueArr.length > 3) valueArr.length = 3; //productKeywordMax\r\n        let value = valueArr.join(',');\r\n        let newObj = { ...keywordObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueArr.forEach((keyword, index) => {\r\n            valueTemplates[index].innerHTML = `<value>${keyword}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //关键词修改\r\n\r\n    function MOQObjMaker(schema) {\r\n        let fieldObj = xmlGetField('minOrderQuantity', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: Number(fieldObj.values[0].value) }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取最低起订量\r\n\r\n    function MOQObjChecker(MOQObj, value) {\r\n        let newObj = { ...MOQObj };\r\n        value = Number(value);\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //最低起订量修改\r\n\r\n    function paymentMethodObjMaker(schema) {\r\n        let fieldObj = xmlGetField('paymentMethod', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values[0].values.map((obj) => {\r\n                return { value: obj.value };\r\n            });\r\n        }\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options[0].options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        return fieldObj;\r\n    } //获取付款方式\r\n\r\n    function paymentMethodObjChecker(paymentMethodObj, valueArr) {\r\n        if (!valueArr.length) return null; //productPaymentMethodsNeeded\r\n        let newObj = { ...paymentMethodObj };\r\n        newObj._values = valueArr;\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        let predefinedMethodTemplate = valueTemplates[0]; //id=\"predefined_method\"\r\n        let valueStr = '<values>';\r\n        valueArr.forEach((obj) => {\r\n            valueStr += `<value>${obj.value}</value>`;\r\n        });\r\n        valueStr += `</values>`;\r\n        predefinedMethodTemplate.innerHTML = valueStr;\r\n        valueSaver += predefinedMethodTemplate.outerHTML;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //支付方式确认\r\n\r\n    function priceUnitObjMaker(schema) {\r\n        let fieldObj = xmlGetField('priceUnit', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { key: '', value: fieldObj.values[0].value };\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        }\r\n        return fieldObj;\r\n    } //获取计量单位\r\n\r\n    function priceUnitObjChecker(priceUnitObj, valueObj) {\r\n        if (!valueObj) return null; //productPriceUnitNeeded\r\n        let newObj = { ...priceUnitObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += valueObj.value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //计量单位选择\r\n\r\n    function portObjMaker(schema) {\r\n        let fieldObj = xmlGetField('port', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取海运港口\r\n\r\n    function portObjChecker(portObj, value) {\r\n        if (!value || !value.trim()) return null; //productPortNeeded\r\n        let newObj = { ...portObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //海运港口修改\r\n\r\n    function logisticsObjMaker(schema) {\r\n        let fieldObj = xmlGetField('logisticsMode', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values.map((obj) => {\r\n                let { value } = obj;\r\n                let key = fieldObj._options.find((obj) => obj.value === value).key;\r\n                return { key, value };\r\n            });\r\n        }\r\n        return fieldObj;\r\n    } //获取物流模式\r\n\r\n    function logisticsObjChecker(logisticsModeObj, valueArr) {\r\n        if (!valueArr.length) return null; //productLogisticsModeNeeded\r\n        let newObj = { ...logisticsModeObj };\r\n        let valueTagName = `values`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: multiCheck\r\n        let valueStr = '';\r\n        let newArr = valueArr.map((key) => {\r\n            let value = newObj._options.find((obj) => obj.key === key).value;\r\n            return { key, value };\r\n        });\r\n        newArr.forEach((obj) => {\r\n            valueStr += `<value>${obj.value}</value>`;\r\n        });\r\n        valueSaver += valueStr + `</${valueTagName}>`;\r\n        newObj._values = newArr;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //物流模式确认\r\n\r\n    function packaingDescriptionObjMaker(schema) {\r\n        let fieldObj = xmlGetField('wholeSalePkgDesc', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取包装方式\r\n\r\n    function packaingDescriptionObjChecker(packagingDescriptionObj, value) {\r\n        if (!value || !value.trim()) return null; //productPackagingDescriptionNeeded\r\n        let newObj = { ...packagingDescriptionObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //包装方式修改\r\n\r\n    function priceObjMaker(schema) {\r\n        let fieldObj = xmlGetField('ladderPrice', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .filter((obj) => obj.type === 'complex')\r\n                .map((obj) => {\r\n                    return { quantity: Number(obj.values[0].values[0].value), price: Number(obj.values[1].values[0].value) };\r\n                })\r\n                .sort((a, b) => a.quantity - b.quantity);\r\n        } else {\r\n            fieldObj._values = [{ quantity: 1, price: 0 }];\r\n        }\r\n        return fieldObj;\r\n    } //获取阶梯价格\r\n\r\n    function priceObjChecker(priceObj, valueArr) {\r\n        let newObj = { ...priceObj };\r\n        let priceArr = valueArr.filter((obj) => obj.price);\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll(`fields > field[type=complex]`); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        priceArr.forEach((obj, i) => {\r\n            valueTemplates[i].querySelector('fields > field#quantity').innerHTML = `<value>${obj.quantity}</value>`;\r\n            valueTemplates[i].querySelector('fields > field#price').innerHTML = `<value>${obj.price}</value>`;\r\n            valueSaver += valueTemplates[i].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        valueSaver = valueSaver.replace(/fields/g, valueTagName); //替换\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //阶梯价格修改 & 确认\r\n\r\n    function ladderPeriodObjMaker(schema) {\r\n        let fieldObj = xmlGetField('ladderPeriod', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .filter((obj) => obj.type === 'complex')\r\n                .map((obj) => {\r\n                    return { quantity: Number(obj.values[0].values[0].value), day: Number(obj.values[1].values[0].value) };\r\n                })\r\n                .sort((a, b) => a.quantity - b.quantity);\r\n        } else {\r\n            fieldObj._values = [{ quantity: 1, price: 0 }];\r\n        }\r\n        return fieldObj;\r\n    } //获取发货期\r\n\r\n    function ladderPeriodObjChecker(ladderPeriodObj, valueArr) {\r\n        let newObj = { ...ladderPeriodObj };\r\n        newObj._values = valueArr;\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll(`fields > field[type=complex]`); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueArr.forEach((obj, index) => {\r\n            valueTemplates[index].querySelector('fields > field#quantity').innerHTML = `<value>${obj.quantity}</value>`;\r\n            valueTemplates[index].querySelector('fields > field#day').innerHTML = `<value>${obj.day}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        valueSaver = valueSaver.replace(/fields/g, valueTagName); //替换\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //发货期修改 & 确认\r\n\r\n    function supplyAbilityObjMaker(schema) {\r\n        let fieldObj = xmlGetField('supply', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n        }\r\n        return fieldObj;\r\n    } //获取产品类型\r\n\r\n    function supplyAbilityObjChecker(supplyAbilityObj, valueObj) {\r\n        if (!valueObj) return null; //productSupplyAbilityNeeded\r\n        let newObj = { ...supplyAbilityObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `complex-value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplate = newField.querySelector(`fields`); //引入填写模板\r\n        valueTemplate.querySelector(`field#supply_number`).innerHTML = `<value>${valueObj.supply_number}</value>`;\r\n        valueTemplate.querySelector(`field#time_unit`).innerHTML = `<value>${valueObj.time_unit}</value>`;\r\n        valueTemplate.querySelector(`field#quantity_unit`).innerHTML = `<value>${valueObj.quantity_unit}</value>`;\r\n        let valueTemplates = newField.querySelectorAll(`fields > field`);\r\n        Array.from(valueTemplates).forEach((node) => {\r\n            valueSaver += node.outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //产品类型修改\r\n\r\n    function attributeObjMaker(schema) {\r\n        let fieldObj = xmlGetField('icbuCatProp', schema);\r\n        if (!fieldObj) return null;\r\n        let checkValues = (arr) => {\r\n            if (!arr || !arr.length) return arr;\r\n            let newArr = [];\r\n            arr.forEach((obj) => {\r\n                let newObj = { ...obj };\r\n                let { type, displayName, inputValue, value, values } = newObj;\r\n                if (value !== undefined) {\r\n                    let valueObj = {};\r\n                    if (displayName !== undefined) valueObj.key = displayName;\r\n                    if (inputValue !== undefined) valueObj.key = inputValue;\r\n                    if (value !== undefined) valueObj.value = value;\r\n                    if (Object.keys(valueObj).length) newObj = { ...newObj, ...valueObj };\r\n                } else if (['input', 'singleCheck'].find((str) => str === type)) {\r\n                    let valueObj = {};\r\n                    if (values[0].inputValue !== undefined) valueObj.key = values[0].inputValue;\r\n                    if (values[0].value !== undefined) valueObj.value = values[0].value;\r\n                    if (Object.keys(valueObj).length) newObj._values = valueObj;\r\n                } else {\r\n                    let newValues = checkValues(values);\r\n                    if (newValues) newObj._values = newValues;\r\n                }\r\n                newArr.push(newObj);\r\n            });\r\n            return newArr;\r\n        };\r\n        let checkOptions = (arr) => {\r\n            if (!arr || !arr.length) return arr;\r\n            let newArr = [];\r\n            arr.forEach((obj) => {\r\n                let newObj = { ...obj };\r\n                let { type, options, displayName, inputValue, value } = newObj;\r\n                if (value !== undefined) {\r\n                    let optionObj = {};\r\n                    if (displayName !== undefined) optionObj.key = displayName;\r\n                    if (inputValue !== undefined) optionObj.key = inputValue;\r\n                    if (value !== undefined) optionObj.value = value;\r\n                    if (Object.keys(optionObj).length) newObj = { ...newObj, ...optionObj };\r\n                } else if (/input/gi.test(type)) {\r\n                    newObj._options = false;\r\n                } else {\r\n                    let newOptions = checkOptions(options);\r\n                    if (newOptions) {\r\n                        newObj._options = newOptions;\r\n                    } else {\r\n                        let optionObj = {};\r\n                        if (options && options[0].displayName !== undefined) optionObj.key = options[0].displayName;\r\n                        //if (options && options[0].inputValue !== undefined) optionObj.key = options[0].inputValue;\r\n                        if (options && options[0].value !== undefined) optionObj.value = options[0].value;\r\n                        if (Object.keys(optionObj).length) newObj._options = [optionObj];\r\n                    }\r\n                }\r\n                newArr.push(newObj);\r\n            });\r\n            return newArr;\r\n        };\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values.filter((obj) => obj.name).sort((a, b) => a.type.length - b.type.length);\r\n            fieldObj._values = checkValues(fieldObj._values);\r\n        }\r\n        if (fieldObj.options) {\r\n            fieldObj._options = fieldObj.options.filter((obj) => obj.name).sort((a, b) => a.type.length - b.type.length);\r\n            fieldObj._options = checkOptions(fieldObj._options);\r\n        }\r\n        //console.log(fieldObj);\r\n        return fieldObj;\r\n    } //在用的属性\r\n\r\n    function attributeObjChecker(attributeObj, attributeSaver, cleaner) {\r\n        let newObj = { ...attributeObj }; //make a copy\r\n        let valueArr = newObj._values;\r\n        let saveAttribute = (newObj, cleaner) => {\r\n            let valueArr = newObj._values;\r\n            let invalidList = []; //无效列表\r\n            let valueTagName = `complex-value`;\r\n            let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n            let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n            valueArr.forEach((obj, index) => {\r\n                let { type, id, _values } = obj;\r\n                let valueTemplates = newField.querySelector(`fields > field#${id}`); //引入填写模板\r\n                if (valueTemplates) {\r\n                    valueTemplates.innerHTML = ''; //清空模板\r\n                    if (/multi(?!Complex)/.test(type)) {\r\n                        let valueStr = '';\r\n                        _values.forEach((subObj) => {\r\n                            let { key, value } = subObj;\r\n                            valueStr += `<value inputValue=\"${key}\">${value}</value>`;\r\n                        });\r\n                        let elementValues = document.createElement('values');\r\n                        elementValues.innerHTML = valueStr;\r\n                        if (valueStr) {\r\n                            valueTemplates.innerHTML = elementValues.outerHTML;\r\n                            valueSaver += valueTemplates.outerHTML;\r\n                        } else {\r\n                            invalidList.push(index);\r\n                        }\r\n                    } else {\r\n                        let { key, value } = _values;\r\n                        let elementValue = document.createElement('value');\r\n                        elementValue.setAttribute('inputValue', key);\r\n                        elementValue.innerText = value;\r\n                        const checkContent = (str) => str !== undefined && String(str).trim() !== '' && str !== null; //检查内容是否为空\r\n                        if (checkContent(key)) {\r\n                            valueTemplates.innerHTML = elementValue.outerHTML;\r\n                            valueSaver += valueTemplates.outerHTML;\r\n                        } else {\r\n                            invalidList.push(index);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            valueSaver += `</${valueTagName}>`;\r\n            if (invalidList.length && cleaner) newObj._values = valueArr.filter((obj, index) => !invalidList.find((i) => i === index));\r\n            if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n            let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n            newObj.xml.append(newXml); //替换\r\n            return newObj; //更新到JSX\r\n        };\r\n        if (cleaner) return saveAttribute(newObj, cleaner);\r\n        let [mainAttributeObj, value] = attributeSaver;\r\n        // need to find the main attribute option first (by id),\r\n        //and then map the data with options(if any),\r\n        //  and then update to the main attribute\r\n        let { id, type, _values } = mainAttributeObj; //multicheck, singlecheck, input\r\n        let myOptions = attributeObj._options.find((option) => option.id === id); //找到当前属性下的选项\r\n        if (/multi(?!Complex)/.test(type)) {\r\n            _values = [];\r\n            value.forEach((str) => {\r\n                if (myOptions._options) {\r\n                    let subOptionObj = myOptions._options.find((subOption) => subOption.key === str); //options are mapped with names\r\n                    if (subOptionObj) _values.push(subOptionObj);\r\n                    //find the mapping, and save the data\r\n                    else _values.push({ key: '', value: str }); //worst situation ( no matches found)\r\n                } else {\r\n                    _values.push({ key: '', value: str }); //worst situation ( no matches found)\r\n                }\r\n            }); //然后再映射属性选项\r\n        } else {\r\n            if (myOptions._options) {\r\n                let subOptionObj = myOptions._options.find((subOption) => subOption.key === value); //options are mapped with names\r\n                if (subOptionObj) _values = subOptionObj;\r\n                //find the mapping, and save the data\r\n                else _values = { key: value, value: '' }; //worst situation ( no matches found)\r\n            } else {\r\n                _values.key = value; //worst situation ( no matches found)\r\n            } //然后再映射属性选项\r\n        }\r\n        mainAttributeObj._values = _values;\r\n        valueArr = valueArr.filter((obj) => obj.id !== id); //过滤旧属性\r\n        valueArr.push(mainAttributeObj);\r\n        newObj._values = valueArr;\r\n        newObj = saveAttribute(newObj);\r\n        return newObj;\r\n    } //属性修改\r\n\r\n    function customStatusObjMaker(schema) {\r\n        let fieldObj = xmlGetField('productLightCustom', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        } else {\r\n            fieldObj._values = {};\r\n        }\r\n        return fieldObj;\r\n    } //获取定制服务支持状态\r\n\r\n    function customStatusObjChecker(customStatusObj, value) {\r\n        if (!value || !value.trim()) return null; //productCustomizationNeeded\r\n        let newObj = { ...customStatusObj };\r\n        let valueTagName = 'value';\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //通知父组件\r\n    } //定制服务支持状态修改\r\n\r\n    function customObjMaker(schema) {\r\n        let fieldObj = xmlGetField('customizedServices', schema);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values\r\n                .filter((obj) => obj.type === 'complex')\r\n                .map((obj) => {\r\n                    return { key: obj.values[1].values[0].value, value: Number(obj.values[0].values[0].value) };\r\n                });\r\n        }\r\n        let optionArr = fieldObj.options.filter((obj) => obj.type === 'complex');\r\n        if (optionArr.length) {\r\n            fieldObj._options = optionArr[0].options[1].options\r\n                .filter((obj) => obj.value !== '-1') //排除 displayName: \"other\" 不太用;\r\n                .map((obj) => {\r\n                    return { ...obj, key: obj.displayName, value: obj.value };\r\n                });\r\n        } //数据内部处理\r\n        //console.log(fieldObj);\r\n        return fieldObj;\r\n    } //获取定制内容\r\n\r\n    function customObjChecker(customObj, valueObj) {\r\n        let newObj = { ...customObj };\r\n        let valueArr = newObj._values.filter((obj) => obj.key !== valueObj.key);\r\n        valueArr = valueArr.filter((obj) => obj.value);\r\n        valueArr = valueArr.filter((obj) => !isNaN(obj.value));\r\n        valueArr.push(valueObj);\r\n        newObj._values = valueArr;\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll(`fields > field[type=complex]`); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueArr.forEach((obj, index) => {\r\n            valueTemplates[index].querySelector('fields > field#custom_type').innerHTML = `<value>${obj.key}</value>`;\r\n            valueTemplates[index].querySelector('fields > field#quantity').innerHTML = `<value>${obj.value}</value>`;\r\n            valueSaver += valueTemplates[index].outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        valueSaver = valueSaver.replace(/fields/g, valueTagName); //替换\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //确认定制项\r\n\r\n    function shippingTemplateObjMaker(schema) {\r\n        let fieldObj = xmlGetField('shippingTemplateId', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value }; //数据内部处理\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        }\r\n        return fieldObj;\r\n    } //获取运费模板\r\n\r\n    function shippingTemplateObjChecker(shippingTemplateObj, valueObj) {\r\n        if (!valueObj) return null; //productSubjectNeeded\r\n        let newObj = { ...shippingTemplateObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += valueObj.value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //运费模板修改\r\n\r\n    function weightObjMaker(schema) {\r\n        let fieldObj = xmlGetField('pkgWeight', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value };\r\n        }\r\n        return fieldObj;\r\n    } //获取毛重\r\n\r\n    function weightObjChecker(weightObj, value) {\r\n        if (!value) return null; //productWeightNeeded\r\n        let newObj = { ...weightObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //毛重修改\r\n\r\n    function measureObjMaker(schema) {\r\n        let fieldObj = xmlGetField('pkgMeasure', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = fieldObj.values.map((obj) => {\r\n                return { key: obj.id, value: obj.values[0].value };\r\n            });\r\n            let ranking = ['length', 'width', 'height'];\r\n            fieldObj._values.sort((a, b) => {\r\n                return ranking.indexOf(a.key) - ranking.indexOf(b.key);\r\n            });\r\n        }\r\n        return fieldObj;\r\n    } //获取长宽高\r\n\r\n    function measureObjChecker(measureObj, value) {\r\n        if (!value) return null; //productMeasureNeeded);\r\n        let arr = value.split('*');\r\n        if (arr.length < 3) return null; //productMeasureNeeded);\r\n        let hasError = false;\r\n        arr.forEach((num) => {\r\n            if (!num || isNaN(num)) hasError = true;\r\n        });\r\n        if (hasError) return null; //productMeasureNeeded);\r\n        let newObj = { ...measureObj };\r\n        let keyArr = ['length', 'width', 'height'];\r\n        newObj._values = arr.map((obj, index) => {\r\n            return { key: keyArr[index], value: Number(obj) };\r\n        });\r\n        let valueTagName = `complex-value`;\r\n        let newField = new DOMParser().parseFromString(newObj.xml.outerHTML, 'text/xml').firstChild; //引入模板\r\n        let valueTemplates = newField.querySelectorAll('fields > field'); //引入填写模板\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        let allValueTemplates = Array.from(valueTemplates);\r\n        allValueTemplates.find((node) => node.id === 'length').innerHTML = `<value>${newObj._values[0].value}</value>`;\r\n        allValueTemplates.find((node) => node.id === 'width').innerHTML = `<value>${newObj._values[1].value}</value>`;\r\n        allValueTemplates.find((node) => node.id === 'height').innerHTML = `<value>${newObj._values[2].value}</value>`;\r\n        allValueTemplates.forEach((node) => {\r\n            valueSaver += node.outerHTML;\r\n        });\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //长宽高确认\r\n\r\n    function saleTypeObjMaker(schema) {\r\n        let fieldObj = xmlGetField('saleType', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { key: '', value: fieldObj.values[0].value };\r\n            fieldObj._values.key = fieldObj._options.find((obj) => obj.value === fieldObj._values.value).key;\r\n        }\r\n        return fieldObj;\r\n    } //获取销售方式\r\n\r\n    function saleTypeObjChecker(saleTypeObj, valueObj) {\r\n        if (!valueObj) return null; //productTypeNeeded\r\n        let newObj = { ...saleTypeObj };\r\n        newObj._values = valueObj;\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += valueObj.value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //销售方式确认\r\n\r\n    function batchObjMaker(schema) {\r\n        let fieldObj = xmlGetField('batchNum', schema);\r\n        //console.log(fieldObj);\r\n        if (!fieldObj) return null;\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: fieldObj.values[0].value };\r\n        }\r\n        return fieldObj;\r\n    } //获取一批等于\r\n\r\n    function batchObjChecker(batchObj, value) {\r\n        if (!value) return null; //productWeightNeeded\r\n        let newObj = { ...batchObj };\r\n        newObj._values = { value };\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        if (newObj.xml.querySelector(valueTagName)) newObj.xml.querySelector(valueTagName).remove(); //删除前值\r\n        let newXml = new DOMParser().parseFromString(valueSaver, 'text/xml').firstChild; //合并\r\n        newObj.xml.append(newXml); //替换\r\n        return newObj; //更新到JSX\r\n    } //一批等于确认\r\n\r\n    function descriptionObjMaker(schema) {\r\n        let fieldObj = xmlGetField('superText', schema);\r\n        //console.log(fieldObj);\r\n        if (fieldObj.values) {\r\n            fieldObj._values = { value: String(fieldObj.values[0].value).decodeHTMLEntity() }; //数据内部处理\r\n        } else {\r\n            fieldObj._values = { value: '' };\r\n        }\r\n        return fieldObj;\r\n    } //获取产品详情\r\n\r\n    function descriptionObjChecker(descriptionObj, value) {\r\n        if (!value || !value.trim()) return null;\r\n        if (value === descriptionObj._values.value) return null; //未修改\r\n        value = value.replace(/\\n/g, '').trim();\r\n        let valueSaver = value.trim().encodeNonASCII();\r\n        if (valueSaver.length > 50000) return null; //descriptionOverflow\r\n        let newObj = { ...descriptionObj };\r\n        newObj._values = { value };\r\n        newObj.xml.innerHTML = ''; //删除前值\r\n        newObj.xml.append(document.createElement('value'));\r\n        newObj.xml.children[0].innerText = valueSaver;\r\n        return newObj; //更新到JSX\r\n    } //产品名称修改\r\n\r\n    function descriptionTypeObjMaker(schema) {\r\n        let fieldObj = xmlGetField('productDescType', schema);\r\n        fieldObj._options = fieldObj.options\r\n            ? fieldObj.options.map((obj) => {\r\n                  return { key: obj.displayName, value: obj.value };\r\n              })\r\n            : []; //数据内部处理\r\n        let value = fieldObj.values ? fieldObj.values[0].value : '2';\r\n        if (fieldObj._options.find((obj) => obj.value === value)) {\r\n            let key = fieldObj._options.find((obj) => obj.value === value).key;\r\n            fieldObj._values = { key, value };\r\n        }\r\n        //console.log(fieldObj);\r\n        return fieldObj;\r\n    } //获取产品详情描述类型\r\n\r\n    function descriptionTypeObjChecker(descriptionTypeObj, value) {\r\n        let newObj = { ...descriptionTypeObj };\r\n        if (newObj._options.find((obj) => obj.value === value)) {\r\n            newObj._values = { key: newObj._options.find((obj) => obj.value === value).key, value };\r\n        }\r\n        let valueTagName = `value`;\r\n        let valueSaver = `<${valueTagName}>`; //引入填值区域(因类型而异) //type: input\r\n        valueSaver += value;\r\n        valueSaver += `</${valueTagName}>`;\r\n        newObj.xml.innerHTML = valueSaver.trim().decodeHTMLEntity(); //删除前值\r\n        return newObj; //更新到JSX\r\n    } //产品详情描述类型修改\r\n\r\n    return {\r\n        schemaSubmit,\r\n        schemaChecker,\r\n        schemaMaker,\r\n        xmlGetField,\r\n        imageObjMaker,\r\n        imageObjChecker,\r\n        productGroupObjMaker,\r\n        productGroupObjChecker,\r\n        productTypeObjMaker,\r\n        productTypeObjChecker,\r\n        subjectObjMaker,\r\n        subjectObjChecker,\r\n        keywordObjMaker,\r\n        keywordObjChecker,\r\n        MOQObjMaker,\r\n        MOQObjChecker,\r\n        paymentMethodObjMaker,\r\n        paymentMethodObjChecker,\r\n        priceUnitObjMaker,\r\n        priceUnitObjChecker,\r\n        portObjMaker,\r\n        portObjChecker,\r\n        logisticsObjMaker,\r\n        logisticsObjChecker,\r\n        packaingDescriptionObjMaker,\r\n        packaingDescriptionObjChecker,\r\n        priceObjMaker,\r\n        priceObjChecker,\r\n        ladderPeriodObjMaker,\r\n        ladderPeriodObjChecker,\r\n        supplyAbilityObjMaker,\r\n        supplyAbilityObjChecker,\r\n        attributeObjMaker,\r\n        attributeObjChecker,\r\n        customStatusObjMaker,\r\n        customStatusObjChecker,\r\n        customObjMaker,\r\n        customObjChecker,\r\n        shippingTemplateObjMaker,\r\n        shippingTemplateObjChecker,\r\n        weightObjMaker,\r\n        weightObjChecker,\r\n        measureObjMaker,\r\n        measureObjChecker,\r\n        saleTypeObjMaker,\r\n        saleTypeObjChecker,\r\n        batchObjMaker,\r\n        batchObjChecker,\r\n        descriptionObjMaker,\r\n        descriptionObjChecker,\r\n        descriptionTypeObjMaker,\r\n        descriptionTypeObjChecker\r\n    };\r\n})();\r\n\r\nexport default ProductFn;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Divider, Typography, List, ListItem } from '@mui/material';\r\nimport { Check as CheckIcon, Cancel as CancelIcon } from '@mui/icons-material';\r\n\r\nfunction Confirmation({ langPack, productModified, showDetails, modificationSubmission }) {\r\n    let navigate = useNavigate(); //react-router-dom\r\n    let modifiedKeys = Object.keys(productModified);\r\n    return (\r\n        <>\r\n            {showDetails ? (\r\n                modifiedKeys.length ? (\r\n                    <>\r\n                        <Typography variant=\"h3\">{langPack.steps.modificationDone}</Typography>\r\n                        <List>\r\n                            {modifiedKeys.map((key) => (\r\n                                <ListItem key={key}>--{key}</ListItem>\r\n                            ))}\r\n                        </List>\r\n                        <Divider />\r\n                    </>\r\n                ) : (\r\n                    <Typography variant=\"h3\">{langPack.steps.modificationNull}</Typography>\r\n                )\r\n            ) : (\r\n                <></>\r\n            )}\r\n            <br />\r\n            <div>\r\n                <Button startIcon={<CheckIcon />} onClick={modificationSubmission}>\r\n                    {langPack.common.yes}\r\n                </Button>\r\n                <Button startIcon={<CancelIcon />} onClick={() => navigate(`/product`)}>\r\n                    {langPack.common.no}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    langPack: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    showDetails: PropTypes.bool,\r\n    modificationSubmission: PropTypes.func\r\n};\r\n\r\nexport default Confirmation;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Box, Stepper, Step, StepLabel, ButtonGroup } from '@mui/material';\r\n\r\nfunction EditStep({ langPack, activeStep, setActiveStep }) {\r\n    const [steps] = useState([langPack.steps.first, langPack.steps.second, langPack.steps.finally]);\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label) => {\r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            <ButtonGroup\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disableElevation\r\n                sx={{ display: 'flex', flexDirection: 'row', pt: 2, paddingBottom: '10px' }}\r\n            >\r\n                <Button disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}>\r\n                    {langPack.steps.previous}\r\n                </Button>\r\n                <Box sx={{ flex: '1 1 auto' }} />\r\n                <Button disabled={activeStep === 2} onClick={handleNext}>\r\n                    {activeStep === steps.length - 1 ? langPack.steps.complete : langPack.steps.next}\r\n                </Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}\r\n\r\nEditStep.propTypes = {\r\n    langPack: PropTypes.object,\r\n    activeStep: PropTypes.number,\r\n    setActiveStep: PropTypes.func\r\n};\r\n\r\nexport default EditStep;\r\n","import { useState, useEffect, lazy } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loadable from 'ui-component/Loadable';\r\nconst PhotoSelector = Loadable(lazy(() => import('./PhotoSelector')));\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    FormControlLabel,\r\n    ImageList,\r\n    ImageListItem,\r\n    ImageListItemBar,\r\n    Input,\r\n    IconButton,\r\n    Tooltip\r\n} from '@mui/material';\r\nimport { StarBorder as StarBorderIcon, SwitchLeft as SwitchLeftIcon, CloudQueue as CloudQueueIcon } from '@mui/icons-material';\r\n\r\nfunction PhotoGallery({ xmlSchema, productFn, onModified, productModified, photoCols, rowHeight, langPack }) {\r\n    let [imageObj, setImageObj] = useState({}); //所有图片\r\n    let [dialogOpen, setDialogOpen] = useState(false); //选择图片的对话框状态\r\n    let { imageObjMaker, imageObjChecker } = productFn;\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { scImages } = productModified;\r\n        scImages ? setImageObj(scImages) : getImageObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getImageObj() {\r\n        return setImageObj(imageObjMaker());\r\n    } //获取产品图片\r\n\r\n    function onPhotoConfirm(valueArr) {\r\n        let newValueArr = valueArr.map((obj) => {\r\n            return { ...obj, key: obj.id, value: obj.url };\r\n        });\r\n        onImageChange('add', newValueArr);\r\n    } //选择图片\r\n\r\n    function onImageChange(method, valueArr) {\r\n        if (!valueArr.length) return null; //校验\r\n        let newObj = { ...imageObj };\r\n        let imageArr = newObj._values || [];\r\n        let newArr = [];\r\n        if (method === 'add') {\r\n            newArr = [...imageArr, ...valueArr];\r\n            if (newArr.length > 6) newArr.length = 6;\r\n        } else if (method === 'remove') {\r\n            if (imageArr.length <= 1) return queryResult(false, langPack.steps.mainPhotoRequired);\r\n            valueArr.forEach((valueObj) => {\r\n                newArr = imageArr.filter((obj) => obj.value !== valueObj.value);\r\n            });\r\n        } else if (method === 'reorder') {\r\n            newArr = valueArr;\r\n        }\r\n        newObj = imageObjChecker(imageObj, newArr);\r\n        if (!newObj._values.length) setDialogOpen(true);\r\n        let setter = setImageObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('scImages', newObj); //通知父组件\r\n    } //产品图片修改\r\n\r\n    let onPhotoReorder = (index) => {\r\n        let newObj = { ...imageObj };\r\n        let newArr = newObj._values;\r\n        let deletedImage = newArr.splice(index, 1);\r\n        newArr.splice(index - 1, 0, deletedImage[0]);\r\n        return onImageChange('reorder', newArr);\r\n    }; //调整图片顺序\r\n\r\n    return (\r\n        <ImageList cols={photoCols} rowHeight={rowHeight} sx={{ marginTop: '10px', marginBottom: '10px' }} variant=\"quilted\" gap={2}>\r\n            {imageObj._values && imageObj._values.length ? (\r\n                imageObj._values.map((obj, index) => {\r\n                    return (\r\n                        <ImageListItem key={index} cols={1} rows={1}>\r\n                            <img src={`https:` + obj.value} alt={index + 1} loading=\"lazy\" />\r\n                            <ImageListItemBar\r\n                                sx={{\r\n                                    background:\r\n                                        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)'\r\n                                }}\r\n                                title={index + 1}\r\n                                position=\"top\"\r\n                                actionIcon={\r\n                                    <Tooltip title={langPack.steps.removePhotos}>\r\n                                        <IconButton\r\n                                            sx={{ color: index ? 'yellow' : 'white' }}\r\n                                            aria-label={`star ${index + 1}`}\r\n                                            onDoubleClick={() => onImageChange('remove', [obj])}\r\n                                        >\r\n                                            <StarBorderIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                }\r\n                                actionPosition=\"left\"\r\n                            />\r\n                            {index && obj.id ? (\r\n                                <Button\r\n                                    sx={{ position: 'absolute', right: '0px', top: '5px' }}\r\n                                    size=\"large\"\r\n                                    color=\"warning\"\r\n                                    onClick={() => onPhotoReorder(index)}\r\n                                    startIcon={<SwitchLeftIcon />}\r\n                                />\r\n                            ) : null}\r\n                        </ImageListItem>\r\n                    );\r\n                })\r\n            ) : (\r\n                <></>\r\n            )}\r\n            {!imageObj._values || imageObj._values.length < 6 ? (\r\n                <>\r\n                    <Tooltip title={langPack.steps.selectFromCloud}>\r\n                        <Button sx={{ height: '100%' }} startIcon={<CloudQueueIcon />} onClick={() => setDialogOpen(true)}>\r\n                            {langPack.steps.cloud}\r\n                        </Button>\r\n                    </Tooltip>\r\n                    <PhotoSelector\r\n                        dialogOpen={dialogOpen}\r\n                        setDialogOpen={setDialogOpen}\r\n                        onPhotoConfirm={onPhotoConfirm}\r\n                        langPack={langPack}\r\n                    />\r\n                </>\r\n            ) : null}\r\n        </ImageList>\r\n    );\r\n}\r\n\r\nPhotoGallery.propTypes = {\r\n    xmlSchema: PropTypes.object,\r\n    productFn: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    photoCols: PropTypes.number,\r\n    rowHeight: PropTypes.number,\r\n    onModified: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default PhotoGallery;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport {\r\n    Typography,\r\n    Autocomplete,\r\n    Button,\r\n    Checkbox,\r\n    InputAdornment,\r\n    MenuItem,\r\n    TextField,\r\n    Divider,\r\n    Tooltip,\r\n    Chip,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Remove as RemoveIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    ModeEdit as EditIcon,\r\n    Clear as ClearIcon,\r\n    DeleteOutline as DeleteIcon\r\n} from '@mui/icons-material';\r\n\r\nlet productGroupSaver; //产品分组暂存\r\nlet paymentMethodSaver; //付款方式暂存\r\nlet logisticsSaver; //物流方式暂存\r\nlet priceSaver; //阶梯价暂存\r\nlet periodSaver; //发货期暂存\r\nlet productTypeSaver; //产品类型暂存\r\nfunction App({ xmlSchema, productFn, langPack, group_id, rtsProduct, productModified, onModified }) {\r\n    console.log('summary running');\r\n    //产品分组\r\n    let [productGroupObj, setProductGroupObj] = useState({});\r\n    //产品类型\r\n    let [productTypeObj, setProductTypeObj] = useState({});\r\n    //产品名称\r\n    let [subjectObj, setSubjectObj] = useState({});\r\n    //产品关键词\r\n    let [keywordObj, setKeywordObj] = useState({});\r\n    //付款方式\r\n    let [paymentMethodObj, setPaymentMethodObj] = useState({});\r\n    //计量单位\r\n    let [priceUnitObj, setPriceUnitObj] = useState({});\r\n    //最小起订量\r\n    let [MOQObj, setMOQObj] = useState({});\r\n    //阶梯价\r\n    let [priceObj, setPriceObj] = useState({});\r\n    let [priceEdit, setPriceEdit] = useState(false);\r\n    //发货期\r\n    let [ladderPeriodObj, setLadderPeriodObj] = useState({});\r\n    let [periodEdit, setPeriodEdit] = useState(false);\r\n    //海运港口\r\n    let [portObj, setPortObj] = useState({});\r\n    //物流模式\r\n    let [logisticsModeObj, setLogisticsObj] = useState({});\r\n    //包装方式\r\n    let [packagingDescriptionObj, setPackagingDescriptionObj] = useState({});\r\n    //供货能力（询盘品专属）\r\n    let [supplyAbilityObj, setSupplyAbilityObj] = useState({});\r\n    let {\r\n        productGroupObjMaker,\r\n        productGroupObjChecker,\r\n        productTypeObjMaker,\r\n        productTypeObjChecker,\r\n        subjectObjMaker,\r\n        subjectObjChecker,\r\n        keywordObjMaker,\r\n        keywordObjChecker,\r\n        MOQObjMaker,\r\n        MOQObjChecker,\r\n        paymentMethodObjMaker,\r\n        paymentMethodObjChecker,\r\n        priceUnitObjMaker,\r\n        priceUnitObjChecker,\r\n        portObjMaker,\r\n        portObjChecker,\r\n        logisticsObjMaker,\r\n        logisticsObjChecker,\r\n        packaingDescriptionObjMaker,\r\n        packaingDescriptionObjChecker,\r\n        priceObjMaker,\r\n        priceObjChecker,\r\n        ladderPeriodObjMaker,\r\n        ladderPeriodObjChecker,\r\n        supplyAbilityObjMaker,\r\n        supplyAbilityObjChecker\r\n    } = productFn;\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let {\r\n            productGroup,\r\n            market,\r\n            productTitle,\r\n            productKeywords,\r\n            minOrderQuantity,\r\n            paymentMethod,\r\n            priceUnit,\r\n            ladderPrice,\r\n            ladderPeriod,\r\n            port,\r\n            logisticsMode,\r\n            wholeSalePkgDesc,\r\n            supply\r\n        } = productModified;\r\n        productGroup ? setProductGroupObj(productGroup) : getProductGroupObj();\r\n        market ? setProductTypeObj(market) : getProductTypeObj();\r\n        productTitle ? setSubjectObj(productTitle) : getSubjectObj();\r\n        productKeywords ? setKeywordObj(productKeywords) : getKeywordObj();\r\n        minOrderQuantity ? setMOQObj(minOrderQuantity) : getMOQObj();\r\n        paymentMethod ? setPaymentMethodObj(paymentMethod) : getPaymentMethodObj();\r\n        priceUnit ? setPriceUnitObj(priceUnit) : getPriceUnitObj();\r\n        ladderPrice ? setPriceObj(ladderPrice) : getPriceObj();\r\n        ladderPeriod ? setLadderPeriodObj(ladderPeriod) : getLadderPeriodObj();\r\n        port ? setPortObj(port) : getPortObj();\r\n        logisticsMode ? setLogisticsObj(logisticsMode) : getLogisticsObj();\r\n        wholeSalePkgDesc ? setPackagingDescriptionObj(wholeSalePkgDesc) : getPackaingDescriptionObj();\r\n        supply ? setSupplyAbilityObj(supply) : getSupplyAbilityObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getProductGroupObj() {\r\n        let fieldObj = productGroupObjMaker();\r\n        if (group_id) {\r\n            productGroupSaver = fieldObj;\r\n            return onProductGroupChange(group_id);\r\n        }\r\n        return setProductGroupObj(fieldObj);\r\n    } //获取产品分组\r\n\r\n    function onProductGroupChange(value) {\r\n        if (!value) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = productGroupObj._values ? { ...productGroupObj } : productGroupSaver;\r\n        newObj = productGroupObjChecker(newObj, value);\r\n        let setter = setProductGroupObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productGroup', newObj); //通知父组件\r\n    } //产品分组修改\r\n\r\n    function getProductTypeObj() {\r\n        let fieldObj = productTypeObjMaker();\r\n        if (!fieldObj) return;\r\n        if (!fieldObj.values) {\r\n            productTypeSaver = fieldObj;\r\n            return onProductTypeChange(rtsProduct ? '1' : '2'); //默认定制品。（现货以后再说，毕竟现在信保支持度不高）\r\n        }\r\n        return setProductTypeObj(fieldObj);\r\n    } //获取产品类型\r\n\r\n    function onProductTypeChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = productTypeObj._values ? productTypeObj : productTypeSaver;\r\n        newObj = productTypeObjChecker(newObj, value);\r\n        let setter = setProductTypeObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('market', newObj); //通知父组件\r\n    } //产品类型修改\r\n\r\n    function getSubjectObj() {\r\n        return setSubjectObj(subjectObjMaker());\r\n    } //获取产品名称\r\n\r\n    function onSubjectChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = subjectObjChecker(subjectObj, value);\r\n        let setter = setSubjectObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productTitle', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    function getKeywordObj() {\r\n        return setKeywordObj(keywordObjMaker());\r\n    } //获取产品关键词\r\n\r\n    function onKeywordChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productKeywordNeeded); //校验\r\n        let newArr = value.split(',');\r\n        if (newArr.length > 3) {\r\n            newArr.length = 3;\r\n            queryResult(false, langPack.form.keywords);\r\n        }\r\n        let newObj = keywordObjChecker(keywordObj, newArr);\r\n        let setter = setKeywordObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productKeywords', newObj); //通知父组件\r\n    } //关键词修改\r\n\r\n    function getMOQObj() {\r\n        return setMOQObj(MOQObjMaker());\r\n    } //获取最低起订量\r\n\r\n    function onMOQChanged(value) {\r\n        if (!value) return; //校验\r\n        let newObj = MOQObjChecker(MOQObj, value);\r\n        let setter = setMOQObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('minOrderQuantity', newObj); //通知父组件\r\n    } //最低起订量修改\r\n\r\n    function getPaymentMethodObj() {\r\n        return setPaymentMethodObj(paymentMethodObjMaker());\r\n    } //获取付款方式\r\n\r\n    function onPaymentMethodChange(newValue) {\r\n        paymentMethodSaver = newValue;\r\n    } //支付方式选择\r\n\r\n    function onPaymentMethodConfirm() {\r\n        if (!paymentMethodSaver) return;\r\n        if (!paymentMethodSaver.length) return queryResult(false, langPack.steps.productPaymentMethodsNeeded);\r\n        let newObj = paymentMethodObjChecker(paymentMethodObj, paymentMethodSaver);\r\n        let setter = setPaymentMethodObj;\r\n        setter(newObj); //更新到JSX\r\n        paymentMethodSaver = '';\r\n        return onModified('paymentMethod', newObj);\r\n    } //支付方式确认\r\n\r\n    function getPriceUnitObj() {\r\n        return setPriceUnitObj(priceUnitObjMaker);\r\n    } //获取计量单位\r\n\r\n    function onPriceUnitChange(valueObj) {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productPriceUnitNeeded); //校验\r\n        let newObj = priceUnitObjChecker(priceUnitObj, valueObj);\r\n        let setter = setPriceUnitObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('priceUnit', newObj); //通知父组件\r\n    } //计量单位选择\r\n\r\n    function getPortObj() {\r\n        return setPortObj(portObjMaker());\r\n    } //获取海运港口\r\n\r\n    function onPortChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productPortNeeded); //校验\r\n        let newObj = portObjChecker(portObj, value);\r\n        let setter = setPortObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('port', newObj); //通知父组件\r\n    } //海运港口修改\r\n\r\n    function getLogisticsObj() {\r\n        return setLogisticsObj(logisticsObjMaker());\r\n    } //获取物流模式\r\n\r\n    function onLogisticsChange(newValue) {\r\n        logisticsSaver = newValue;\r\n    } //物流模式选择\r\n\r\n    function onLogisticsConfirm() {\r\n        if (!logisticsSaver) return;\r\n        if (!logisticsSaver.length) return queryResult(false, langPack.steps.productLogisticsModeNeeded);\r\n        let newObj = logisticsObjChecker(logisticsModeObj, logisticsSaver);\r\n        let setter = setLogisticsObj;\r\n        setter(newObj); //更新到JSX\r\n        logisticsSaver = '';\r\n        return onModified('logisticsMode', newObj);\r\n    } //物流模式确认\r\n\r\n    function getPackaingDescriptionObj() {\r\n        return setPackagingDescriptionObj(packaingDescriptionObjMaker());\r\n    } //获取包装方式\r\n\r\n    function onPackagingDescriptionChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productPackagingDescriptionNeeded); //校验\r\n        let newObj = packaingDescriptionObjChecker(packagingDescriptionObj, value);\r\n        let setter = setPackagingDescriptionObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('wholeSalePkgDesc', newObj); //通知父组件\r\n    } //包装方式修改\r\n\r\n    function getPriceObj() {\r\n        return setPriceObj(priceObjMaker());\r\n    } //获取阶梯价格\r\n\r\n    const onPriceEditMode = () => {\r\n        if (priceEdit) {\r\n            onPriceChange('edit');\r\n            //提交更改\r\n        } else {\r\n            //初始化\r\n            let priceArr = priceObj._values;\r\n            let lastPrice = priceArr[priceArr.length - 1];\r\n            priceSaver = { ...lastPrice };\r\n        }\r\n        setPriceEdit((prev) => !prev);\r\n        return;\r\n    }; //阶梯价格编辑模式\r\n\r\n    const onPriceSave = (key, value, index) => {\r\n        if (!priceSaver) priceSaver = {};\r\n        priceSaver[key] = Number(value);\r\n        if (priceSaver.quantity && priceSaver.price) onPriceChange('edit', index);\r\n        return;\r\n    }; //阶梯价格暂存\r\n\r\n    const onPriceChange = (mode, index) => {\r\n        let newObj = { ...priceObj };\r\n        let priceArr = newObj._values;\r\n        if (mode === 'add') {\r\n            let lastPrice = priceArr[priceArr.length - 1];\r\n            if (!lastPrice.price || priceArr.length >= 4) return; //最多四组价格，且已经完成填写\r\n            priceArr = [...priceArr, { quantity: '', price: '' }]; //添加一组阶梯价格\r\n        } else if (mode === 'edit') {\r\n            if (!priceSaver) return;\r\n            if (!priceSaver.price || !priceSaver.quantity) return queryResult(false, langPack.steps.nullNotAllowed);\r\n            if (priceArr.length !== 1) {\r\n                if (priceSaver.quantity <= priceArr[priceArr.length - 2].quantity) return queryResult(false, langPack.steps.MOQError);\r\n                if (priceSaver.price >= priceArr[priceArr.length - 2].price) return queryResult(false, langPack.steps.PriceError);\r\n            }\r\n            //MOQ、价格与前一个值比对（规定就是这样） & 检查是否非空\r\n            priceArr.pop();\r\n            priceArr = [...priceArr, priceSaver]; //价格写入\r\n            priceSaver = '';\r\n        } else if (mode === 'remove') {\r\n            if (priceArr.length <= 1) return;\r\n            priceArr.splice(index, 1); //移除指定行\r\n        }\r\n        newObj._values = priceArr;\r\n        let setter = setPriceObj;\r\n        if (mode === 'add') return setter(newObj); //更新到JSX; （没有实质性更改，只是模板）\r\n        priceArr = priceArr.filter((obj) => obj.price);\r\n        if (!priceArr.length) return; //没有价格\r\n        newObj = priceObjChecker(newObj, priceArr);\r\n        setter(newObj); //更新到JSX\r\n        onMOQChanged(priceArr[0].quantity); //同步到MOQ\r\n        setPriceEdit((prev) => !prev); //自动保存\r\n        return onModified('ladderPrice', newObj);\r\n    }; //阶梯价格修改 & 确认\r\n\r\n    function getLadderPeriodObj() {\r\n        return setLadderPeriodObj(ladderPeriodObjMaker());\r\n    } //获取发货期\r\n\r\n    const onPeriodEditMode = () => {\r\n        if (periodEdit) {\r\n            onPeriodChange('edit');\r\n            //提交更改\r\n        } else {\r\n            //初始化\r\n            let newArr = ladderPeriodObj._values;\r\n            let lastObj = newArr[newArr.length - 1];\r\n            periodSaver = { ...lastObj };\r\n        }\r\n        setPeriodEdit((prev) => !prev);\r\n        return;\r\n    }; //发货期编辑模式\r\n\r\n    const onPeriodSave = (key, value, index) => {\r\n        if (!periodSaver) periodSaver = {};\r\n        periodSaver[key] = Number(value);\r\n        if (periodSaver.quantity && periodSaver.day) onPeriodChange('edit', index);\r\n        return;\r\n    }; //发货期暂存\r\n\r\n    const onPeriodChange = (mode, index) => {\r\n        let newObj = { ...ladderPeriodObj };\r\n        let newArr = newObj._values;\r\n        if (mode === 'add') {\r\n            let lastObj = newArr[newArr.length - 1];\r\n            if (!lastObj.day || newArr.length >= 3) return; //最多四组价格，且已经完成填写\r\n            newArr = [...newArr, { quantity: '', day: '' }]; //添加一组发货期\r\n        } else if (mode === 'edit') {\r\n            if (!periodSaver) return;\r\n            if (!periodSaver.day || !periodSaver.quantity) return queryResult(false, langPack.steps.nullNotAllowed);\r\n            newArr.pop();\r\n            newArr = [...newArr, periodSaver]; //价格写入\r\n            periodSaver = '';\r\n        } else if (mode === 'remove') {\r\n            if (newArr.length <= 1) return;\r\n            newArr.splice(index, 1); //移除指定行\r\n        }\r\n        newObj._values = newArr;\r\n        let setter = setLadderPeriodObj;\r\n        if (mode === 'add') return setter(newObj); //更新到JSX; （没有实质性更改，只是模板）\r\n        newArr = newArr.filter((obj) => obj.day);\r\n        if (!newArr.length) return; //没有填写发货期\r\n        newObj = ladderPeriodObjChecker(newObj, newArr);\r\n        setter(newObj); //更新到JSX\r\n        if (!rtsProduct && priceUnitObj._values) {\r\n            let { quantity, day } = newArr[newArr.length - 1];\r\n            let supply_number = Number(quantity) / Number(day);\r\n            let time_unit = 'Day';\r\n            let quantity_unit = priceUnitObj._values.value;\r\n            onSupplyAbilityChange({ supply_number, time_unit, quantity_unit }); //同步到MOQ\r\n        }\r\n        setPeriodEdit((prev) => !prev); //自动保存\r\n        return onModified('ladderPeriod', newObj);\r\n    }; //发货期修改 & 确认\r\n\r\n    function getSupplyAbilityObj() {\r\n        return setSupplyAbilityObj(supplyAbilityObjMaker());\r\n    } //获取产品类型\r\n\r\n    function onSupplyAbilityChange(valueObj) {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productSupplyAbilityNeeded); //校验\r\n        let newObj = supplyAbilityObjChecker(supplyAbilityObj, valueObj);\r\n        let setter = setSupplyAbilityObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('supply', newObj); //通知父组件\r\n    } //产品类型修改\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={langPack.form.subject}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    key={JSON.stringify(subjectObj._values)}\r\n                    id=\"productTitle\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{subjectObj.name}</Typography>}\r\n                    defaultValue={subjectObj._values ? subjectObj._values.value : ''}\r\n                    onBlur={(e) => onSubjectChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title={langPack.form.keywords}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    key={JSON.stringify(keywordObj._values)}\r\n                    id=\"keywords\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{keywordObj.name}</Typography>}\r\n                    defaultValue={keywordObj._values ? keywordObj._values.value : ''}\r\n                    onBlur={(e) => onKeywordChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Autocomplete\r\n                id=\"add-payment-method\"\r\n                key={JSON.stringify(paymentMethodObj._values)}\r\n                sx={{ display: 'inline' }}\r\n                multiple\r\n                limitTags={1}\r\n                disableCloseOnSelect={true}\r\n                onBlur={onPaymentMethodConfirm}\r\n                onChange={(e, value) => onPaymentMethodChange(value)}\r\n                defaultValue={paymentMethodObj._values}\r\n                options={paymentMethodObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderTags={(options, getTagProps) =>\r\n                    options.map((option, index) => <Chip variant=\"outlined\" label={option.value} {...getTagProps({ index })} />)\r\n                }\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.value}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{paymentMethodObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Autocomplete\r\n                id=\"add-price-unit\"\r\n                key={priceUnitObj._values ? JSON.stringify(priceUnitObj._values.value) : ''}\r\n                sx={{ display: 'inline' }}\r\n                onChange={(e, value) => onPriceUnitChange(value)}\r\n                defaultValue={priceUnitObj._values}\r\n                options={priceUnitObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.key}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{priceUnitObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip title={langPack.form.min_order_quantity}>\r\n                <TextField\r\n                    type=\"number\"\r\n                    sx={{ maxWidth: '280px', display: 'none' }}\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(priceObj._values)}\r\n                    id=\"min_order_quantity\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{MOQObj.name}</Typography>}\r\n                    value={priceObj._values ? priceObj._values[0].quantity : MOQObj._values ? MOQObj._values.value : ''}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                {priceUnitObj._values ? priceUnitObj._values.key : langPack.form.pieces}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                    onBlur={(e) => onMOQChanged(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <br />\r\n            <Autocomplete\r\n                id=\"change-logistics-mode\"\r\n                key={JSON.stringify(logisticsModeObj._values)}\r\n                multiple\r\n                disableCloseOnSelect={true}\r\n                sx={{ display: 'inline' }}\r\n                onBlur={onLogisticsConfirm}\r\n                onChange={(e, value) => onLogisticsChange(value)}\r\n                defaultValue={logisticsModeObj._values ? logisticsModeObj._values.map((obj) => obj.key) : []}\r\n                options={logisticsModeObj._options ? logisticsModeObj._options.map((obj) => obj.key) : []}\r\n                renderTags={(options, getTagProps) =>\r\n                    options.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\r\n                }\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{logisticsModeObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip title={langPack.form.subject}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(portObj._values)}\r\n                    id=\"port\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{portObj.name}</Typography>}\r\n                    defaultValue={portObj._values ? portObj._values.value : ''}\r\n                    onBlur={(e) => onPortChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title={langPack.form.subject}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(packagingDescriptionObj._values)}\r\n                    id=\"packaging-description\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{packagingDescriptionObj.name}</Typography>}\r\n                    defaultValue={packagingDescriptionObj._values ? packagingDescriptionObj._values.value : ''}\r\n                    onBlur={(e) => onPackagingDescriptionChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <hr />\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{langPack.table.min_order_quantity}</TableCell>\r\n                        <TableCell>{langPack.table.price}</TableCell>\r\n                        <TableCell>\r\n                            <Button startIcon={priceEdit ? <CheckIcon /> : <EditIcon />} onClick={onPriceEditMode}>\r\n                                {priceEdit ? langPack.steps.editDone : langPack.steps.editPrice}\r\n                            </Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {priceObj && priceObj._values ? (\r\n                        priceObj._values.map((obj, index) => (\r\n                            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} hover={true}>\r\n                                <TableCell>\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Typography sx={{ display: 'inline' }}>≤</Typography>\r\n                                        {priceEdit && index === priceObj._values.length - 1 ? (\r\n                                            <TextField\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                defaultValue={obj.quantity}\r\n                                                onBlur={(e) => onPriceSave('quantity', e.target.value, index)}\r\n                                            />\r\n                                        ) : (\r\n                                            obj.quantity\r\n                                        )}\r\n                                        <Typography sx={{ display: 'inline' }}>\r\n                                            {`&nbsp;`.decodeHTMLEntity()} {priceUnitObj._values ? priceUnitObj._values.key : ''}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {priceEdit && index === priceObj._values.length - 1 ? (\r\n                                        <TextField\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            defaultValue={obj.price}\r\n                                            onBlur={(e) => onPriceSave('price', e.target.value, index)}\r\n                                        />\r\n                                    ) : (\r\n                                        obj.price\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {index === 0 ? (\r\n                                        <Button startIcon={<AddIcon />} onClick={() => onPriceChange('add', index)}>\r\n                                            {langPack.steps.add}\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button startIcon={<RemoveIcon />} onClick={() => onPriceChange('remove', index)}>\r\n                                            {langPack.steps.remove}\r\n                                        </Button>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n            <hr />\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{langPack.table.min_order_quantity}</TableCell>\r\n                        <TableCell>{langPack.table.day}</TableCell>\r\n                        <TableCell>\r\n                            <Button startIcon={periodEdit ? <CheckIcon /> : <EditIcon />} onClick={onPeriodEditMode}>\r\n                                {periodEdit ? langPack.steps.editDone : langPack.steps.editPeriod}\r\n                            </Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {ladderPeriodObj && ladderPeriodObj._values ? (\r\n                        ladderPeriodObj._values.map((obj, index) => (\r\n                            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} hover={true}>\r\n                                <TableCell>\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            alignItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        <Typography sx={{ display: 'inline' }}>≤</Typography>\r\n                                        {periodEdit && index === ladderPeriodObj._values.length - 1 ? (\r\n                                            <TextField\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                                defaultValue={obj.quantity}\r\n                                                onBlur={(e) => onPeriodSave('quantity', e.target.value, index)}\r\n                                            />\r\n                                        ) : (\r\n                                            obj.quantity\r\n                                        )}\r\n                                        <Typography sx={{ display: 'inline' }}>\r\n                                            {`&nbsp;`.decodeHTMLEntity()} {priceUnitObj._values ? priceUnitObj._values.key : ''}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {periodEdit && index === ladderPeriodObj._values.length - 1 ? (\r\n                                        <TextField\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            defaultValue={obj.day}\r\n                                            onBlur={(e) => onPeriodSave('day', e.target.value, index)}\r\n                                        />\r\n                                    ) : (\r\n                                        obj.day\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {index === 0 ? (\r\n                                        <Button startIcon={<AddIcon />} onClick={() => onPeriodChange('add', index)}>\r\n                                            {langPack.steps.add}\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <Button startIcon={<RemoveIcon />} onClick={() => onPeriodChange('remove', index)}>\r\n                                            {langPack.steps.remove}\r\n                                        </Button>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    xmlSchema: PropTypes.object,\r\n    productFn: PropTypes.object,\r\n    langPack: PropTypes.object,\r\n    group_id: PropTypes.number,\r\n    rtsProduct: PropTypes.bool,\r\n    productModified: PropTypes.object,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, Autocomplete, Checkbox, Chip, Button, MenuItem, TextField, Divider, Tooltip } from '@mui/material';\r\nimport { Add as AddIcon, Check as CheckIcon, Cancel as CancelIcon, DeleteOutline as DeleteIcon } from '@mui/icons-material';\r\n\r\nlet attributeSaver;\r\nfunction App({ langPack, productFn, xmlSchema, productModified, onModified }) {\r\n    console.log('attributes running');\r\n    //商品属性\r\n    let [attributeObj, setAttributeObj] = useState({}); //使用中的属性\r\n    let [addAttribute, setAddAttribute] = useState(false); //需要添加？\r\n    let [optionSelected, setOptionSelected] = useState(''); //当前选中项\r\n    let { attributeObjMaker, attributeObjChecker } = productFn;\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { icbuCatProp } = productModified;\r\n        icbuCatProp ? setAttributeObj(icbuCatProp) : getAttributeObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getAttributeObj() {\r\n        setAttributeObj(attributeObjMaker());\r\n    } //在用的属性\r\n\r\n    const onAttributeConfirm = () => {\r\n        if (!attributeSaver) return console.log('未修改任何属性呢');\r\n        let newObj = attributeObjChecker(attributeObj, attributeSaver);\r\n        let setter = setAttributeObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('icbuCatProp', newObj); //通知父组件\r\n    };\r\n\r\n    const onAttributeChange = (mainAttributeObj, value) => {\r\n        attributeSaver = [mainAttributeObj, value];\r\n        return;\r\n    };\r\n\r\n    const onOptionChange = (values) => {\r\n        setOptionSelected(values);\r\n        return;\r\n    };\r\n\r\n    const onOptionConfirm = () => {\r\n        if (!optionSelected) return;\r\n        let optionArr = optionSelected.map((value) => attributeObj._options.find((obj) => obj.name === value));\r\n        let newObj = { ...attributeObj };\r\n        let newValueArr = newObj._values || [];\r\n        optionArr.forEach((optionObj) => {\r\n            if (!newValueArr.length || !newValueArr.find((valueObj) => valueObj.id === optionObj.id)) {\r\n                let { id, name, type } = optionObj;\r\n                let newValue = { id, name, type };\r\n                newValue._values = /multi(?!Complex)/.test(type) ? [] : {};\r\n                newValueArr.push(newValue);\r\n            } //避免属性重复\r\n        });\r\n        newObj._values = newValueArr;\r\n        setAttributeObj(newObj);\r\n        setOptionSelected('');\r\n        setAddAttribute((prev) => !prev);\r\n        return;\r\n    };\r\n\r\n    const onAttributeClear = () => {\r\n        let newObj = attributeObjChecker(attributeObj, attributeSaver, true);\r\n        let setter = setAttributeObj;\r\n        setter(newObj); //更新到JSX\r\n        return;\r\n    }; //清理空属性\r\n\r\n    return (\r\n        <>\r\n            <div style={{ paddingTop: '10px', paddingBottom: '20px' }}>\r\n                {addAttribute ? (\r\n                    <>\r\n                        {attributeObj._options && attributeObj._options.length ? (\r\n                            <span style={{ display: 'flex', flexDirection: 'row', alignItems: 'stretch' }}>\r\n                                <Autocomplete\r\n                                    id=\"attribute-options\"\r\n                                    key={attributeObj._options ? attributeObj._options : 'attribute-options'}\r\n                                    sx={{ display: 'inline' }}\r\n                                    multiple\r\n                                    disableCloseOnSelect={true}\r\n                                    onChange={(e, value) => onOptionChange(value)}\r\n                                    options={attributeObj._options.map((obj) => obj.name)}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                                            {option}\r\n                                        </li>\r\n                                    )}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            fullWidth={false}\r\n                                            sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                            label={<Typography variant=\"h3\">{attributeObj.name}</Typography>}\r\n                                            placeholder={langPack.form.selectOrInput}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                                <Button startIcon={<CheckIcon />} onClick={onOptionConfirm}>\r\n                                    {langPack.common.yes}\r\n                                </Button>\r\n                                <Button startIcon={<CancelIcon />} onClick={() => setAddAttribute((prev) => !prev)}>\r\n                                    {langPack.common.no}\r\n                                </Button>\r\n                            </span>\r\n                        ) : (\r\n                            <Typography variant=\"body1\">{langPack.form.attributeMissing}</Typography>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Tooltip title={langPack.steps.addAttributes}>\r\n                            <Button startIcon={<AddIcon />} onClick={() => setAddAttribute((prev) => !prev)}>\r\n                                {langPack.steps.addAttributes}\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title={langPack.steps.clearAttributes}>\r\n                            <Button startIcon={<DeleteIcon />} onClick={onAttributeClear}>\r\n                                {langPack.steps.clearAttributes}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Divider />\r\n            <br />\r\n            {attributeObj._values && attributeObj._values.length ? (\r\n                attributeObj._values.map((obj) => {\r\n                    return !/input/gi.test(obj.type) ? (\r\n                        /multi(?!Complex)/.test(obj.type) ? ( //multiComplex的值需要发起额外的API请求才能获取\r\n                            <Autocomplete\r\n                                id=\"current-attributes-multiple\"\r\n                                key={obj.id + JSON.stringify(obj._values)}\r\n                                sx={{ display: 'inline' }}\r\n                                limitTags={1}\r\n                                multiple\r\n                                disableCloseOnSelect={true}\r\n                                onBlur={onAttributeConfirm}\r\n                                onChange={(e, value) => onAttributeChange(obj, value)}\r\n                                options={attributeObj._options.find((option) => option.id === obj.id)._options.map((obj) => obj.key)}\r\n                                defaultValue={obj._values.map((obj) => obj.key)}\r\n                                renderTags={(options, getTagProps) =>\r\n                                    options.map((option, index) => <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />)\r\n                                }\r\n                                renderOption={(props, option, { selected }) => (\r\n                                    <li {...props}>\r\n                                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                                        {option}\r\n                                    </li>\r\n                                )}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        fullWidth={false}\r\n                                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                        label={<Typography variant=\"h3\">{obj.name}</Typography>}\r\n                                        placeholder={langPack.form.selectOrInput}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        ) : (\r\n                            <Autocomplete\r\n                                id=\"current-attributes-single\"\r\n                                key={obj.id + JSON.stringify(obj._values)}\r\n                                sx={{ display: 'inline' }}\r\n                                onBlur={onAttributeConfirm}\r\n                                onChange={(e, value) => onAttributeChange(obj, value)}\r\n                                defaultValue={obj._values.key}\r\n                                options={attributeObj._options.find((option) => option.id === obj.id)._options.map((obj) => obj.key)}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        fullWidth={false}\r\n                                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                        label={<Typography variant=\"h3\">{obj.name}</Typography>}\r\n                                        placeholder={langPack.form.selectOrInput}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        )\r\n                    ) : (\r\n                        <TextField\r\n                            key={obj.id + JSON.stringify(obj._values)}\r\n                            id=\"current-attributes-input-only\"\r\n                            fullWidth={false}\r\n                            defaultValue={obj._values.key || ''}\r\n                            onBlur={onAttributeConfirm}\r\n                            onChange={(e) => onAttributeChange(obj, e.target.value)}\r\n                            sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                            label={<Typography variant=\"h3\">{obj.name}</Typography>}\r\n                            placeholder={langPack.form.selectOrInput}\r\n                        />\r\n                    );\r\n                })\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    langPack: PropTypes.object,\r\n    productFn: PropTypes.object,\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    xmlGetField: PropTypes.func,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Typography, Autocomplete, Button, Checkbox, InputAdornment, MenuItem, TextField, Divider, Tooltip, Chip } from '@mui/material';\r\nimport { Add as AddIcon, Check as CheckIcon, Cancel as CancelIcon, DeleteOutline as DeleteIcon } from '@mui/icons-material';\r\n\r\nfunction App({ langPack, productFn, onModified, productModified, xmlSchema }) {\r\n    console.log('service running');\r\n    let customSaver = '';\r\n    let [customObj, setCustomObj] = useState({}); //定制信息\r\n    let [addCustom, setAddCustom] = useState(false); //是否添加\r\n    let [customSelected, setCustomSelected] = useState(''); //当前选中项\r\n    let [customStatusObj, setCustomStatusObj] = useState({}); //定制状态\r\n    let { customStatusObjMaker, customStatusObjChecker, customObjMaker, customObjChecker } = productFn;\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { customizedServices, productLightCustom } = productModified;\r\n        customizedServices ? setCustomObj(customizedServices) : getCustomObj();\r\n        productLightCustom ? setCustomStatusObj(productLightCustom) : getCustomStatusObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getCustomStatusObj() {\r\n        return setCustomStatusObj(customStatusObjMaker());\r\n    } //获取定制服务支持状态\r\n\r\n    function onCustomStatusChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productCustomizationNeeded); //校验\r\n        let setter = setCustomStatusObj;\r\n        let newObj = customStatusObjChecker(customStatusObj, value);\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productLightCustom', newObj); //通知父组件\r\n    } //定制服务支持状态修改\r\n\r\n    function getCustomObj() {\r\n        return setCustomObj(customObjMaker());\r\n    } //获取定制内容\r\n\r\n    const onCustomOptionChange = (value) => {\r\n        setCustomSelected(value);\r\n        return;\r\n    }; //选择选项\r\n\r\n    const onCustomOptionConfirm = () => {\r\n        if (!customSelected || !customSelected.trim()) return;\r\n        let newObj = { ...customObj };\r\n        let optionFound = newObj._options.find((obj) => obj.key === customSelected);\r\n        let key = optionFound ? optionFound.value : customSelected;\r\n        if (!newObj._values) newObj._values = []; //初始化\r\n        let valueArr = newObj._values.filter((obj) => obj.key !== key);\r\n        if (valueArr.length >= 5) return;\r\n        valueArr.push({ key, value: 1 });\r\n        newObj._values = valueArr;\r\n        setCustomObj(newObj);\r\n        console.log(newObj);\r\n        setCustomSelected('');\r\n        setAddCustom((prev) => !prev);\r\n        return;\r\n    }; //确认选项\r\n\r\n    const onCustomChange = (obj) => {\r\n        if (!customSaver) customSaver = {};\r\n        let finalValue = Number(obj.value);\r\n        if (isNaN(finalValue)) return queryResult(false, langPack.steps.numberOnly);\r\n        customSaver = { key: obj.key, value: finalValue };\r\n        return;\r\n    }; //定制项变化\r\n\r\n    const onCustomConfirm = () => {\r\n        if (!customSaver) return;\r\n        let setter = setCustomObj;\r\n        let newObj = customObjChecker(customObj, customSaver);\r\n        customSaver = '';\r\n        setter(newObj); //更新到JSX\r\n        onModified('customizedServices', newObj);\r\n        onCustomStatusChange('1'); //同步到支持定制选项\r\n        return;\r\n    }; //确认定制项\r\n\r\n    const onCustomClear = () => {\r\n        let newObj = { ...customObj };\r\n        newObj._values = newObj._values.filter((obj) => obj.value);\r\n        setCustomObj(newObj);\r\n        return;\r\n    }; //清除无效的定制项\r\n\r\n    return (\r\n        <>\r\n            <div style={{ paddingTop: '10px', paddingBottom: '20px' }}>\r\n                {!addCustom ? (\r\n                    <>\r\n                        <Tooltip title={langPack.steps.addCustomInfo}>\r\n                            <Button startIcon={<AddIcon />} onClick={() => setAddCustom((prev) => !prev)}>\r\n                                {langPack.steps.addCustomInfo}\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Tooltip title={langPack.steps.clearCustomInfo}>\r\n                            <Button startIcon={<DeleteIcon />} onClick={onCustomClear}>\r\n                                {langPack.steps.clearCustomInfo}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </>\r\n                ) : (\r\n                    <span style={{ display: 'flex', flexDirection: 'row', alignItems: 'stretch' }}>\r\n                        {customObj._options && customObj._options.length ? (\r\n                            <Autocomplete\r\n                                id=\"add-custom\"\r\n                                freeSolo\r\n                                key={customObj._options || 'options'}\r\n                                sx={{ display: 'inline' }}\r\n                                onChange={(e, value) => onCustomOptionChange(value)}\r\n                                onInputChange={(e, value) => onCustomOptionChange(value)}\r\n                                options={customObj._options.map((obj) => obj.key)}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        fullWidth={false}\r\n                                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                                        label={<Typography variant=\"h3\">{customObj.name}</Typography>}\r\n                                        placeholder={langPack.form.selectOrInput}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <Button startIcon={<CheckIcon />} onClick={() => onCustomOptionConfirm()}>\r\n                            {langPack.common.yes}\r\n                        </Button>\r\n                        <Button startIcon={<CancelIcon />} onClick={() => setAddCustom((prev) => !prev)}>\r\n                            {langPack.common.no}\r\n                        </Button>\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <Divider />\r\n            <br />\r\n            {customObj._values && customObj._values.length ? (\r\n                customObj._values.map((obj, index) => (\r\n                    <Tooltip title={langPack.table.min_order_quantity} key={index}>\r\n                        <TextField\r\n                            key={obj.key}\r\n                            type=\"number\"\r\n                            fullWidth={false}\r\n                            defaultValue={obj.value}\r\n                            onChange={(e) => {\r\n                                onCustomChange({ key: obj.key, value: e.target.value });\r\n                            }}\r\n                            onBlur={onCustomConfirm}\r\n                            label={<Typography variant=\"h3\">{obj.key}</Typography>}\r\n                            placeholder={langPack.form.selectOrInput}\r\n                        />\r\n                    </Tooltip>\r\n                ))\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    langPack: PropTypes.object,\r\n    productFn: PropTypes.object,\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport {\r\n    Typography,\r\n    Autocomplete,\r\n    Button,\r\n    Checkbox,\r\n    InputAdornment,\r\n    MenuItem,\r\n    TextField,\r\n    Divider,\r\n    Tooltip,\r\n    Chip,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from '@mui/material';\r\nimport {\r\n    Add as AddIcon,\r\n    Remove as RemoveIcon,\r\n    Check as CheckIcon,\r\n    Cancel as CancelIcon,\r\n    ModeEdit as EditIcon,\r\n    Clear as ClearIcon,\r\n    DeleteOutline as DeleteIcon\r\n} from '@mui/icons-material';\r\n\r\nfunction App({ xmlSchema, productFn, langPack, productModified, onModified }) {\r\n    console.log('RTS running');\r\n    //运费模板\r\n    let [shippingTemplateObj, setShippingTemplateObj] = useState({});\r\n    //产品毛重\r\n    let [weightObj, setWeightObj] = useState({});\r\n    //产品长宽高\r\n    let [measureObj, setMeasureObj] = useState({});\r\n    //销售模式\r\n    let [saleTypeObj, setSaleTypeObj] = useState({});\r\n    //销售模式附带（一批等于）\r\n    let [batchObj, setBatchObj] = useState({});\r\n    let {\r\n        shippingTemplateObjMaker,\r\n        shippingTemplateObjChecker,\r\n        weightObjMaker,\r\n        weightObjChecker,\r\n        measureObjMaker,\r\n        measureObjChecker,\r\n        saleTypeObjMaker,\r\n        saleTypeObjChecker,\r\n        batchObjMaker,\r\n        batchObjChecker\r\n    } = productFn;\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { shippingTemplateId, pkgWeight, pkgMeasure, saleType, batchNum } = productModified;\r\n        shippingTemplateId ? setShippingTemplateObj(shippingTemplateId) : getShippingTemplateObj();\r\n        pkgWeight ? setWeightObj(pkgWeight) : getWeightObj();\r\n        pkgMeasure ? setMeasureObj(pkgMeasure) : getMeasureObj();\r\n        saleType ? setSaleTypeObj(saleType) : getSaleTypeObj();\r\n        batchNum ? setBatchObj(batchNum) : getBatchObj();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getShippingTemplateObj() {\r\n        return setShippingTemplateObj(shippingTemplateObjMaker());\r\n    } //获取运费模板\r\n\r\n    const onShippingTemplateChange = (valueObj) => {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productSubjectNeeded); //校验\r\n        let newObj = shippingTemplateObjChecker(shippingTemplateObj, valueObj);\r\n        let setter = setShippingTemplateObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('shippingTemplateId', newObj); //通知父组件\r\n    }; //运费模板修改\r\n\r\n    function getWeightObj() {\r\n        return setWeightObj(weightObjMaker());\r\n    } //获取毛重\r\n\r\n    const onWeightChange = (value) => {\r\n        if (!value) return queryResult(false, langPack.steps.productWeightNeeded); //校验\r\n        let newObj = weightObjChecker(weightObj, value);\r\n        let setter = setWeightObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('pkgWeight', newObj); //通知父组件\r\n    };\r\n\r\n    function getMeasureObj() {\r\n        return setMeasureObj(measureObjMaker());\r\n    } //获取长宽高\r\n\r\n    const onMeasureChange = (value) => {\r\n        let newObj = measureObjChecker(measureObj, value);\r\n        if (!newObj) return queryResult(false, langPack.steps.productMeasureNeeded); //校验\r\n        let setter = setMeasureObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('pkgMeasure', newObj);\r\n    }; //长宽高确认\r\n\r\n    function getSaleTypeObj() {\r\n        return setSaleTypeObj(saleTypeObjMaker());\r\n    } //获取销售方式\r\n\r\n    const onSaleTypeChange = (valueObj) => {\r\n        if (!valueObj) return queryResult(false, langPack.steps.productTypeNeeded); //校验\r\n        let newObj = saleTypeObjChecker(saleTypeObj, valueObj);\r\n        let setter = setSaleTypeObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('saleType', newObj); //通知父组件\r\n    };\r\n\r\n    function getBatchObj() {\r\n        return setBatchObj(batchObjMaker());\r\n    } //获取毛重\r\n\r\n    const onBatchChange = (value) => {\r\n        if (!value) return queryResult(false, langPack.steps.productWeightNeeded); //校验\r\n        let newObj = batchObjChecker(batchObj, value);\r\n        let setter = setBatchObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('batchNum', newObj); //通知父组件\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Autocomplete\r\n                id=\"select-shipping-template\"\r\n                key={JSON.stringify(shippingTemplateObj._values)}\r\n                sx={{ display: 'inline' }}\r\n                onChange={(e, value) => onShippingTemplateChange(value)}\r\n                defaultValue={shippingTemplateObj._values}\r\n                options={shippingTemplateObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.key}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{shippingTemplateObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip title={langPack.steps.numberOnly}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    key={weightObj._values}\r\n                    id=\"port\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{weightObj.name}</Typography>}\r\n                    defaultValue={weightObj._values ? weightObj._values.value : ''}\r\n                    onBlur={(e) => onWeightChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Tooltip title={langPack.form.measure}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    key={JSON.stringify(measureObj._values)}\r\n                    id=\"measure\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{measureObj.name}</Typography>}\r\n                    defaultValue={\r\n                        measureObj._values\r\n                            ? `${measureObj._values[0].value} * ${measureObj._values[1].value} * ${measureObj._values[2].value}`\r\n                            : ''\r\n                    }\r\n                    onBlur={(e) => onMeasureChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n            <Autocomplete\r\n                id=\"add-sale-type\"\r\n                key={JSON.stringify(saleTypeObj._values)}\r\n                sx={{ display: 'inline' }}\r\n                onChange={(e, value) => onSaleTypeChange(value)}\r\n                defaultValue={saleTypeObj._values}\r\n                options={saleTypeObj._options || []}\r\n                getOptionLabel={(option) => option.key}\r\n                isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                        <Checkbox style={{ marginRight: 8 }} checked={selected} />\r\n                        {option.key}\r\n                    </li>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        fullWidth={false}\r\n                        sx={{ marginTop: '13px', minWidth: '220px' }}\r\n                        label={<Typography variant=\"h3\">{saleTypeObj.name}</Typography>}\r\n                        placeholder={langPack.form.selectOrInput}\r\n                    />\r\n                )}\r\n            />\r\n            <Tooltip\r\n                title={langPack.steps.numberOnly}\r\n                sx={{ display: saleTypeObj._values && saleTypeObj._values.value !== 'normal' ? 'inline-block' : 'none' }}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    key={batchObj._values}\r\n                    id=\"batch\"\r\n                    variant=\"outlined\"\r\n                    label={<Typography variant=\"h3\">{batchObj.name}</Typography>}\r\n                    defaultValue={batchObj._values ? batchObj._values.value : ''}\r\n                    onBlur={(e) => onBatchChange(e.target.value)}\r\n                />\r\n            </Tooltip>\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    xmlSchema: PropTypes.object,\r\n    productFn: PropTypes.object,\r\n    langPack: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    onModified: PropTypes.func\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\r\nimport { useState, useEffect, useRef, lazy } from 'react';\r\nimport JoditEditor from 'jodit-react';\r\nimport PropTypes from 'prop-types';\r\nimport Loadable from 'ui-component/Loadable';\r\nconst Photo = Loadable(lazy(() => import('views/photo')));\r\n\r\n// material-ui\r\nimport { Typography, Tooltip, Button, Dialog, DialogTitle } from '@mui/material';\r\nimport { Cloud as CloudIcon, Build as BuildIcon } from '@mui/icons-material';\r\n\r\nfunction ProductDetail({ productFn, xmlSchema, localization, productInfo, productModified, onModified, langPack }) {\r\n    const editor = useRef(null);\r\n    const iconToggleMagic = useRef(null);\r\n    const iconCloudImage = useRef(null);\r\n    let [descriptionObj, setDescriptionObj] = useState({});\r\n    let [descriptionTypeObj, setDescriptionTypeObj] = useState({});\r\n    let [cloudImageArr, setCloudImageArr] = useState([]); //导入的云图片\r\n    let [dialogOpen, setDialogOpen] = useState(false); //选择图片的对话框状态\r\n    let [smartEdit, setSmartEdit] = useState(false); //是否开启智能编辑\r\n    let { descriptionObjMaker, descriptionObjChecker, descriptionTypeObjMaker, descriptionTypeObjChecker } = productFn;\r\n\r\n    useEffect(() => {\r\n        if (!xmlSchema) return;\r\n        let { superText, productDescType } = productModified;\r\n        superText ? setDescriptionObj(superText) : getDescriptionObj();\r\n        productDescType ? setDescriptionTypeObj(productDescType) : getDescriptionTypeObj();\r\n        HTMLEditorFormatter();\r\n        return;\r\n    }, [xmlSchema]);\r\n\r\n    function getDescriptionObj() {\r\n        let fieldObj = descriptionObjMaker();\r\n        if (!fieldObj.values) {\r\n            if (productInfo.description !== undefined) {\r\n                fieldObj._values = { value: productInfo.description };\r\n                setSmartEdit(true);\r\n            }\r\n        }\r\n        return setDescriptionObj(fieldObj);\r\n    } //获取产品详情\r\n\r\n    function onDescriptionChange(value) {\r\n        if (!value || !value.trim()) return queryResult(false, langPack.steps.productDetailsNeeded); //校验\r\n        if (value === descriptionObj._values.value) return console.log('未修改'); //未修改\r\n        value = value.replace(/\\n/g, '').trim();\r\n        let newObj = descriptionObjChecker(descriptionObj, value);\r\n        let setter = setDescriptionObj;\r\n        setter(newObj); //更新到JSX\r\n        onDescriptionTypeChange('2'); //同步更新到类型(目前只支持\"普通编辑\")\r\n        return onModified('superText', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    function getDescriptionTypeObj() {\r\n        return setDescriptionTypeObj(descriptionTypeObjMaker());\r\n    } //获取产品详情描述类型\r\n\r\n    function onDescriptionTypeChange(value) {\r\n        let newObj = descriptionTypeObjChecker(descriptionTypeObj, value);\r\n        let setter = setDescriptionTypeObj;\r\n        setter(newObj); //更新到JSX\r\n        return onModified('productDescType', newObj); //通知父组件\r\n    } //产品名称修改\r\n\r\n    //Cloud-Photo组件 相关事件\r\n    let onDialogClose = (submit) => {\r\n        setDialogOpen(false);\r\n        if (submit) {\r\n            let valueArr = cloudImageArr.map((obj) => {\r\n                return { ...obj, key: obj.id, value: obj.url };\r\n            });\r\n            return onImageChange(valueArr);\r\n        }\r\n        return setCloudImageArr([]); //清除传入值\r\n    }; //对话框关闭\r\n\r\n    let onPhotoSelected = (value) => {\r\n        if (!value.length) return;\r\n        setCloudImageArr(value);\r\n    }; //选择了图片，则存到当前component里\r\n\r\n    let onImageChange = (imageArr) => {\r\n        console.log(imageArr);\r\n        if (!imageArr.length) return;\r\n        let htmlArr = imageArr.map((imageObj) => {\r\n            return `<br /><img src='${imageObj.url}' />`;\r\n        });\r\n        let imgStr = htmlArr.join('');\r\n        onDescriptionChange(imgStr + editor.current.value);\r\n    };\r\n\r\n    async function uploadPhotos(photoFile) {\r\n        let paramObj = ma.photoUploadQuery({ file_name: photoFile.name || 'image.png', image_bytes: photoFile, group_id: 0 });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg || !msg.response.status) return queryResult(false, msg ? msg.response.result : '');\r\n        let res = ma.photoUploadCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        queryResult(status, langPack.steps.uploadSuccess);\r\n        return setTimeout(() => imageReplacer(result), 1234);\r\n    }\r\n\r\n    function imageReplacer(result) {\r\n        console.log('replacing');\r\n        let dom = editor.current.component.workplace;\r\n        let imgs = dom.querySelectorAll('img');\r\n        for (let img of Array.from(imgs)) {\r\n            if (!/alicdn.com/.test(img.src)) {\r\n                img.src = result.photobank_url;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function HTMLEditorFormatter() {\r\n        if (iconToggleMagic.current && iconCloudImage.current) {\r\n            setTimeout(() => {\r\n                Array.from(document.body.querySelectorAll(`svg[data-testid=\"BuildIcon\"]`)).forEach(\r\n                    (node) => (node.style = 'fill: orangered; stroke: orangered;')\r\n                );\r\n                Array.from(document.body.querySelectorAll(`svg[data-testid=\"CloudIcon\"]`)).forEach(\r\n                    (node) => (node.style = 'fill: skyblue; stroke: skyblue;')\r\n                );\r\n            }, 888);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {smartEdit ? (\r\n                <Typography variant=\"h4\" sx={{ paddingTop: '6px', paddingBottom: '6px', color: 'orangered' }}>\r\n                    {langPack.steps.productDescriptionTip}\r\n                </Typography>\r\n            ) : null}\r\n            <div style={{ display: 'block', flexDirection: 'column', justifyContent: 'center' }}>\r\n                <Dialog onClose={() => onDialogClose(true)} open={dialogOpen}>\r\n                    <DialogTitle>{langPack.steps.selectFromCloud}</DialogTitle>\r\n                    <Photo onPhotoSelected={onPhotoSelected} />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => onDialogClose(true)}>\r\n                        {langPack.common.yes}\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"error\" onClick={() => onDialogClose()}>\r\n                        {langPack.common.no}\r\n                    </Button>\r\n                </Dialog>\r\n            </div>\r\n            <div style={{ display: 'none' }}>\r\n                <BuildIcon ref={iconToggleMagic} />\r\n                <CloudIcon ref={iconCloudImage} />\r\n            </div>\r\n            <JoditEditor\r\n                ref={editor}\r\n                value={descriptionObj._values ? descriptionObj._values.value : ''}\r\n                config={{\r\n                    //全局变量\r\n                    language: localization.locale === 'zhCN' ? 'zh_cn' : 'en_us',\r\n                    enter: 'DIV',\r\n                    defaultActionOnPaste: 'insert_clear_html',\r\n                    toolbarAdaptive: false,\r\n                    toolbarButtonSize: 'large',\r\n                    imageProcessor: {\r\n                        replaceDataURIToBlobIdInView: false\r\n                    },\r\n                    buttons: [\r\n                        'source',\r\n                        'bold',\r\n                        'italic',\r\n                        'underline',\r\n                        'eraser',\r\n                        'ul',\r\n                        'ol',\r\n                        'left',\r\n                        'font',\r\n                        'fontsize',\r\n                        'brush',\r\n                        'image',\r\n                        'copyformat',\r\n                        'copy',\r\n                        'paste',\r\n                        'table',\r\n                        'link',\r\n                        {\r\n                            name: 'toggleSmartEdit',\r\n                            icon: iconToggleMagic.current ? iconToggleMagic.current.outerHTML : '',\r\n                            tooltip: langPack.steps.toggleSmartEdit,\r\n                            exec: function (editor, textNearby, obj) {\r\n                                let html = editor.value;\r\n                                html = html.replace(/\\n/gi, ''); //inline\r\n                                html = html.replace(/>/gi, '>\\n'); //按照tag 换行\r\n                                let htmlCodes = html.split('\\n');\r\n                                htmlCodes = htmlCodes.map((line) => {\r\n                                    if (!/<img src/gi.test(line)) return line;\r\n                                    line = / class=\"magic-(\\d{1,3})x000\"/gi.test(line)\r\n                                        ? line.replace(/x000/gi, '')\r\n                                        : line.replace(/ class=\"magic-(\\d{1,3})\"/gi, ` class=\"magic-$1` + `x000\"`);\r\n                                    return line;\r\n                                }); //去除smart editing 对图片的限制\r\n                                html = htmlCodes.join('');\r\n                                editor.value = html;\r\n                            }\r\n                        },\r\n                        {\r\n                            name: 'iconCloudImage',\r\n                            icon: iconCloudImage.current ? iconCloudImage.current.outerHTML : '',\r\n                            tooltip: langPack.steps.selectFromCloud,\r\n                            exec: function (editor, textNearby, obj) {\r\n                                setDialogOpen(true);\r\n                            }\r\n                        } /* \r\n                        {\r\n                            icon: iconToggleMagic.current ? iconToggleMagic.current.outerHTML : '',\r\n                            tooltip: '插入模板变量',\r\n                            exec: function (editor, textNearby, obj) {\r\n                                let varSelected = obj.control.text || '客户姓名';\r\n                                let varObj = {\r\n                                    贵司: '${company_name}',\r\n                                    客户姓名: '${contacts}',\r\n                                    客户邮箱: '${email}',\r\n                                    销售姓名: '${salesManager}'\r\n                                };\r\n                                let myVar = varObj[varSelected];\r\n                                editor.selection.removeMarkers();\r\n                                const text = editor.createInside.element('span');\r\n                                text.innerHTML = myVar;\r\n                                editor.selection.insertNode(text);\r\n                                editor.setEditorValue(); // for syncronize value between source textarea and editor\r\n                            },\r\n                            list: {\r\n                                '${company_name}': '贵司',\r\n                                '${contacts}': '客户姓名',\r\n                                '${email}': '客户邮箱',\r\n                                '${salesManager}': '销售姓名'\r\n                            }\r\n                        } */\r\n                    ],\r\n                    events: {\r\n                        paste: (e) => {\r\n                            //粘贴动作发生时\r\n                            console.log('粘贴...', e); //本地图片\r\n                            let items = e.clipboardData && e.clipboardData.items;\r\n                            if (!items || !items.length) return;\r\n                            for (let item of items) {\r\n                                if (item == null || item.type.match('image') == null) continue;\r\n                                let file = item.getAsFile();\r\n                                console.log(file);\r\n                                if (file == null) return console.log('无法获取图片');\r\n                                if (file.size > 10 * 1000 * 1000) {\r\n                                    return queryResult(false, 'size no larger than 10M. 图片文件大小不能超过10M');\r\n                                }\r\n                                return uploadPhotos(file);\r\n                            } // 此时file就是剪切板中的图片文件\r\n                        },\r\n                        beforePasteInsert: async (text) => {\r\n                            console.log('粘贴内容植入前...'); //网络图片\r\n                        } //粘贴到文本框时\r\n                    }\r\n                }}\r\n                tabIndex={1} // tabIndex of textarea\r\n                onBlur={(newContent) => onDescriptionChange(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                onChange={(newContent) => {}}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nProductDetail.propTypes = {\r\n    localization: PropTypes.object,\r\n    productInfo: PropTypes.object,\r\n    xmlSchema: PropTypes.object,\r\n    productModified: PropTypes.object,\r\n    productFn: PropTypes.object,\r\n    onModified: PropTypes.func,\r\n    langPack: PropTypes.object\r\n};\r\n\r\nexport default ProductDetail;\r\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useMediaQuery, Typography, Accordion, AccordionDetails, AccordionSummary } from '@mui/material';\r\nimport { ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { Languages } from './Languages';\r\nimport productFn from './component/productFn'; //functions\r\nimport EditStep from './component/EditStep';\r\nimport PhotoGallery from './component/PhotoGallery';\r\nimport ProductSummary from './component/ProductSummary';\r\nimport ProductAttribute from './component/ProductAttribute';\r\nimport ProductService from './component/ProductService';\r\nimport ProductRTS from './component/ProductRTS';\r\nimport ProductDescription from './component/ProductDescription';\r\nimport Confirmation from './component/Confirmation';\r\n\r\n// ==============================|| SINGLE PAGE APPLICATION ||============================== //\r\nlet productModified = {};\r\n\r\nconst App = () => {\r\n    //全局数据\r\n    console.log('productEdit app running');\r\n    let localization = useSelector((state) => state.localization); //多语言相关\r\n    let globalization = useSelector((state) => state.globalization); //全局数据\r\n    let [langPack, setLangPack] = useState(Languages[localization.locale]); //currentLanguage\r\n    let [loginData] = useState(globalization.baseData.loginData);\r\n    let navigate = useNavigate(); //react-router-dom\r\n    //控制.面板 //编辑步骤提示 & 菜单折叠\r\n    let [activeStep, setActiveStep] = useState(0);\r\n    let [expanded, setExpanded] = useState({ panel1: true, panel2: false, panel3: false, panel4: false });\r\n    let photoCols = useMediaQuery(useTheme().breakpoints.down('md')) ? 3 : 6;\r\n    //产品信息汇总\r\n    let urlParams = new URLSearchParams(location.pathname.replace('/product/', ''));\r\n    let [productInfo, setProductInfo] = useState({}); //旧API获取产品详情等信息\r\n    let [xmlSchema, setXmlSchema] = useState(null);\r\n    let [rtsProduct, setRtsProduct] = useState(urlParams.get('product_type') == 1); //是否是RTS产品\r\n    let [group_id] = useState(Number(urlParams.get('group_id'))); //分组id\r\n    let [cat_id, setCat_id] = useState(Number(urlParams.get('category_id'))); //类目id\r\n    let [real_product_id] = useState(Number(urlParams.get('real_product_id'))); //产品id\r\n    let [product_id] = useState(urlParams.get('product_id')); //产品id(加密)（旧版API需要）\r\n    let [editMode] = useState(urlParams.get('product_id') ? 'update' : 'add'); //编辑模式 ? 更新 ： 新建\r\n\r\n    useEffect(() => {\r\n        setLangPack(Languages[localization.locale]);\r\n        return; //语言切换\r\n    }, [localization.locale]);\r\n\r\n    useEffect(() => {\r\n        console.log('I want product editing');\r\n        if (!loginData) return navigate('/');\r\n        if (!editMode) return queryResult(false, langPack.steps.productIdError);\r\n        if (editMode === 'add') {\r\n            makeProductInfo({ cat_id }); //获取新产品 编辑模板\r\n        } else {\r\n            makeProductExample({ product_id: real_product_id }); //获取 现有产品信息  &  编辑模板\r\n            getProductInfo({ product_id }); //获取现有产品详情(旧接口)\r\n        }\r\n        return () => {\r\n            console.log('I leave product edit');\r\n            productModified = {};\r\n        }; //载入 & 清理\r\n    }, []);\r\n\r\n    //____________一些函数_______________________________________________\r\n    async function getProductInfo(obj) {\r\n        let paramObj = ma.productDetailQuery(obj);\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg || !msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg ? msg.response.result : '');\r\n        let res = ma.productDetailCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status || !result) return queryResult(status, result);\r\n        //console.log(result);\r\n        if (result.category_id) setCat_id(Number(result.category_id));\r\n        if (result.rts) setRtsProduct(true);\r\n        setProductInfo(result);\r\n    } //获取产品信息\r\n\r\n    async function uploadPhotos(photoFile) {\r\n        let currentFolder = -1;\r\n        let paramObj = ma.photoUploadQuery({ file_name: photoFile.name, image_bytes: photoFile, group_id: currentFolder });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg.response.status) return queryResult(false, langPack.common.yes);\r\n        let res = ma.photoUploadCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(false, result);\r\n        queryResult(true, langPack.steps.uploadSuccess);\r\n        return result;\r\n    }\r\n\r\n    async function makeProductInfo(obj) {\r\n        let paramObj = ma.productSchemaQuery({\r\n            param_product_top_publish_request: JSON.stringify({\r\n                ...obj,\r\n                language: localization.locale === 'enUS' ? 'en_US' : 'zh'\r\n            })\r\n        });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg || !msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg ? msg.response.result : '');\r\n        let res = ma.productSchemaCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        let schemaResult = productFn.schemaMaker(result);\r\n        if (!schemaResult) return queryResult(false, langPack.steps.uneditable);\r\n        setXmlSchema(schemaResult);\r\n    } //获取新产品 编辑模板\r\n    //👆二选一👇\r\n    async function makeProductExample(obj) {\r\n        let paramObj = ma.productSchemaRenderQuery({\r\n            param_product_top_publish_request: JSON.stringify({\r\n                ...obj,\r\n                language: localization.locale === 'enUS' ? 'en_US' : 'zh'\r\n            })\r\n        });\r\n        let msg = await fetchAPI(paramObj);\r\n        if (!msg || !msg.response.status) return queryResult(false, langPack.common.netFail + '\\n' + msg ? msg.response.result : '');\r\n        let res = ma.productSchemaRenderCheck(msg);\r\n        let { status, result } = res.response;\r\n        if (!status) return queryResult(status, result);\r\n        let schemaResult = productFn.schemaMaker(result);\r\n        if (!schemaResult) return queryResult(false, langPack.steps.uneditable);\r\n        setXmlSchema(schemaResult);\r\n    } //获取 现有产品信息  &  编辑模板\r\n\r\n    const onModified = (key, value) => {\r\n        console.log('modified', key, value);\r\n        console.log(value.xml);\r\n        productModified[key] = value;\r\n    }; //更新产品信息\r\n\r\n    async function modificationSubmission() {\r\n        //console.log(productModified);\r\n        let xmlString = productFn.schemaChecker(productModified);\r\n        if (!xmlString) return queryResult(false, langPack.steps.modificationNull);\r\n        let res = await productFn.schemaSubmit(xmlString, editMode, real_product_id, cat_id, localization.locale);\r\n        if (!res || !res.response.status) return queryResult(false, langPack.common.netFail + '\\n' + res ? res.response.result : '');\r\n        queryResult(true, editMode === 'add' ? langPack.steps.addSuccess : langPack.steps.updateSuccess);\r\n    }\r\n\r\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n        setExpanded((prev) => {\r\n            return { ...prev, [panel]: isExpanded };\r\n        });\r\n    }; //面板展开、收起\r\n    //____________Functions return JSX_______________________________________________\r\n\r\n    return (\r\n        <MainCard title=\"Product Edit --产品编辑\">\r\n            <EditStep langPack={langPack} activeStep={activeStep} setActiveStep={setActiveStep} />\r\n            {activeStep === 0 ? (\r\n                <>\r\n                    <PhotoGallery\r\n                        productFn={productFn}\r\n                        xmlSchema={xmlSchema}\r\n                        productModified={productModified}\r\n                        localization={localization}\r\n                        photoCols={photoCols}\r\n                        rowHeight={200}\r\n                        uploadPhotos={uploadPhotos}\r\n                        onModified={onModified}\r\n                        langPack={langPack}\r\n                    />\r\n                    <Accordion expanded={expanded['panel1']} onChange={handleAccordionChange('panel1')}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'coral' }}>\r\n                                {langPack.form.KeyInformation}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel1}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            <>\r\n                                <ProductSummary\r\n                                    productFn={productFn}\r\n                                    xmlSchema={xmlSchema}\r\n                                    productModified={productModified}\r\n                                    group_id={group_id}\r\n                                    langPack={langPack}\r\n                                    rtsProduct={rtsProduct}\r\n                                    onModified={onModified}\r\n                                />\r\n                            </>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion expanded={expanded['panel2']} onChange={handleAccordionChange('panel2')}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'red' }}>\r\n                                {langPack.form.ProductAttributes}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel2}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            <>\r\n                                <ProductAttribute\r\n                                    productFn={productFn}\r\n                                    xmlSchema={xmlSchema}\r\n                                    productModified={productModified}\r\n                                    langPack={langPack}\r\n                                    onModified={onModified}\r\n                                />\r\n                            </>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion expanded={expanded['panel3']} onChange={handleAccordionChange('panel3')}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'orangered' }}>\r\n                                {langPack.form.productService}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel3}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            <>\r\n                                <ProductService\r\n                                    productFn={productFn}\r\n                                    xmlSchema={xmlSchema}\r\n                                    productModified={productModified}\r\n                                    langPack={langPack}\r\n                                    onModified={onModified}\r\n                                />\r\n                            </>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion\r\n                        expanded={expanded['panel4']}\r\n                        onChange={handleAccordionChange('panel4')}\r\n                        sx={{ display: rtsProduct ? 'block' : 'none' }}\r\n                    >\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography variant=\"h2\" sx={{ width: '33%', flexShrink: 0, color: 'orangered' }}>\r\n                                {langPack.form.rtsProduct}\r\n                            </Typography>\r\n                            <Typography sx={{ color: 'text.secondary' }}>{langPack.steps.panel4}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails sx={{ border: '1px groove' }}>\r\n                            {rtsProduct ? (\r\n                                <>\r\n                                    <ProductRTS\r\n                                        productFn={productFn}\r\n                                        xmlSchema={xmlSchema}\r\n                                        productModified={productModified}\r\n                                        langPack={langPack}\r\n                                        onModified={onModified}\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <br />\r\n                </>\r\n            ) : activeStep === 1 ? (\r\n                <>\r\n                    <ProductDescription\r\n                        productFn={productFn}\r\n                        xmlSchema={xmlSchema}\r\n                        productModified={productModified}\r\n                        localization={localization}\r\n                        onModified={onModified}\r\n                        langPack={langPack}\r\n                        productInfo={productInfo}\r\n                    />\r\n                </>\r\n            ) : activeStep === 2 ? (\r\n                <>\r\n                    <Confirmation\r\n                        langPack={langPack}\r\n                        productModified={productModified}\r\n                        showDetails={true}\r\n                        modificationSubmission={modificationSubmission}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"sourceRoot":""}